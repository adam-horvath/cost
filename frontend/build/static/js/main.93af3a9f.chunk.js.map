{"version":3,"sources":["logo.svg","redux/reducers/auth.js","redux/reducers/dashboard.js","redux/reducers/query.js","redux/reducers/chart.js","redux/reducers/bubble.js","redux/reducers/offline.js","redux/reducers/index.js","components/header/TextStripMenu.js","components/header/Hamburger.js","components/header/Menu.js","redux/actions/auth.js","redux/actions/dashboard.js","redux/actions/query.js","redux/actions/chart.js","redux/actions/bubble.js","redux/actions/offline.js","components/header/Header.js","colors/Colors.js","common/Constants.js","lib/request.js","common/Util.js","components/login/Login.js","components/dashboard/ConfirmDeleteItemModal.js","common/DatePickerWrapper.js","components/dashboard/ItemModal.js","components/dashboard/Dashboard.js","components/stats/Stats.js","common/ToggleButton.js","components/query/QuerySumModal.js","components/query/QueryListModal.js","components/query/Query.js","common/Checkbox.js","components/chart/BarChart.js","components/chart/BarChartModal.js","components/chart/LineChart.js","components/chart/LineChartModal.js","components/chart/ChartConfig.js","components/bubble/Bubble.js","components/main/Main.js","registerServiceWorker.js","index.js"],"names":["module","exports","auth","state","id","localStorage","getItem","token","action","type","setItem","removeItem","dashboard","balance","items","pendingRequests","query","value","queryList","chart","chartData","key","hasOwnProperty","forEach","item","date","Number","split","sort","a","b","year","month","sumAmount","amount","bubble","text","isError","shown","bubbleParams","offline","isOffline","reducer","combineReducers","store","configureStore","TextStripMenu","className","this","props","Fragment","onClick","logout","Component","connect","Hamburger","handleClickOutside","e","menuPanelRef","contains","target","hamburgerIconRef","openMenu","setOpenMenu","onMenuClick","document","addEventListener","removeEventListener","ref","r","to","Menu","login","loginResponse","dailyData","Header","setState","dispatch","src","logo","alt","authenticated","Colors","costBlue","costRed","costGreen","lightGray","yellow","cyan","lightGreen","purple","darkGray","pink","orange","kheki","Constants","BASE_URL","PLACEHOLDER_EMAIL","PLACEHOLDER_PASSWORD","TIME_ZONE","NO_CONNECTION","INCOME_CATEGORIES","INCOME_CATEGORIES_WITH_EMPTY","COST_CATEGORIES","COST_CATEGORIES_WITH_EMPTY","MONTHS","CATEGORY_CHECKBOXES","LINE_COLORS","LINE_CHART_ANIMATION_LENGTH","BAR_CHART_ANIMATION_LENGTH","requestCreator","axios","create","url","method","data","headers","request","response","console","log","toString","indexOf","error","status","message","Util","getEndpoint","path","getMoneyString","number","Math","round","replace","getHungarianCategory","receivedCategory","getEnglishCategory","dayPagingAvailable","left","moment","isSame","right","monthPagingAvailable","d","Date","getFullYear","getMonth","now","getFormattedDate","getDate","getYears","onSelectYear","years","i","push","map","Dropdown","Item","eventKey","onSelect","getMonths","onSelectMonth","selectedYear","getInitialCheckboxStates","result","canvas","createElement","getTextWidth","font","context","getContext","measureText","width","getMaxTextWidth","stringArray","max","getMonthLabel","Login","preventDefault","email","password","onSubmit","htmlFor","onChange","name","spellCheck","autoFocus","placeholder","ConfirmDeleteItemModal","show","onHide","hide","Title","Body","Footer","Button","onCancel","variant","onConfirm","DatePickerWrapper","minDate","maxDate","selected","locale","dropdownMode","todayButton","isClearable","dateFormatCalendar","popperPlacement","dateFormat","ItemModal","getMenuItems","array","category","onSelectMenuItem","index","setCurrentItem","selectedMenuItem","onAmountChange","onDescriptionChange","description","isInvalidInput","currentItem","trim","length","saveItem","category_type","isCost","toISOString","msg","deleteItem","setConfirmModalShown","registerLocale","hu","confirmModalShown","DropdownButton","title","onDateChange","disabled","Dashboard","itemModalShown","isPagingAvailable","modalType","getData","pending_requests","momentDate","setHours","setMinutes","setSeconds","setMilliseconds","handleDateChange","changeDateWith","setDate","setPagingAvailable","showItemModal","isShown","hideItemModal","prevState","_id","toLowerCase","withRouter","Stats","stats","total_income","total_cost","balance_in_month","daily_average","daily_average_without_house","expected_cost","expected_balance_in_month","expected_balance","changeMonthWith","setMonth","isThisMonth","ToggleButton","switchActive","emptyText","leftText","rightText","active","QuerySumModal","QueryListModal","Query","activeCollectionToggle","activeCategoryTypeToggle","activeExclusionToggle","selectedCategoryIndex","activeFullMatchToggle","minAmount","maxAmount","selectedMonthIndex","sumModalShown","listModalShown","getParams","params","collection","switchActiveCollectionToggle","getSum","switchActiveCategoryTypeToggle","switchActiveExclusionToggle","onSelectCategory","switchActiveFullMatchToggle","onMinAmountChange","onMaxAmountChange","onMinDateChange","isAfter","onMaxDateChange","isBefore","getList","hideSumModal","hideListModal","Checkbox","setChecked","isChecked","BarChart","domNode","height","resize","setSize","draw","select","_groups","remove","selection","node","margin","top","bottom","label","isHorizontalLabels","parseInt","style","barWidth","isLarge","x","scaleBand","rangeRound","padding","y","scaleLinear","svg","append","attr","domain","abs","g","call","axisBottom","selectAll","nodes","getComputedTextLength","axisLeft","ticks","enter","transition","duration","ease","easeLinear","setTimeout","values","labels","reduce","prev","next","window","handleWidth","onResize","render","BarChartModal","innerWidth","numberOfBars","LineChart","legends","tooltipWidth","tooltipHeight","d3","getComputedStyle","getElementsByClassName","xScale","minValue","maxValue","min","isSum","yScale","mapX","mapY","shift","getColor","line","curve","that","on","event","onMouseOver","onMouseOut","attrTween","tweenDash","circle","tooltipText","classed","translateX","l","getTotalLength","t","LineChartModal","ChartConfig","intervalType","activeChartTypeToggle","categories","sumChecked","isButtonDisabled","isBarChartShown","isLineChartShown","getCategoryTypesParam","getCategoriesParam","slice","categoryTypes","checked","getNumberOfCheckedCategories","setSumChecked","getCheckboxes","onRadioButtonClick","switchChartType","getChartData","hideBarChartModal","hideLineChartModal","clear","Bubble","Main","exact","component","Boolean","location","hostname","match","history","createBrowserHistory","ReactDOM","fallback","I18nextProvider","i18n","basename","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.93af3a9f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.671fa4f6.svg\";","const auth = (\r\n  state = {\r\n    id: localStorage.getItem(\"cost_id\"),\r\n    token: localStorage.getItem(\"cost_token\")\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case \"LOGIN\":\r\n      localStorage.setItem(\"cost_id\", action.id);\r\n      localStorage.setItem(\"cost_token\", action.token);\r\n      return {\r\n        id: action.id,\r\n        token: action.token\r\n      };\r\n    case \"LOGOUT\":\r\n      localStorage.removeItem(\"cost_id\");\r\n      localStorage.removeItem(\"cost_token\");\r\n      return {\r\n        id: null,\r\n        token: null\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default auth;\r\n","const dashboard = (\r\n  state = {\r\n    balance: 0,\r\n    items: null,\r\n    pendingRequests: null\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case \"DAILY_DATA\":\r\n      return {\r\n        balance: action.balance,\r\n        items: action.items,\r\n        pendingRequests: action.pendingRequests\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default dashboard;\r\n","const query = (\r\n  state = {\r\n    value: null,\r\n    items: []\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case \"QUERY\":\r\n      return action.query;\r\n    case \"QUERY_LIST\":\r\n      return action.queryList;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default query;\r\n\r\n","const chart = (\r\n  state = {\r\n    chartData: null\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case \"CHART_DATA\":\r\n      for (let key in action.chartData) {\r\n        if (action.chartData.hasOwnProperty(key) && key !== 'PREV_BALANCE') {\r\n          action.chartData[key].forEach(item => {\r\n            for (let date in item) {\r\n              if (item.hasOwnProperty(date)) {\r\n                item[\"year\"] = Number(date.split(\"_\")[0]);\r\n                item[\"month\"] = Number(date.split(\"_\")[1]);\r\n                item[\"amount\"] = item[date];\r\n                delete item[date];\r\n              }\r\n            }\r\n          });\r\n          action.chartData[key].sort(\r\n            (a, b) =>\r\n              a.year < b.year\r\n                ? -1\r\n                : a.year > b.year\r\n                ? 1\r\n                : a.month < b.month\r\n                  ? -1\r\n                  : 1\r\n          );\r\n        }\r\n      }\r\n      if (action.chartData.hasOwnProperty(\"BALANCE\")) {\r\n        let sumAmount = action.chartData[\"PREV_BALANCE\"];\r\n        action.chartData[\"BALANCE\"].forEach(item => {\r\n          sumAmount += item.amount;\r\n          item[\"sumAmount\"] = sumAmount;\r\n        });\r\n      }\r\n      return action.chartData;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default chart;\r\n","const bubble = (\r\n  state = {\r\n    text: \"\",\r\n    isError: false,\r\n    shown: false\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case \"BUBBLE\":\r\n      return action.bubbleParams;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default bubble;\r\n\r\n\r\n","const offline = (\r\n  state = {\r\n    isOffline: false\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case \"OFFLINE\":\r\n      return {\r\n        isOffline: action.isOffline\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default offline;\r\n","import { combineReducers, configureStore } from \"@reduxjs/toolkit\";\r\n\r\nimport auth from \"./auth\";\r\nimport dashboard from \"./dashboard\";\r\nimport query from \"./query\";\r\nimport chart from \"./chart\";\r\nimport bubble from \"./bubble\";\r\nimport offline from \"./offline\";\r\n\r\nconst reducer = combineReducers({\r\n  auth,\r\n  dashboard,\r\n  query,\r\n  chart,\r\n  bubble,\r\n  offline\r\n});\r\n\r\nconst store = configureStore({\r\n  reducer\r\n});\r\n\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport \"./TextStripMenu.scss\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass TextStripMenu extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"text-strip-menu\">\r\n        {this.props.offline.isOffline ? (\r\n          <span className=\"menu-item\">Offline vagy!</span>\r\n        ) : (\r\n          <React.Fragment>\r\n            <span className=\"menu-item\" onClick={this.props.logout}>\r\n              <div className={\"logout-icon\"} />\r\n            </span>\r\n          </React.Fragment>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTextStripMenu.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  offline: PropTypes.shape({\r\n    isOffline: PropTypes.bool\r\n  })\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  const { offline } = state;\r\n  return { offline };\r\n};\r\n\r\nexport default connect(mapStateToProps)(TextStripMenu);\r\n","import React, { Component } from \"react\";\r\nimport \"./Hamburger.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass Hamburger extends Component {\r\n  componentDidMount() {\r\n    document.addEventListener(\"mousedown\", this.handleClickOutside);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"mousedown\", this.handleClickOutside);\r\n  }\r\n\r\n  handleClickOutside = e => {\r\n    if (\r\n      this.menuPanelRef &&\r\n      !this.menuPanelRef.contains(e.target) &&\r\n      this.hamburgerIconRef &&\r\n      !this.hamburgerIconRef.contains(e.target) &&\r\n      this.props.openMenu\r\n    ) {\r\n      this.props.setOpenMenu();\r\n    }\r\n  };\r\n\r\n  onMenuClick = () => {\r\n    this.props.setOpenMenu();\r\n  };\r\n\r\n  render() {\r\n    return this.props.offline.isOffline ? <span className=\"offline\">Offline vagy!</span> : (\r\n      <React.Fragment>\r\n        <div\r\n          ref={r => (this.hamburgerIconRef = r)}\r\n          className={`hamburger-icon ${this.props.openMenu ? \"cross\" : \"\"}`}\r\n          onClick={this.onMenuClick}\r\n        >\r\n          <div />\r\n          <div />\r\n          <div />\r\n        </div>\r\n        <div\r\n          ref={r => (this.menuPanelRef = r)}\r\n          className={`hamburger-panel ${\r\n            this.props.openMenu ? \"open\" : \"closed\"\r\n          }`}\r\n        >\r\n          <div className=\"menu-item\">\r\n            <Link to=\"/\" onClick={this.onMenuClick}>Főoldal</Link>\r\n          </div>\r\n          <div className=\"menu-item\">\r\n            <Link to=\"/stats\" onClick={this.onMenuClick}>Statisztikák</Link>\r\n          </div>\r\n          <div className=\"menu-item\">\r\n            <Link to=\"/query\" onClick={this.onMenuClick}>Lekérdezések</Link>\r\n          </div>\r\n          <div className=\"menu-item\">\r\n            <Link to=\"/chart\" onClick={this.onMenuClick}>Diagramok</Link>\r\n          </div>\r\n          <div className=\"menu-item\" onClick={this.props.logout}>\r\n            Kijelentkezés\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nHamburger.propTypes = {\r\n  openMenu: PropTypes.bool,\r\n  setOpenMenu: PropTypes.func,\r\n  logout: PropTypes.func,\r\n  offline: PropTypes.shape({\r\n    isOffline: PropTypes.bool\r\n  })\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  const { offline } = state;\r\n  return { offline };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Hamburger);\r\n","import React, { Component } from \"react\";\r\nimport \"./Menu.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Menu extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"menu row\">\r\n        <div className=\"entry-container col-sm-3\">\r\n          <Link to=\"/\" className=\"menu-entry\">\r\n            Főoldal\r\n          </Link>\r\n        </div>\r\n        <div className=\"entry-container col-sm-3\">\r\n          <Link to=\"/stats\" className=\"menu-entry\">\r\n            Statisztikák\r\n          </Link>\r\n        </div>\r\n        <div className=\"entry-container col-sm-3\">\r\n          <Link to=\"/query\" className=\"menu-entry\">\r\n            Lekérdezések\r\n          </Link>\r\n        </div>\r\n        <div className=\"entry-container col-sm-3\">\r\n          <Link to=\"/chart\" className=\"menu-entry\">\r\n            Diagramok\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nMenu.propTypes = {\r\n  offline: PropTypes.shape({\r\n    isOffline: PropTypes.bool\r\n  })\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  const { offline } = state;\r\n  return { offline };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Menu);\r\n","export const login = loginResponse => {\r\n  return {\r\n    type: \"LOGIN\",\r\n    token: loginResponse.token,\r\n    id: loginResponse.id\r\n  };\r\n};\r\n\r\nexport const logout = () => {\r\n  return {\r\n    type: \"LOGOUT\"\r\n  }\r\n};\r\n","export const dailyData = ({ balance, items, pendingRequests }) => ({\r\n  type: \"DAILY_DATA\",\r\n  balance,\r\n  items,\r\n  pendingRequests\r\n});\r\n","export const query = query => ({\r\n  type: \"QUERY\",\r\n  query\r\n});\r\n\r\nexport const queryList = queryList => ({\r\n  type: \"QUERY_LIST\",\r\n  queryList\r\n});\r\n\r\n","export const chartData = chartData => ({\r\n  type: \"CHART_DATA\",\r\n  chartData\r\n});\r\n\r\n","export const bubble = ({ text = \"\", isError = false, shown = false }) => ({\r\n  type: \"BUBBLE\",\r\n  bubbleParams: {\r\n    text,\r\n    isError,\r\n    shown\r\n  }\r\n});\r\n","export const offline = isOffline => {\r\n  return {\r\n    type: \"OFFLINE\",\r\n    isOffline\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\nimport \"./Header.scss\";\r\nimport TextStripMenu from \"./TextStripMenu\";\r\nimport logo from \"../../logo.svg\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Hamburger from \"./Hamburger\";\r\nimport Menu from \"./Menu\";\r\nimport { logout } from \"../../redux/actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Header extends Component {\r\n  state = {\r\n    openMenu: false\r\n  };\r\n\r\n  setOpenMenu = () => {\r\n    this.setState({ openMenu: !this.state.openMenu });\r\n  };\r\n\r\n  logout = () => {\r\n    const { dispatch } = this.props;\r\n    this.setState({ openMenu: false });\r\n    dispatch(logout());\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header>\r\n        <div\r\n          className={`header-top ${\r\n            this.props.offline.isOffline ? \"always-shadow\" : \"\"\r\n          }`}\r\n        >\r\n          <Link to=\"/\">\r\n            <img src={logo} className=\"logo\" alt=\"logo\" />\r\n          </Link>\r\n          <Link to=\"/\">\r\n            <h1 className=\"title\">Kassza</h1>\r\n          </Link>\r\n          {this.props.authenticated ? (\r\n            <React.Fragment>\r\n              <TextStripMenu logout={this.logout} />\r\n              <Hamburger\r\n                openMenu={this.state.openMenu}\r\n                setOpenMenu={this.setOpenMenu}\r\n                logout={this.logout}\r\n              />\r\n            </React.Fragment>\r\n          ) : null}\r\n        </div>\r\n        {this.props.authenticated && !this.props.offline.isOffline ? <Menu /> : null}\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nHeader.propTypes = {\r\n  authenticated: PropTypes.bool,\r\n  offline: PropTypes.shape({\r\n    isOffline: PropTypes.bool\r\n  })\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  const { offline } = state;\r\n  return { offline };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Header);\r\n","class Colors {\r\n  static costBlue = \"#3f51b5\";\r\n  static costRed = \"#c00\";\r\n  static costGreen = \"#0a0\";\r\n  static lightGray = \"#f5f5f5\";\r\n  static yellow = \"#e6da00\";\r\n  static cyan = \"#28f8fd\";\r\n  static lightGreen = \"#29fc88\";\r\n  static purple = \"#c927fe\";\r\n  static darkGray = \"#333\";\r\n  static pink = \"#ff2698\";\r\n  static orange = \"#ff7f27\";\r\n  static kheki = \"#808000\";\r\n}\r\n\r\nexport default Colors;","import Colors from \"../colors/Colors\";\r\n\r\nclass Constants {\r\n  static BASE_URL = \"https://horvathadam.info/api/\";\r\n  static PLACEHOLDER_EMAIL = \"Email\";\r\n  static PLACEHOLDER_PASSWORD = \"Jelszó\";\r\n  static TIME_ZONE = \"Europe/Budapest\";\r\n  static NO_CONNECTION = \"Nincs\\xa0kapcsolat!\";\r\n\r\n  static INCOME_CATEGORIES = [\r\n    \"Ajándék\",\r\n    \"Állam\",\r\n    \"Befektetés\",\r\n    \"Fizetés\",\r\n    \"Kölcsön\",\r\n    \"Egyéb\"\r\n  ];\r\n\r\n  static INCOME_CATEGORIES_WITH_EMPTY = [\r\n    \"\",\r\n    \"Ajándék\",\r\n    \"Állam\",\r\n    \"Befektetés\",\r\n    \"Fizetés\",\r\n    \"Kölcsön\",\r\n    \"Egyéb\"\r\n  ];\r\n\r\n  static COST_CATEGORIES = [\r\n    \"Ajándék\",\r\n    \"Autó\",\r\n    \"Bank\",\r\n    \"Befektetés\",\r\n    \"Bevásárlás\",\r\n    \"Gyógyszertár\",\r\n    \"Ház\",\r\n    \"Kaja\",\r\n    \"Kocsma\",\r\n    \"Kölcsön\",\r\n    \"Luxus\",\r\n    \"Rezsi\",\r\n    \"Ruha\",\r\n    \"Telefon\",\r\n    \"Utazás\",\r\n    \"Egyéb\"\r\n  ];\r\n\r\n  static COST_CATEGORIES_WITH_EMPTY = [\r\n    \"\",\r\n    \"Ajándék\",\r\n    \"Autó\",\r\n    \"Bank\",\r\n    \"Befektetés\",\r\n    \"Bevásárlás\",\r\n    \"Gyógyszertár\",\r\n    \"Ház\",\r\n    \"Kaja\",\r\n    \"Kocsma\",\r\n    \"Kölcsön\",\r\n    \"Luxus\",\r\n    \"Rezsi\",\r\n    \"Ruha\",\r\n    \"Telefon\",\r\n    \"Utazás\",\r\n    \"Egyéb\"\r\n  ];\r\n\r\n  static MONTHS = [\r\n    \"január\",\r\n    \"február\",\r\n    \"március\",\r\n    \"április\",\r\n    \"május\",\r\n    \"június\",\r\n    \"július\",\r\n    \"augusztus\",\r\n    \"szeptember\",\r\n    \"október\",\r\n    \"november\",\r\n    \"december\"\r\n  ];\r\n\r\n  static CATEGORY_CHECKBOXES = [\r\n    \"Egyenleg\",\r\n    \"Bevétel\",\r\n    \"Kiadás\",\r\n    \"Ajándék\",\r\n    \"Autó\",\r\n    \"Bank\",\r\n    \"Befektetés\",\r\n    \"Bevásárlás\",\r\n    \"Gyógyszertár\",\r\n    \"Ház\",\r\n    \"Kaja\",\r\n    \"Kocsma\",\r\n    \"Kölcsön\",\r\n    \"Luxus\",\r\n    \"Rezsi\",\r\n    \"Ruha\",\r\n    \"Telefon\",\r\n    \"Utazás\",\r\n    \"Egyéb\"\r\n  ];\r\n\r\n  static LINE_COLORS = [\r\n    Colors.yellow,\r\n    Colors.purple,\r\n    Colors.lightGreen,\r\n    Colors.darkGray,\r\n    Colors.orange,\r\n    Colors.cyan,\r\n    Colors.kheki,\r\n    Colors.pink\r\n  ];\r\n\r\n  static LINE_CHART_ANIMATION_LENGTH = 1000;\r\n  static BAR_CHART_ANIMATION_LENGTH = 700;\r\n}\r\n\r\nexport default Constants;\r\n","import axios from \"axios\";\r\n\r\nconst requestCreator = axios.create({});\r\n\r\nexport default async ({ url, method = \"POST\", data } = {}) => {\r\n  const headers = {};\r\n  const token = localStorage.getItem(\"cost_token\");\r\n\r\n  if (token) {\r\n    headers[\"Authorization\"] = `${token}`;\r\n  }\r\n\r\n  try {\r\n    const { data: response } = await requestCreator.request({\r\n      method,\r\n      url,\r\n      data,\r\n      headers\r\n    });\r\n    return response;\r\n  } catch (err) {\r\n    console.log(err.toString(), err.toString().indexOf(\"403\"));\r\n    if (err.toString().indexOf(\"403\") > -1) {\r\n      console.log(\"hey\");\r\n      return {\r\n        error: true,\r\n        status: 403,\r\n        message: \"Hitelesítési hiba!\"\r\n      };\r\n    }\r\n  }\r\n};\r\n","import Constants from \"./Constants\";\r\nimport moment from \"moment\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\nimport React from \"react\";\r\n\r\nclass Util {\r\n    static getEndpoint = path => Constants.BASE_URL + path;\r\n\r\n    static getMoneyString = number =>\r\n        number &&\r\n        Math.round(number)\r\n            .toString()\r\n            .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \");\r\n\r\n    static getHungarianCategory = receivedCategory => {\r\n        switch (receivedCategory) {\r\n            case \"INCOME\":\r\n                return \"Bevétel\";\r\n            case \"COST\":\r\n                return \"Kiadás\";\r\n            case \"BALANCE\":\r\n                return \"Egyenleg\";\r\n            case \"SALARY\":\r\n                return \"Fizetés\";\r\n            case \"STATE\":\r\n                return \"Állam\";\r\n            case \"GIFT\":\r\n                return \"Ajándék\";\r\n            case \"LOAN\":\r\n                return \"Kölcsön\";\r\n            case \"OTHER\":\r\n                return \"Egyéb\";\r\n            case \"BANK\":\r\n                return \"Bank\";\r\n            case \"CAR\":\r\n                return \"Autó\";\r\n            case \"CLOTHES\":\r\n                return \"Ruha\";\r\n            case \"DRINK\":\r\n                return \"Kocsma\";\r\n            case \"FOOD\":\r\n                return \"Kaja\";\r\n            case \"GROCERY\":\r\n                return \"Bevásárlás\";\r\n            case \"HOUSE\":\r\n                return \"Ház\";\r\n            case \"INVESTMENT\":\r\n                return \"Befektetés\";\r\n            case \"LUXURY\":\r\n                return \"Luxus\";\r\n            case \"OVERHEAD\":\r\n                return \"Rezsi\";\r\n            case \"PHARMACY\":\r\n                return \"Gyógyszertár\";\r\n            case \"PHONE\":\r\n                return \"Telefon\";\r\n            case \"TRAVEL\":\r\n                return \"Utazás\";\r\n            default:\r\n                return null;\r\n        }\r\n    };\r\n\r\n    static getEnglishCategory = receivedCategory => {\r\n        switch (receivedCategory) {\r\n            case \"Egyenleg\":\r\n                return \"BALANCE\";\r\n            case \"Bevétel\":\r\n                return \"INCOME\";\r\n            case \"Kiadás\":\r\n                return \"COST\";\r\n            case \"Fizetés\":\r\n                return \"SALARY\";\r\n            case \"Állam\":\r\n                return \"STATE\";\r\n            case \"Ajándék\":\r\n                return \"GIFT\";\r\n            case \"Kölcsön\":\r\n                return \"LOAN\";\r\n            case \"Egyéb\":\r\n                return \"OTHER\";\r\n            case \"Bank\":\r\n                return \"BANK\";\r\n            case \"Autó\":\r\n                return \"CAR\";\r\n            case \"Ruha\":\r\n                return \"CLOTHES\";\r\n            case \"Kocsma\":\r\n                return \"DRINK\";\r\n            case \"Kaja\":\r\n                return \"FOOD\";\r\n            case \"Bevásárlás\":\r\n                return \"GROCERY\";\r\n            case \"Ház\":\r\n                return \"HOUSE\";\r\n            case \"Befektetés\":\r\n                return \"INVESTMENT\";\r\n            case \"Luxus\":\r\n                return \"LUXURY\";\r\n            case \"Rezsi\":\r\n                return \"OVERHEAD\";\r\n            case \"Gyógyszertár\":\r\n                return \"PHARMACY\";\r\n            case \"Telefon\":\r\n                return \"PHONE\";\r\n            case \"Utazás\":\r\n                return \"TRAVEL\";\r\n            default:\r\n                return null;\r\n        }\r\n    };\r\n\r\n    static dayPagingAvailable = date => ({\r\n        left: !moment(date).isSame(moment(\"2015-09-30\"), \"day\"),\r\n        right: !moment(date).isSame(moment(), \"day\")\r\n    });\r\n\r\n    static monthPagingAvailable = date => {\r\n        const d = new Date(date.getFullYear(), date.getMonth(), 1);\r\n        const now = new Date();\r\n        return {\r\n            left: !moment(d).isSame(moment(\"2015-09-01\"), \"day\"),\r\n            right: !(\r\n                date.getFullYear() === now.getFullYear() &&\r\n                date.getMonth() === now.getMonth()\r\n            )\r\n        };\r\n    };\r\n\r\n    static getFormattedDate = date =>\r\n        date.getFullYear() +\r\n        \". \" +\r\n        Constants.MONTHS[date.getMonth()] +\r\n        \" \" +\r\n        date.getDate() +\r\n        \".\";\r\n\r\n    static getYears = onSelectYear => {\r\n        const years = [];\r\n        for (let i = new Date().getFullYear(); i >= 2015; i--) {\r\n            years.push(i);\r\n        }\r\n        return years.map((year, i) => (\r\n            <Dropdown.Item\r\n                eventKey={i}\r\n                key={i}\r\n                onSelect={() => onSelectYear(year)}\r\n            >\r\n                {year}\r\n            </Dropdown.Item>\r\n        ));\r\n    };\r\n\r\n    static getMonths = (onSelectMonth, selectedYear) => {\r\n        return Constants.MONTHS.map((month, i) => {\r\n            const now = new Date();\r\n            if (\r\n                (selectedYear === now.getFullYear() && i > now.getMonth()) ||\r\n                (selectedYear === 2015 && i < 8)\r\n            )\r\n                return null;\r\n            return (\r\n                <Dropdown.Item\r\n                    eventKey={i}\r\n                    key={i}\r\n                    onSelect={() => onSelectMonth(i)}\r\n                >\r\n                    {month}\r\n                </Dropdown.Item>\r\n            );\r\n        });\r\n    };\r\n\r\n    static getInitialCheckboxStates = () => {\r\n        const result = [];\r\n        Constants.CATEGORY_CHECKBOXES.forEach(() => result.push(false));\r\n        return result;\r\n    };\r\n\r\n    static canvas = document.createElement(\"canvas\");\r\n\r\n    static getTextWidth = (text, font) => {\r\n        const context = Util.canvas.getContext(\"2d\");\r\n        context.font = font;\r\n        const metrics = context.measureText(text);\r\n        return metrics.width;\r\n    };\r\n\r\n    static getMaxTextWidth = (stringArray, font) =>\r\n        Math.max(...stringArray.map(text => Util.getTextWidth(text, font)));\r\n\r\n    static getMonthLabel = (year, month) =>\r\n        year + \". \" + Constants.MONTHS[month];\r\n}\r\n\r\nexport default Util;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./Login.scss\";\r\nimport Constants from \"../../common/Constants\";\r\nimport request from \"../../lib/request\";\r\nimport Util from \"../../common/Util\";\r\nimport {bubble, login, logout, offline} from \"../../redux/actions\";\r\n\r\nclass Login extends Component {\r\n  login = async e => {\r\n    const { dispatch } = this.props;\r\n    e.preventDefault();\r\n    const response = await request({\r\n      url: Util.getEndpoint(\"login\"),\r\n      data: {\r\n        email: this.email,\r\n        password: this.password\r\n      }\r\n    });\r\n    if (!response || response.error) {\r\n      if (response && response.error) {\r\n        dispatch(\r\n          bubble({\r\n            shown: true,\r\n            text: response.status + \" \" + response.message,\r\n            isError: true\r\n          })\r\n        );\r\n        dispatch(logout());\r\n      } else {\r\n        dispatch(\r\n          bubble({ shown: true, text: Constants.NO_CONNECTION, isError: true })\r\n        );\r\n        dispatch(offline(true));\r\n      }\r\n    } else {\r\n      dispatch(offline(false));\r\n      dispatch(login(response));\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"login\">\r\n        <form onSubmit={this.login} className=\"login-container\">\r\n          <div className=\"input-box\">\r\n            <div>Email</div>\r\n            <label htmlFor={\"email\"} className=\"email-label\">\r\n              <input\r\n                onChange={e => (this.email = e.target.value)}\r\n                id={\"email\"}\r\n                name={\"email\"}\r\n                spellCheck={false}\r\n                autoFocus={true}\r\n                value={this.email}\r\n                placeholder={Constants.PLACEHOLDER_EMAIL}\r\n                type={\"email\"}\r\n              />\r\n            </label>\r\n            <div>Jelszó</div>\r\n            <label htmlFor={\"password\"} className=\"password-label\">\r\n              <input\r\n                onChange={e => (this.password = e.target.value)}\r\n                id={\"password\"}\r\n                name={\"password\"}\r\n                spellCheck={false}\r\n                value={this.password}\r\n                placeholder={Constants.PLACEHOLDER_PASSWORD}\r\n                type={\"password\"}\r\n              />\r\n            </label>\r\n            <button type=\"submit\">Bejelentkezés</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect()(Login);\r\n","import React, { Component } from \"react\";\r\nimport \"../../styles/Modal.scss\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\n\r\nclass ConfirmDeleteItemModal extends Component {\r\n  render() {\r\n    return (\r\n      <Modal\r\n        className=\"confirm-modal\"\r\n        show={this.props.shown}\r\n        onHide={this.props.hide}\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title>Tétel törlése</Modal.Title>\r\n          <div className=\"delete-icon\" />\r\n        </Modal.Header>\r\n\r\n        <Modal.Body>Biztosan törölni szeretnéd?</Modal.Body>\r\n\r\n        <Modal.Footer>\r\n          <Button onClick={this.props.onCancel}>Mégse</Button>\r\n          <Button variant=\"primary\" onClick={this.props.onConfirm}>\r\n            OK\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nConfirmDeleteItemModal.propTypes = {\r\n  shown: PropTypes.bool,\r\n  onCancel: PropTypes.func,\r\n  onConfirm: PropTypes.func\r\n};\r\n\r\nexport default ConfirmDeleteItemModal;\r\n","import React from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nexport const DatePickerWrapper = ({\r\n    date,\r\n    onChange,\r\n    minDate = new Date(\"2015-09-30\"),\r\n    maxDate = new Date()\r\n}) => (\r\n    <DatePicker\r\n        selected={date}\r\n        onChange={onChange}\r\n        locale=\"hu\"\r\n        dropdownMode={\"select\"}\r\n        todayButton={\"Mai nap\"}\r\n        isClearable={false}\r\n        minDate={minDate}\r\n        maxDate={maxDate}\r\n        dateFormatCalendar=\"yyyy. MMMM\"\r\n        popperPlacement={\"center\"}\r\n        dateFormat={\"yyyy. MM. dd.\"}\r\n    />\r\n);\r\n","import React, { Component } from \"react\";\r\nimport \"../../styles/Modal.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, Modal, DropdownButton, Dropdown } from \"react-bootstrap\";\r\nimport Constants from \"../../common/Constants\";\r\nimport request from \"../../lib/request\";\r\nimport Util from \"../../common/Util\";\r\nimport ConfirmDeleteItemModal from \"./ConfirmDeleteItemModal\";\r\nimport { registerLocale } from \"react-datepicker\";\r\nimport \"../../styles/DatePicker.scss\";\r\nimport \"../../styles/Dropdown.scss\";\r\nimport { bubble, logout, offline } from \"../../redux/actions\";\r\nimport hu from \"date-fns/locale/hu\";\r\nimport { DatePickerWrapper } from \"../../common/DatePickerWrapper\";\r\n\r\nclass ItemModal extends Component {\r\n    componentDidMount() {\r\n        registerLocale(\"hu\", hu);\r\n    }\r\n\r\n    getMenuItems = array => {\r\n        return array.map((category, i) => (\r\n            <Dropdown.Item\r\n                eventKey={i}\r\n                key={i}\r\n                onSelect={() => this.onSelectMenuItem(i)}\r\n            >\r\n                {category}\r\n            </Dropdown.Item>\r\n        ));\r\n    };\r\n\r\n    onSelectMenuItem = index => {\r\n        this.props.setCurrentItem({ selectedMenuItem: index });\r\n    };\r\n\r\n    onAmountChange = e => {\r\n        this.props.setCurrentItem({ amount: e.target.value });\r\n    };\r\n\r\n    onDescriptionChange = e => {\r\n        this.props.setCurrentItem({ description: e.target.value });\r\n    };\r\n\r\n    isInvalidInput = () =>\r\n        this.props.currentItem.amount\r\n            .toString()\r\n            .trim()\r\n            .replace(/\\d/g, \"\").length ||\r\n        !this.props.currentItem.amount.toString().trim().length;\r\n\r\n    saveItem = async () => {\r\n        const { dispatch } = this.props;\r\n        const data = {\r\n            category_type: this.props.currentItem.isCost ? \"COST\" : \"INCOME\",\r\n            date: this.props.date.toISOString(),\r\n            category: Util.getEnglishCategory(\r\n                this.props.currentItem.isCost\r\n                    ? Constants.COST_CATEGORIES[\r\n                          this.props.currentItem.selectedMenuItem\r\n                      ]\r\n                    : Constants.INCOME_CATEGORIES[\r\n                          this.props.currentItem.selectedMenuItem\r\n                      ]\r\n            ),\r\n            amount: this.props.currentItem.amount,\r\n            description: this.props.currentItem.description\r\n        };\r\n        if (this.props.currentItem.id) {\r\n            data[\"id\"] = this.props.currentItem.id;\r\n        }\r\n        const response = await request({\r\n            url: Util.getEndpoint(\"v1/item\"),\r\n            method: this.props.type === \"ADD\" ? \"POST\" : \"PUT\",\r\n            data\r\n        });\r\n        if (!response || response.error) {\r\n            if (response && response.error) {\r\n                dispatch(\r\n                    bubble({\r\n                        shown: true,\r\n                        text: response.status + \" \" + response.message,\r\n                        isError: true\r\n                    })\r\n                );\r\n                dispatch(logout());\r\n            } else {\r\n                dispatch(\r\n                    bubble({\r\n                        shown: true,\r\n                        text: Constants.NO_CONNECTION,\r\n                        isError: true\r\n                    })\r\n                );\r\n                dispatch(offline(true));\r\n            }\r\n        } else {\r\n            dispatch(offline(false));\r\n            dispatch(bubble({ shown: true, text: response.msg }));\r\n            this.props.hide();\r\n        }\r\n    };\r\n\r\n    deleteItem = () => {\r\n        this.props.setConfirmModalShown(true);\r\n    };\r\n\r\n    onCancel = () => {\r\n        this.props.setConfirmModalShown(false);\r\n    };\r\n\r\n    onConfirm = async () => {\r\n        const { dispatch } = this.props;\r\n        this.props.setConfirmModalShown(false);\r\n        const response = await request({\r\n            url: Util.getEndpoint(\"v1/item/\" + this.props.currentItem.id),\r\n            method: \"DELETE\"\r\n        });\r\n        if (!response || response.error) {\r\n            if (response && response.error) {\r\n                dispatch(\r\n                    bubble({\r\n                        shown: true,\r\n                        text: response.status + \" \" + response.message,\r\n                        isError: true\r\n                    })\r\n                );\r\n                dispatch(logout());\r\n            } else {\r\n                dispatch(\r\n                    bubble({\r\n                        shown: true,\r\n                        text: Constants.NO_CONNECTION,\r\n                        isError: true\r\n                    })\r\n                );\r\n                dispatch(offline(true));\r\n            }\r\n        } else {\r\n            dispatch(offline(false));\r\n            dispatch(bubble({ shown: true, text: response.msg }));\r\n            this.props.hide();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Modal\r\n                    show={this.props.shown && !this.props.confirmModalShown}\r\n                    onHide={this.props.hide}\r\n                >\r\n                    <Modal.Header>\r\n                        <Modal.Title>\r\n                            {this.props.type === \"UPDATE\"\r\n                                ? \"Tétel frissítése\"\r\n                                : this.props.currentItem.isCost\r\n                                    ? \"Költség felvétele\"\r\n                                    : \"Bevétel felvétele\"}\r\n                        </Modal.Title>\r\n                        {this.props.type === \"UPDATE\" ? (\r\n                            <div\r\n                                className=\"delete-icon\"\r\n                                onClick={this.deleteItem}\r\n                            />\r\n                        ) : null}\r\n                    </Modal.Header>\r\n\r\n                    <Modal.Body>\r\n                        <form onSubmit={this.saveItem}>\r\n                            <div className=\"label amount-label\">Összeg</div>\r\n                            <input\r\n                                className=\"amount\"\r\n                                type=\"number\"\r\n                                value={this.props.currentItem.amount}\r\n                                onChange={e => this.onAmountChange(e)}\r\n                            />\r\n                            <div className=\"label category-label\">\r\n                                Kategória\r\n                            </div>\r\n                            <DropdownButton\r\n                                title={\r\n                                    this.props.currentItem.isCost\r\n                                        ? Constants.COST_CATEGORIES[\r\n                                              this.props.currentItem\r\n                                                  .selectedMenuItem\r\n                                          ]\r\n                                        : Constants.INCOME_CATEGORIES[\r\n                                              this.props.currentItem\r\n                                                  .selectedMenuItem\r\n                                          ]\r\n                                }\r\n                                id=\"dropdown\"\r\n                            >\r\n                                {this.getMenuItems(\r\n                                    this.props.currentItem.isCost\r\n                                        ? Constants.COST_CATEGORIES\r\n                                        : Constants.INCOME_CATEGORIES\r\n                                )}\r\n                            </DropdownButton>\r\n                            <div className=\"label description-label\">\r\n                                Leírás\r\n                            </div>\r\n                            <input\r\n                                className=\"description\"\r\n                                value={this.props.currentItem.description}\r\n                                onChange={e => this.onDescriptionChange(e)}\r\n                            />\r\n                            <div className=\"label date-label\">Dátum</div>\r\n                            <div className=\"date-picker-container date-picker-in-modal\">\r\n                                <DatePickerWrapper\r\n                                    date={this.props.date}\r\n                                    onChange={this.props.onDateChange}\r\n                                />\r\n                            </div>\r\n                        </form>\r\n                    </Modal.Body>\r\n\r\n                    <Modal.Footer className={\"flex-nowrap\"}>\r\n                        <Button onClick={this.props.hide} variant=\"secondary\">Mégse</Button>\r\n                        <Button\r\n                            className=\"btn-primary\"\r\n                            type=\"submit\"\r\n                            onClick={this.saveItem}\r\n                            disabled={!!this.isInvalidInput()}\r\n                        >\r\n                            OK\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n\r\n                {this.props.confirmModalShown && (\r\n                    <ConfirmDeleteItemModal\r\n                        shown={this.props.confirmModalShown}\r\n                        onCancel={this.onCancel}\r\n                        onConfirm={this.onConfirm}\r\n                    />\r\n                )}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nItemModal.propTypes = {\r\n    shown: PropTypes.bool,\r\n    confirmModalShown: PropTypes.bool,\r\n    setConfirmModalShown: PropTypes.func,\r\n    currentItem: PropTypes.shape({\r\n        id: PropTypes.string,\r\n        isCost: PropTypes.bool,\r\n        amount: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n        selectedMenuItem: PropTypes.number,\r\n        description: PropTypes.string\r\n    }),\r\n    hide: PropTypes.func,\r\n    save: PropTypes.func,\r\n    date: PropTypes.object,\r\n    type: PropTypes.oneOf([\"ADD\", \"UPDATE\"]),\r\n    onDateChange: PropTypes.func\r\n};\r\n\r\nexport default connect()(ItemModal);\r\n","import React, { Component } from \"react\";\r\nimport \"./Dashboard.scss\";\r\nimport \"../../styles/ItemList.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport request from \"../../lib/request\";\r\nimport Util from \"../../common/Util\";\r\nimport Constants from \"../../common/Constants\";\r\nimport { dailyData, bubble, offline, logout } from \"../../redux/actions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { registerLocale } from \"react-datepicker\";\r\nimport \"../../styles/DatePicker.scss\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport \"moment/locale/hu\";\r\nimport ItemModal from \"./ItemModal\";\r\nimport hu from \"date-fns/locale/hu\";\r\nimport { withRouter } from \"react-router\";\r\nimport { DatePickerWrapper } from \"../../common/DatePickerWrapper\";\r\n\r\nclass Dashboard extends Component {\r\n    state = {\r\n        itemModalShown: false,\r\n        confirmModalShown: false,\r\n        date: new Date(),\r\n        isPagingAvailable: {\r\n            left: true,\r\n            right: false\r\n        },\r\n        modalType: \"ADD\",\r\n        currentItem: {\r\n            id: \"\",\r\n            isCost: true,\r\n            amount: \"\",\r\n            selectedMenuItem: 0,\r\n            description: \"\"\r\n        }\r\n    };\r\n\r\n\r\n\r\n    getData = async () => {\r\n        const { dispatch } = this.props;\r\n        const response = await request({\r\n            url: Util.getEndpoint(\"v1/main\"),\r\n            data: { date: this.state.date.toISOString() }\r\n        });\r\n        if (!response || response.error) {\r\n            if (response && response.error) {\r\n                dispatch(\r\n                    bubble({\r\n                        shown: true,\r\n                        text: response.status + \" \" + response.message,\r\n                        isError: true\r\n                    })\r\n                );\r\n                dispatch(logout());\r\n            } else {\r\n                dispatch(\r\n                    bubble({\r\n                        shown: true,\r\n                        text: Constants.NO_CONNECTION,\r\n                        isError: true\r\n                    })\r\n                );\r\n                dispatch(offline(true));\r\n            }\r\n        } else {\r\n            dispatch(offline(false));\r\n            dispatch(\r\n                dailyData({\r\n                    balance: response.balance,\r\n                    items: response.items,\r\n                    pendingRequests: response.pending_requests\r\n                })\r\n            );\r\n        }\r\n    };\r\n    onDateChange = async momentDate => {\r\n        const date = new Date(momentDate);\r\n        date.setHours(6);\r\n        date.setMinutes(0);\r\n        date.setSeconds(0);\r\n        date.setMilliseconds(0);\r\n        await this.setState({ date });\r\n        this.handleDateChange();\r\n    };\r\n    changeDateWith = async value => {\r\n        const date = this.state.date;\r\n        date.setDate(this.state.date.getDate() + value);\r\n        await this.setState({ date: date });\r\n        this.handleDateChange();\r\n    };\r\n    handleDateChange = () => {\r\n        this.setPagingAvailable();\r\n        this.getData();\r\n    };\r\n    showItemModal = (currentItem, modalType) => {\r\n        this.setState({\r\n            itemModalShown: true,\r\n            currentItem: { ...this.state.currentItem, ...currentItem },\r\n            modalType\r\n        });\r\n    };\r\n    setConfirmModalShown = isShown => {\r\n        this.setState({ confirmModalShown: isShown });\r\n    };\r\n    hideItemModal = () => {\r\n        this.setState({\r\n            itemModalShown: false,\r\n            currentItem: {\r\n                id: \"\",\r\n                isCost: true,\r\n                amount: \"\",\r\n                selectedMenuItem: 0,\r\n                description: \"\"\r\n            }\r\n        });\r\n        this.getData();\r\n    };\r\n    setCurrentItem = currentItem => {\r\n        this.setState(prevState => ({\r\n            currentItem: { ...prevState.currentItem, ...currentItem }\r\n        }));\r\n    };\r\n    setPagingAvailable = () => {\r\n        this.setState({\r\n            isPagingAvailable: Util.dayPagingAvailable(this.state.date)\r\n        });\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.getData();\r\n        registerLocale(\"hu\", hu);\r\n    }\r\n\r\n    render() {\r\n        return this.props.dashboard.items ? (\r\n            <div className=\"dashboard\">\r\n                <div className=\"balance\">\r\n                    Egyenleg:{\" \"}\r\n                    {Util.getMoneyString(this.props.dashboard.balance)}\r\n                </div>\r\n                <div className=\"add-item-container\">\r\n                    <div\r\n                        className=\"add-container add-cost-container\"\r\n                        onClick={() =>\r\n                            this.showItemModal({ isCost: true }, \"ADD\")\r\n                        }\r\n                    >\r\n                        <div className=\"add-icon add-cost-icon\" />\r\n                        <div className=\"add-label add-cost-label\">Kiadás</div>\r\n                    </div>\r\n                    <div\r\n                        className=\"add-container add-income-container\"\r\n                        onClick={() =>\r\n                            this.showItemModal({ isCost: false }, \"ADD\")\r\n                        }\r\n                    >\r\n                        <div className=\"add-label add-income-label\">\r\n                            Bevétel\r\n                        </div>\r\n                        <div className=\"add-icon add-income-icon\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"date-picker-container\">\r\n                    {this.state.isPagingAvailable.left ? (\r\n                        <div\r\n                            className=\"paginate visible left\"\r\n                            onClick={() => this.changeDateWith(-1)}\r\n                        />\r\n                    ) : (\r\n                        <div className=\"paginate left\" />\r\n                    )}\r\n                    <DatePickerWrapper\r\n                        date={this.state.date}\r\n                        onChange={this.onDateChange}\r\n                    />\r\n                    {this.state.isPagingAvailable.right ? (\r\n                        <div\r\n                            className=\"paginate visible right\"\r\n                            onClick={() => this.changeDateWith(1)}\r\n                        />\r\n                    ) : (\r\n                        <div className=\"paginate right\" />\r\n                    )}\r\n                </div>\r\n                <div className=\"item-list\">\r\n                    {this.props.dashboard.items.map(item => (\r\n                        <div\r\n                            className=\"item\"\r\n                            key={this.props.dashboard.items.indexOf(item)}\r\n                            onClick={() =>\r\n                                this.showItemModal(\r\n                                    {\r\n                                        id: item._id,\r\n                                        isCost:\r\n                                            item.category_type.toLowerCase() ===\r\n                                            \"cost\",\r\n                                        amount: item.amount,\r\n                                        selectedMenuItem:\r\n                                            item.category_type.toLowerCase() ===\r\n                                            \"cost\"\r\n                                                ? Constants.COST_CATEGORIES.indexOf(\r\n                                                      Util.getHungarianCategory(\r\n                                                          item.category\r\n                                                      )\r\n                                                  )\r\n                                                : Constants.INCOME_CATEGORIES.indexOf(\r\n                                                      Util.getHungarianCategory(\r\n                                                          item.category\r\n                                                      )\r\n                                                  ),\r\n                                        description: item.description\r\n                                    },\r\n                                    \"UPDATE\"\r\n                                )\r\n                            }\r\n                        >\r\n                            <div\r\n                                className={`arrow-icon ${item.category_type.toLowerCase()}`}\r\n                            />\r\n                            <div className=\"item-texts\">\r\n                                <div className=\"amount\">\r\n                                    {Util.getMoneyString(item.amount)}\r\n                                </div>\r\n                                <div className=\"description\">\r\n                                    {item.description}\r\n                                </div>\r\n                            </div>\r\n                            <div\r\n                                className={`category-icon ${item.category.toLowerCase()}`}\r\n                            />\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                {this.state.itemModalShown && (\r\n                    <ItemModal\r\n                        shown={this.state.itemModalShown}\r\n                        confirmModalShown={this.state.confirmModalShown}\r\n                        setConfirmModalShown={this.setConfirmModalShown}\r\n                        hide={this.hideItemModal}\r\n                        currentItem={this.state.currentItem}\r\n                        date={this.state.date}\r\n                        type={this.state.modalType}\r\n                        setCurrentItem={this.setCurrentItem}\r\n                        onDateChange={this.onDateChange}\r\n                    />\r\n                )}\r\n            </div>\r\n        ) : null;\r\n    }\r\n}\r\n\r\nDashboard.propTypes = {\r\n    dashboard: PropTypes.shape({\r\n        balance: PropTypes.number,\r\n        items: PropTypes.arrayOf(\r\n            PropTypes.shape({\r\n                _id: PropTypes.string,\r\n                group_id: PropTypes.string,\r\n                amount: PropTypes.number,\r\n                description: PropTypes.string,\r\n                category: PropTypes.string,\r\n                category_type: PropTypes.string,\r\n                date: PropTypes.string,\r\n                year: PropTypes.number,\r\n                month: PropTypes.number,\r\n                day: PropTypes.number,\r\n                __v: PropTypes.number\r\n            })\r\n        ),\r\n        pendingRequests: PropTypes.arrayOf(PropTypes.string)\r\n    }),\r\n    bubble: PropTypes.shape({\r\n        shown: PropTypes.bool,\r\n        text: PropTypes.string,\r\n        isError: PropTypes.bool\r\n    })\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    const { dashboard, bubble } = state;\r\n    return { dashboard, bubble };\r\n};\r\n\r\nexport default connect(mapStateToProps)(withRouter(Dashboard));\r\n","import React, { Component } from \"react\";\r\nimport \"./Stats.scss\";\r\nimport request from \"../../lib/request\";\r\nimport Util from \"../../common/Util\";\r\nimport Constants from \"../../common/Constants\";\r\nimport { bubble, offline, logout } from \"../../redux/actions\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Stats extends Component {\r\n  state = {\r\n    date: new Date(),\r\n    isPagingAvailable: {\r\n      left: true,\r\n      right: false\r\n    },\r\n    stats: {\r\n      balance: \"\",\r\n      total_income: \"\",\r\n      total_cost: \"\",\r\n      balance_in_month: \"\",\r\n      daily_average: \"\",\r\n      daily_average_without_house: \"\",\r\n      expected_cost: \"\",\r\n      expected_balance_in_month: \"\",\r\n      expected_balance: \"\"\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getData();\r\n  }\r\n\r\n  getData = async () => {\r\n    const { dispatch } = this.props;\r\n    const response = await request({\r\n      url: Util.getEndpoint(\"v1/stats\"),\r\n      data: { date: this.state.date.toISOString() }\r\n    });\r\n    if (!response || response.error) {\r\n      if (response && response.error) {\r\n        dispatch(\r\n          bubble({\r\n            shown: true,\r\n            text: response.status + \" \" + response.message,\r\n            isError: true\r\n          })\r\n        );\r\n        dispatch(logout());\r\n      } else {\r\n        dispatch(\r\n          bubble({ shown: true, text: Constants.NO_CONNECTION, isError: true })\r\n        );\r\n        dispatch(offline(true));\r\n      }\r\n    } else {\r\n      dispatch(offline(false));\r\n      this.setState({ stats: response });\r\n    }\r\n  };\r\n\r\n  changeMonthWith = async value => {\r\n    const date = this.state.date;\r\n    date.setMonth(this.state.date.getMonth() + value);\r\n    date.setDate(this.isThisMonth(date) ? new Date().getDate() : 28);\r\n    await this.setState({ date: date });\r\n    this.setPagingAvailable();\r\n    this.getData();\r\n  };\r\n\r\n  isThisMonth = date =>\r\n    date.getFullYear() === new Date().getFullYear() &&\r\n    date.getMonth() === new Date().getMonth();\r\n\r\n  setPagingAvailable = () => {\r\n    this.setState({\r\n      isPagingAvailable: Util.monthPagingAvailable(this.state.date)\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"stats-container\">\r\n        <div className=\"plain-item\">\r\n          <div className=\"stats-label\">Egyenleg</div>\r\n          <div className=\"amount\">\r\n            {Util.getMoneyString(this.state.stats.balance)}\r\n          </div>\r\n        </div>\r\n        <div className=\"green-item\">\r\n          <div className=\"stats-label\">Havi bevétel</div>\r\n          <div className=\"amount\">\r\n            {Util.getMoneyString(this.state.stats.total_income)}\r\n          </div>\r\n        </div>\r\n        <div className=\"red-item\">\r\n          <div className=\"stats-label\">Havi kiadás</div>\r\n          <div className=\"amount\">\r\n            {Util.getMoneyString(this.state.stats.total_cost)}\r\n          </div>\r\n        </div>\r\n        <div className=\"plain-item\">\r\n          <div className=\"stats-label\">Havi egyenleg</div>\r\n          <div className=\"amount\">\r\n            {Util.getMoneyString(this.state.stats.balance_in_month)}\r\n          </div>\r\n        </div>\r\n        <div className=\"red-item\">\r\n          <div className=\"stats-label\">Napi átlag kiadás</div>\r\n          <div className=\"amount\">\r\n            {Util.getMoneyString(this.state.stats.daily_average)}\r\n          </div>\r\n        </div>\r\n        <div className=\"red-item\">\r\n          <div className=\"stats-label\">Változó kiadások napi átlaga</div>\r\n          <div className=\"amount\">\r\n            {Util.getMoneyString(this.state.stats.daily_average_without_house)}\r\n          </div>\r\n        </div>\r\n        <div className=\"plain-item\">\r\n          <div className=\"stats-label\">Várható kiadás</div>\r\n          <div className=\"amount\">\r\n            {Util.getMoneyString(this.state.stats.expected_cost)}\r\n          </div>\r\n        </div>\r\n        <div className=\"plain-item\">\r\n          <div className=\"stats-label\">Várható havi egyenleg</div>\r\n          <div className=\"amount\">\r\n            {Util.getMoneyString(this.state.stats.expected_balance_in_month)}\r\n          </div>\r\n        </div>\r\n        <div className=\"plain-item\">\r\n          <div className=\"stats-label\">Várható hó végi egyenleg</div>\r\n          <div className=\"amount\">\r\n            {Util.getMoneyString(this.state.stats.expected_balance)}\r\n          </div>\r\n        </div>\r\n        <div className=\"month-pager-container\">\r\n          {this.state.isPagingAvailable.left ? (\r\n            <div\r\n              className=\"paginate visible left\"\r\n              onClick={() => this.changeMonthWith(-1)}\r\n            />\r\n          ) : (\r\n            <div className=\"paginate left\" />\r\n          )}\r\n          <div className=\"month-pager\">\r\n            {this.state.date.getFullYear()}.{\" \"}\r\n            {Constants.MONTHS[this.state.date.getMonth()]}\r\n          </div>\r\n          {this.state.isPagingAvailable.right ? (\r\n            <div\r\n              className=\"paginate visible right\"\r\n              onClick={() => this.changeMonthWith(1)}\r\n            />\r\n          ) : (\r\n            <div className=\"paginate right\" />\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nStats.propTypes = {\r\n  bubble: PropTypes.shape({\r\n    shown: PropTypes.bool,\r\n    text: PropTypes.string,\r\n    isError: PropTypes.bool\r\n  })\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  const { bubble } = state;\r\n  return { bubble };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Stats);\r\n","import React, { Component } from \"react\";\r\nimport \"./ToggleButton.scss\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass ToggleButton extends Component {\r\n  switchActive = () => this.props.switchActive();\r\n\r\n  emptyText = () => {\r\n    return (\r\n      \"\" +\r\n      (!this.props.leftText.length\r\n        ? \"left\"\r\n        : !this.props.rightText.length\r\n          ? \"right\"\r\n          : \"\")\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"toggle-button-container\">\r\n        <div\r\n          className={`button-container left\r\n            ${this.props.active === \"left\" ? \"active\" : \"\"}\r\n            ${this.emptyText() === \"left\" ? \"empty\" : \"\"}\r\n            ${this.emptyText() === \"right\" ? \"empty-other\" : \"\"}\r\n          `}\r\n          onClick={this.switchActive}\r\n        >\r\n          <div\r\n            className={`button left ${\r\n              this.props.active === \"left\" ? \"active\" : \"\"\r\n            }`}\r\n          />\r\n          <div className=\"button-text left\">{this.props.leftText}</div>\r\n        </div>\r\n        <div\r\n          className={`button-container right\r\n            ${this.props.active === \"left\" ? \"\" : \"active\"}\r\n            ${this.emptyText() === \"right\" ? \"empty\" : \"\"}\r\n            ${this.emptyText() === \"left\" ? \"empty-other\" : \"\"}\r\n          `}\r\n          onClick={this.switchActive}\r\n        >\r\n          <div\r\n            className={`button right ${\r\n              this.props.active === \"left\" ? \"\" : \"active\"\r\n            }`}\r\n          />\r\n          <div className=\"button-text right\">{this.props.rightText}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nToggleButton.propTypes = {\r\n  active: PropTypes.string.isRequired,\r\n  switchActive: PropTypes.func.isRequired,\r\n  leftText: PropTypes.string.isRequired,\r\n  rightText: PropTypes.string.isRequired\r\n};\r\n\r\nexport default ToggleButton;\r\n","import React, { Component } from \"react\";\r\nimport \"../../styles/Modal.scss\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport Util from \"../../common/Util\";\r\n\r\nclass QuerySumModal extends Component {\r\n  render() {\r\n    return (\r\n      <Modal className=\"ok-modal\" show={this.props.shown} onHide={this.props.hide}>\r\n        <Modal.Header>\r\n          <Modal.Title>A lekérdezés eredménye</Modal.Title>\r\n        </Modal.Header>\r\n\r\n        <Modal.Body>Összeg: {Util.getMoneyString(this.props.value)}</Modal.Body>\r\n\r\n        <Modal.Footer>\r\n          <Button variant=\"primary\" type=\"submit\" onClick={this.props.hide}>\r\n            OK\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nQuerySumModal.propTypes = {\r\n  value: PropTypes.number,\r\n  shown: PropTypes.bool,\r\n  hide: PropTypes.func\r\n};\r\n\r\nexport default QuerySumModal;\r\n","import React, { Component } from \"react\";\r\nimport \"../../styles/Modal.scss\";\r\nimport \"../../styles/ItemList.scss\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport Util from \"../../common/Util\";\r\n\r\nclass QueryListModal extends Component {\r\n  render() {\r\n    return (\r\n      <Modal\r\n        className=\"ok-modal item-list-modal\"\r\n        show={this.props.shown}\r\n        onHide={this.props.hide}\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title>A lekérdezés eredménye</Modal.Title>\r\n        </Modal.Header>\r\n\r\n        <Modal.Body>\r\n          <div className=\"item-list\">\r\n            {this.props.items.map(\r\n              item =>\r\n                item.type === \"header\" ? (\r\n                  <div\r\n                    className=\"cost-label\"\r\n                    key={this.props.items.indexOf(item)}\r\n                  >\r\n                    {Util.getFormattedDate(new Date(item.date))}\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"item\" key={this.props.items.indexOf(item)}>\r\n                    <div\r\n                      className={`arrow-icon ${item.category_type.toLowerCase()}`}\r\n                    />\r\n                    <div className=\"item-texts\">\r\n                      <div className=\"amount\">\r\n                        {Util.getMoneyString(item.amount)}\r\n                      </div>\r\n                      <div className=\"description\">{item.description}</div>\r\n                    </div>\r\n                    <div\r\n                      className={`category-icon ${item.category.toLowerCase()}`}\r\n                    />\r\n                  </div>\r\n                )\r\n            )}\r\n          </div>\r\n        </Modal.Body>\r\n\r\n        <Modal.Footer>\r\n          <Button variant=\"primary\" type=\"submit\" onClick={this.props.hide}>\r\n            OK\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nQueryListModal.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.oneOfType([\r\n      PropTypes.shape({\r\n        _id: PropTypes.string,\r\n        group_id: PropTypes.string,\r\n        amount: PropTypes.number,\r\n        description: PropTypes.string,\r\n        category: PropTypes.string,\r\n        category_type: PropTypes.string,\r\n        date: PropTypes.string,\r\n        year: PropTypes.number,\r\n        month: PropTypes.number,\r\n        day: PropTypes.number,\r\n        __v: PropTypes.number\r\n      }),\r\n      PropTypes.shape({ type: PropTypes.string, date: PropTypes.string })\r\n    ])\r\n  ),\r\n  shown: PropTypes.bool,\r\n  hide: PropTypes.func\r\n};\r\n\r\nexport default QueryListModal;\r\n","import React, { Component } from \"react\";\r\nimport \"./Query.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport request from \"../../lib/request\";\r\nimport { bubble, query, queryList, offline, logout } from \"../../redux/actions\";\r\nimport PropTypes from \"prop-types\";\r\nimport Constants from \"../../common/Constants\";\r\nimport ToggleButton from \"../../common/ToggleButton\";\r\nimport { DropdownButton, Dropdown, Button } from \"react-bootstrap\";\r\nimport \"../../styles/Dropdown.scss\";\r\nimport { registerLocale } from \"react-datepicker\";\r\nimport moment from \"moment\";\r\nimport \"../../styles/DatePicker.scss\";\r\nimport Util from \"../../common/Util\";\r\nimport QuerySumModal from \"./QuerySumModal\";\r\nimport QueryListModal from \"./QueryListModal\";\r\nimport hu from \"date-fns/locale/hu\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { DatePickerWrapper } from \"../../common/DatePickerWrapper\";\r\n\r\nclass Query extends Component {\r\n    state = {\r\n        activeCollectionToggle: \"left\",\r\n        activeCategoryTypeToggle: \"left\",\r\n        activeExclusionToggle: \"left\",\r\n        selectedCategoryIndex: 0,\r\n        description: \"\",\r\n        activeFullMatchToggle: \"right\",\r\n        minAmount: \"\",\r\n        maxAmount: \"\",\r\n        minDate: null,\r\n        maxDate: null,\r\n        selectedYear: new Date().getFullYear(),\r\n        selectedMonthIndex: new Date().getMonth(),\r\n        sumModalShown: false,\r\n        listModalShown: false\r\n    };\r\n\r\n    componentDidMount() {\r\n        registerLocale(\"hu\", hu);\r\n    }\r\n\r\n    getParams = () => {\r\n        let params = {\r\n            collection:\r\n                this.state.activeCollectionToggle === \"left\"\r\n                    ? \"item\"\r\n                    : \"balance\",\r\n            category_type:\r\n                this.state.activeCategoryTypeToggle === \"left\"\r\n                    ? \"COST\"\r\n                    : \"INCOME\"\r\n        };\r\n        if (params.collection === \"item\") {\r\n            if (this.state.selectedCategoryIndex) {\r\n                params[\"category\"] = Util.getEnglishCategory(\r\n                    this.state.activeCategoryTypeToggle === \"left\"\r\n                        ? Constants.COST_CATEGORIES_WITH_EMPTY[\r\n                              this.state.selectedCategoryIndex\r\n                          ]\r\n                        : Constants.INCOME_CATEGORIES_WITH_EMPTY[\r\n                              this.state.selectedCategoryIndex\r\n                          ]\r\n                );\r\n                if (this.state.activeExclusionToggle === \"right\") {\r\n                    params[\"exclude_category\"] = true;\r\n                }\r\n            }\r\n            if (this.state.description) {\r\n                params[\"description\"] = this.state.description;\r\n                params[\"description_like\"] = (\r\n                    this.state.activeFullMatchToggle === \"left\"\r\n                ).toString();\r\n            }\r\n            if (this.state.minAmount) {\r\n                params[\"min_amount\"] = this.state.minAmount;\r\n            }\r\n            if (this.state.maxAmount) {\r\n                params[\"max_amount\"] = this.state.maxAmount;\r\n            }\r\n            if (this.state.minDate) {\r\n                const minDate = this.state.minDate;\r\n                minDate.setHours(2);\r\n                params[\"min_date\"] = minDate;\r\n            }\r\n            if (this.state.maxDate) {\r\n                const maxDate = this.state.maxDate;\r\n                maxDate.setHours(25);\r\n                maxDate.setMinutes(59);\r\n                params[\"max_date\"] = maxDate;\r\n            }\r\n        } else {\r\n            params[\"year\"] = this.state.selectedYear;\r\n            params[\"month\"] = this.state.selectedMonthIndex;\r\n        }\r\n        return params;\r\n    };\r\n\r\n    switchActiveCollectionToggle = async () => {\r\n        await this.setState({\r\n            activeCollectionToggle:\r\n                this.state.activeCollectionToggle === \"left\" ? \"right\" : \"left\"\r\n        });\r\n        this.state.activeCollectionToggle === \"right\" && this.getSum();\r\n    };\r\n\r\n    switchActiveCategoryTypeToggle = () => {\r\n        this.setState({\r\n            activeCategoryTypeToggle:\r\n                this.state.activeCategoryTypeToggle === \"left\"\r\n                    ? \"right\"\r\n                    : \"left\"\r\n        });\r\n    };\r\n\r\n    switchActiveExclusionToggle = () => {\r\n        this.setState({\r\n            activeExclusionToggle:\r\n                this.state.activeExclusionToggle === \"left\" ? \"right\" : \"left\"\r\n        });\r\n    };\r\n\r\n    getMenuItems = array => {\r\n        return array.map((category, i) => (\r\n            <Dropdown.Item\r\n                eventKey={i}\r\n                key={i}\r\n                onSelect={() => this.onSelectCategory(i)}\r\n            >\r\n                {category}\r\n            </Dropdown.Item>\r\n        ));\r\n    };\r\n\r\n    onSelectCategory = index => {\r\n        this.setState({ selectedCategoryIndex: index });\r\n    };\r\n\r\n    onSelectYear = async year => {\r\n        let month = this.state.selectedMonthIndex;\r\n        const now = new Date();\r\n        if (\r\n            year === now.getFullYear() &&\r\n            this.state.selectedMonthIndex > now.getMonth()\r\n        ) {\r\n            month = now.getMonth();\r\n        }\r\n        if (year === 2015 && this.state.selectedMonthIndex < 8) {\r\n            month = 8;\r\n        }\r\n        await this.setState({ selectedYear: year, selectedMonthIndex: month });\r\n        this.getSum();\r\n    };\r\n\r\n    onSelectMonth = async index => {\r\n        await this.setState({ selectedMonthIndex: index });\r\n        this.getSum();\r\n    };\r\n\r\n    onDescriptionChange = description => {\r\n        this.setState({ description });\r\n    };\r\n\r\n    switchActiveFullMatchToggle = () => {\r\n        this.setState({\r\n            activeFullMatchToggle:\r\n                this.state.activeFullMatchToggle === \"left\" ? \"right\" : \"left\"\r\n        });\r\n    };\r\n\r\n    onMinAmountChange = amount => {\r\n        this.setState({ minAmount: amount });\r\n    };\r\n\r\n    onMaxAmountChange = amount => {\r\n        this.setState({ maxAmount: amount });\r\n    };\r\n\r\n    onMinDateChange = date => {\r\n        if (date && moment(date).isAfter(moment(this.state.maxDate), \"day\")) {\r\n            this.setState({ maxDate: null });\r\n        }\r\n        date\r\n            ? this.setState({ minDate: new Date(date) })\r\n            : this.setState({ minDate: null });\r\n    };\r\n\r\n    onMaxDateChange = date => {\r\n        if (date && moment(date).isBefore(moment(this.state.minDate), \"day\")) {\r\n            this.setState({ minDate: null });\r\n        }\r\n        date\r\n            ? this.setState({ maxDate: new Date(date) })\r\n            : this.setState({ maxDate: null });\r\n    };\r\n\r\n    isInvalidInput = () =>\r\n        (this.state.minAmount.trim() &&\r\n            this.state.minAmount\r\n                .trim()\r\n                .toString()\r\n                .replace(/\\d/g, \"\").length) ||\r\n        (this.state.maxAmount.trim() &&\r\n            this.state.maxAmount\r\n                .trim()\r\n                .toString()\r\n                .replace(/\\d/g, \"\").length);\r\n\r\n    getSum = async () => {\r\n        const { dispatch } = this.props;\r\n        const response = await request({\r\n            url: Util.getEndpoint(\"v1/query\"),\r\n            data: this.getParams()\r\n        });\r\n        if (!response || response.error) {\r\n            if (response && response.error) {\r\n                dispatch(\r\n                    bubble({\r\n                        shown: true,\r\n                        text: response.status + \" \" + response.message,\r\n                        isError: true\r\n                    })\r\n                );\r\n                dispatch(logout());\r\n            } else {\r\n                dispatch(\r\n                    bubble({\r\n                        shown: true,\r\n                        text: Constants.NO_CONNECTION,\r\n                        isError: true\r\n                    })\r\n                );\r\n                dispatch(offline(true));\r\n            }\r\n        } else {\r\n            dispatch(offline(false));\r\n            dispatch(\r\n                query({\r\n                    value: response.value\r\n                })\r\n            );\r\n            this.state.activeCollectionToggle === \"left\" &&\r\n                this.setState({ sumModalShown: true });\r\n        }\r\n    };\r\n\r\n    getList = async () => {\r\n        const { dispatch } = this.props;\r\n        const response = await request({\r\n            url: Util.getEndpoint(\"v1/query-list\"),\r\n            data: this.getParams()\r\n        });\r\n        if (!response || response.error) {\r\n            if (response && response.error) {\r\n                dispatch(\r\n                    bubble({\r\n                        shown: true,\r\n                        text: response.status + \" \" + response.message,\r\n                        isError: true\r\n                    })\r\n                );\r\n                dispatch(logout());\r\n            } else {\r\n                dispatch(\r\n                    bubble({\r\n                        shown: true,\r\n                        text: Constants.NO_CONNECTION,\r\n                        isError: true\r\n                    })\r\n                );\r\n                dispatch(offline(true));\r\n            }\r\n        } else {\r\n            dispatch(offline(false));\r\n            const items = [];\r\n            let date = null;\r\n            response.items.forEach(item => {\r\n                if (date == null || date !== item.date) {\r\n                    items.push({\r\n                        type: \"header\",\r\n                        date: item.date\r\n                    });\r\n                    date = item.date;\r\n                }\r\n                items.push(item);\r\n            });\r\n            dispatch(\r\n                queryList({\r\n                    items: items\r\n                })\r\n            );\r\n            this.state.activeCollectionToggle === \"left\" &&\r\n                this.setState({ listModalShown: true });\r\n        }\r\n    };\r\n\r\n    hideSumModal = () => {\r\n        this.setState({ sumModalShown: false });\r\n    };\r\n\r\n    hideListModal = () => {\r\n        this.setState({ listModalShown: false });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"query\">\r\n                <div className=\"collection\">\r\n                    <div className=\"cost-label\">Lekérdezés típusa</div>\r\n                    <ToggleButton\r\n                        active={this.state.activeCollectionToggle}\r\n                        switchActive={this.switchActiveCollectionToggle}\r\n                        leftText=\"Tétel\"\r\n                        rightText=\"Egyenleg\"\r\n                    />\r\n                </div>\r\n                {this.state.activeCollectionToggle === \"left\" ? (\r\n                    <div className=\"item\">\r\n                        <div className=\"category-type\">\r\n                            <div className=\"cost-label\">Kategória típusa</div>\r\n                            <ToggleButton\r\n                                active={this.state.activeCategoryTypeToggle}\r\n                                switchActive={\r\n                                    this.switchActiveCategoryTypeToggle\r\n                                }\r\n                                leftText=\"Kiadás\"\r\n                                rightText=\"Bevétel\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"category\">\r\n                            <div className=\"cost-label\">Kategória</div>\r\n                            <div className=\"category-toggle-container\">\r\n                                <div className=\"negate\">\r\n                                    <ToggleButton\r\n                                        active={\r\n                                            this.state.activeExclusionToggle\r\n                                        }\r\n                                        switchActive={\r\n                                            this.switchActiveExclusionToggle\r\n                                        }\r\n                                        leftText=\"\"\r\n                                        rightText=\"Nem\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"category\">\r\n                                    <DropdownButton\r\n                                        title={\r\n                                            this.state\r\n                                                .activeCategoryTypeToggle ===\r\n                                            \"left\"\r\n                                                ? Constants\r\n                                                      .COST_CATEGORIES_WITH_EMPTY[\r\n                                                      this.state\r\n                                                          .selectedCategoryIndex\r\n                                                  ]\r\n                                                : Constants\r\n                                                      .INCOME_CATEGORIES_WITH_EMPTY[\r\n                                                      this.state\r\n                                                          .selectedCategoryIndex\r\n                                                  ]\r\n                                        }\r\n                                    >\r\n                                        {this.getMenuItems(\r\n                                            this.state\r\n                                                .activeCategoryTypeToggle ===\r\n                                            \"left\"\r\n                                                ? Constants.COST_CATEGORIES_WITH_EMPTY\r\n                                                : Constants.INCOME_CATEGORIES_WITH_EMPTY\r\n                                        )}\r\n                                    </DropdownButton>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"description-container-panel\">\r\n                            <div className=\"description-container\">\r\n                                <div className=\"cost-label\">Leírás</div>\r\n                                <input\r\n                                    className=\"description\"\r\n                                    value={this.state.description}\r\n                                    onChange={e =>\r\n                                        this.onDescriptionChange(e.target.value)\r\n                                    }\r\n                                />\r\n                            </div>\r\n                            <div className=\"full-match-container\">\r\n                                <div className=\"cost-label\">Teljes egyezés</div>\r\n                                <ToggleButton\r\n                                    active={this.state.activeFullMatchToggle}\r\n                                    switchActive={\r\n                                        this.switchActiveFullMatchToggle\r\n                                    }\r\n                                    leftText=\"Nem\"\r\n                                    rightText=\"Igen\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"amount-container\">\r\n                            <div className=\"minimal-amount-container\">\r\n                                <div className=\"cost-label\">Minimum összeg</div>\r\n                                <input\r\n                                    className=\"minimal-amount amount\"\r\n                                    value={this.state.minAmount}\r\n                                    type=\"number\"\r\n                                    onChange={e =>\r\n                                        this.onMinAmountChange(e.target.value)\r\n                                    }\r\n                                />\r\n                            </div>\r\n                            <div className=\"maximal-amount-container\">\r\n                                <div className=\"cost-label\">Maximum összeg</div>\r\n                                <input\r\n                                    className=\"maximal-amount amount\"\r\n                                    value={this.state.maxAmount}\r\n                                    type=\"number\"\r\n                                    onChange={e =>\r\n                                        this.onMaxAmountChange(e.target.value)\r\n                                    }\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"date-container\">\r\n                            <div className=\"minimal-date-container\">\r\n                                <div className=\"cost-label\">Ettől</div>\r\n                                <div className=\"minimal-date date date-picker-container\">\r\n                                    <DatePickerWrapper\r\n                                        date={this.state.minDate || null}\r\n                                        onChange={this.onMinDateChange}\r\n                                    />\r\n                                    {this.state.minDate ? (\r\n                                        <div\r\n                                            className=\"close-icon\"\r\n                                            onClick={() =>\r\n                                                this.onMinDateChange(null)\r\n                                            }\r\n                                        />\r\n                                    ) : null}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"maximal-date-container\">\r\n                                <div className=\"cost-label\">Eddig</div>\r\n                                <div className=\"maximal-date date date-picker-container\">\r\n                                    <DatePickerWrapper\r\n                                        date={this.state.maxDate || null}\r\n                                        onChange={this.onMaxDateChange}\r\n                                    />\r\n                                    {this.state.maxDate ? (\r\n                                        <div\r\n                                            className=\"close-icon\"\r\n                                            onClick={() =>\r\n                                                this.onMaxDateChange(null)\r\n                                            }\r\n                                        />\r\n                                    ) : null}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"button-container\">\r\n                            <Button\r\n                                className=\"query-sum\"\r\n                                type=\"submit\"\r\n                                onClick={this.getSum}\r\n                                disabled={!!this.isInvalidInput()}\r\n                            >\r\n                                Összeg\r\n                            </Button>\r\n                            <Button\r\n                                className=\"query-list\"\r\n                                type=\"submit\"\r\n                                onClick={this.getList}\r\n                                disabled={!!this.isInvalidInput()}\r\n                            >\r\n                                Lista\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                ) : (\r\n                    <div className=\"balance\">\r\n                        <div className=\"year\">\r\n                            <div className=\"cost-label\">Év</div>\r\n                            <DropdownButton\r\n                                title={this.state.selectedYear}\r\n                                id=\"year-dropdown\"\r\n                            >\r\n                                {Util.getYears(this.onSelectYear)}\r\n                            </DropdownButton>\r\n                        </div>\r\n                        <div className=\"month\">\r\n                            <div className=\"cost-label\">Hónap</div>\r\n                            <DropdownButton\r\n                                title={\r\n                                    Constants.MONTHS[\r\n                                        this.state.selectedMonthIndex\r\n                                    ]\r\n                                }\r\n                                id=\"month-dropdown\"\r\n                            >\r\n                                {Util.getMonths(\r\n                                    this.onSelectMonth,\r\n                                    this.state.selectedYear\r\n                                )}\r\n                            </DropdownButton>\r\n                        </div>\r\n                        <div className=\"result-container\">\r\n                            <div className=\"cost-label\">Egyenleg</div>\r\n                            <div className=\"result\">\r\n                                {this.props.query\r\n                                    ? Util.getMoneyString(\r\n                                          this.props.query.value\r\n                                      )\r\n                                    : \"\"}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n                {this.state.sumModalShown && (\r\n                    <QuerySumModal\r\n                        shown={this.state.sumModalShown}\r\n                        hide={this.hideSumModal}\r\n                        value={this.props.query.value}\r\n                    />\r\n                )}\r\n                {this.state.listModalShown && (\r\n                    <QueryListModal\r\n                        shown={this.state.listModalShown}\r\n                        hide={this.hideListModal}\r\n                        items={this.props.query.items || []}\r\n                    />\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nQuery.propTypes = {\r\n    value: PropTypes.number,\r\n    items: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            _id: PropTypes.string,\r\n            group_id: PropTypes.string,\r\n            amount: PropTypes.number,\r\n            description: PropTypes.string,\r\n            category: PropTypes.string,\r\n            category_type: PropTypes.string,\r\n            date: PropTypes.string,\r\n            year: PropTypes.number,\r\n            month: PropTypes.number,\r\n            day: PropTypes.number,\r\n            __v: PropTypes.number\r\n        })\r\n    ),\r\n    bubble: PropTypes.shape({\r\n        shown: PropTypes.bool,\r\n        text: PropTypes.string,\r\n        isError: PropTypes.bool\r\n    })\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    const { query, bubble } = state;\r\n    return { query, bubble };\r\n};\r\n\r\nexport default connect(mapStateToProps)(withRouter(Query));\r\n","import React, { Component } from \"react\";\r\nimport \"./Checkbox.scss\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Checkbox extends Component {\r\n  setChecked = e => {\r\n    e.preventDefault();\r\n    this.props.setChecked(this.props.index);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className={this.props.className}\r\n        onClick={this.setChecked}\r\n      >\r\n        <label>\r\n          <input type=\"checkbox\" />\r\n          <div className={`tick ${this.props.isChecked ? \"checked\" : \"\"}`}/>\r\n          {this.props.text}\r\n        </label>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nCheckbox.propTypes = {\r\n  index: PropTypes.number.isRequired,\r\n  className: PropTypes.string,\r\n  isChecked: PropTypes.bool.isRequired,\r\n  setChecked: PropTypes.func.isRequired,\r\n  text: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Checkbox;\r\n","import React, { Component } from \"react\";\r\nimport { select, easeLinear } from \"d3\";\r\nimport { scaleBand, scaleLinear } from \"d3-scale\";\r\nimport { axisBottom, axisLeft } from \"d3-axis\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport ReactResizeDetector from \"react-resize-detector\";\r\nimport \"./BarChart.scss\";\r\nimport Colors from \"../../colors/Colors\";\r\nimport Util from \"../../common/Util\";\r\nimport Constants from \"../../common/Constants\";\r\n\r\nclass BarChart extends Component {\r\n  domNode = null;\r\n  height = 0;\r\n  width = 0;\r\n  data = [];\r\n\r\n  componentDidMount() {\r\n    const values = [];\r\n    const labels = [];\r\n    for (let key in this.props.chart) {\r\n      if (this.props.chart.hasOwnProperty(key) && key !== 'PREV_BALANCE') {\r\n        values.push(\r\n          this.props.chart[key].length === 1\r\n            ? this.props.chart[key][0].amount\r\n            : this.props.chart[key].reduce((prev, next) => {\r\n                return (\r\n                  (prev.amount || prev.amount === 0 ? prev.amount : prev) +\r\n                  next.amount\r\n                );\r\n              })\r\n        );\r\n        labels.push(Util.getHungarianCategory(key));\r\n      }\r\n    }\r\n    this.data = values.map((value, i) => {\r\n      return { value, label: labels[i] };\r\n    });\r\n    window.addEventListener(\"resize\", this.resize);\r\n    this.draw();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.resize);\r\n  }\r\n\r\n  resize = () => {\r\n    this.props.setSize();\r\n    this.draw();\r\n  };\r\n\r\n  draw = () => {\r\n    if (select(\"svg\")._groups[0][0]) {\r\n      select(\"svg\").remove();\r\n    }\r\n    this.selection = select(this.node);\r\n    this.domNode = this.selection.node();\r\n    const node = select(this.domNode);\r\n\r\n    const margin = {\r\n      top: 30,\r\n      right: 20,\r\n      bottom:\r\n        Util.getMaxTextWidth(\r\n          this.data.map(d => d.label),\r\n          \"normal 12px JmhTypewriter\"\r\n        ) + 10,\r\n      left: 80\r\n    };\r\n    let isHorizontalLabels = false;\r\n\r\n    this.width = parseInt(node.style(\"width\"), 10) - margin.left - margin.right;\r\n\r\n    const barPadding = 20;\r\n    const barWidth = (this.width - barPadding) / this.data.length;\r\n\r\n    if (margin.bottom < barWidth) {\r\n      isHorizontalLabels = true;\r\n      margin.bottom = 30;\r\n    }\r\n\r\n    this.height = (this.props.isLarge ? 500 : 300) - margin.top - margin.bottom;\r\n\r\n    const x = scaleBand()\r\n      .rangeRound([0, this.width])\r\n      .padding(0.1);\r\n    const y = scaleLinear().rangeRound([this.height, 0]);\r\n\r\n    const svg = this.selection.append(\"svg\").attr(\"class\", \"bar-chart\");\r\n\r\n    svg\r\n      .attr(\"width\", this.width + margin.left + margin.right)\r\n      .attr(\"height\", this.height + margin.top + margin.bottom);\r\n\r\n    // axes' data\r\n    x.domain(this.data.map(d => d.label));\r\n    y.domain([0, Math.max(...this.data.map(data => Math.abs(data.value)))]);\r\n\r\n    // the main group\r\n    const g = svg\r\n      .append(\"g\")\r\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n\r\n    // axis x\r\n    g\r\n      .append(\"g\")\r\n      .attr(\"class\", \"axis axis--x\")\r\n      .attr(\"transform\", \"translate(0,\" + this.height + \")\")\r\n      .call(axisBottom(x))\r\n      .selectAll(\"text\")\r\n      .style(\"text-anchor\", \"end\")\r\n      .style(\"fill\", Colors.costBlue)\r\n      .style(\"stroke\", \"none\")\r\n      .attr(\"class\", \"label-text\")\r\n      .attr(\"dx\", isHorizontalLabels ? 0 : \"-.8em\")\r\n      .attr(\"dy\", isHorizontalLabels ? \".9em\" : \"-.55em\");\r\n\r\n    // axis-x labels\r\n    g\r\n      .selectAll(\".label-text\")\r\n      .nodes()\r\n      .forEach(node => {\r\n        select(node).attr(\r\n          \"transform\",\r\n          () =>\r\n            isHorizontalLabels\r\n              ? \"translate(\" + node.getComputedTextLength() / 2 + \", 0)\"\r\n              : \"rotate(-90)\"\r\n        );\r\n      });\r\n\r\n    // axis-y\r\n    g\r\n      .append(\"g\")\r\n      .attr(\"class\", \"axis axis--y\")\r\n      .call(axisLeft(y).ticks(5));\r\n\r\n    // bars\r\n    g\r\n      .selectAll(\".bar\")\r\n      .data(this.data)\r\n      .enter()\r\n      .append(\"rect\")\r\n      .style(\r\n        \"fill\",\r\n        d =>\r\n          d.value >= 0\r\n            ? d.label === \"Egyenleg\"\r\n              ? Colors.costGreen\r\n              : Colors.costBlue\r\n            : Colors.costRed\r\n      )\r\n      .style(\"stroke\", \"none\")\r\n      .attr(\"class\", \"bar\")\r\n      .attr(\"width\", barWidth - barPadding)\r\n      .attr(\"y\", this.height - 1)\r\n      .attr(\r\n        \"transform\",\r\n        (d, i) => \"translate(\" + [barWidth * i + barPadding, 0] + \")\"\r\n      )\r\n      .transition()\r\n      .duration(Constants.BAR_CHART_ANIMATION_LENGTH)\r\n      .ease(easeLinear)\r\n      .attr(\"y\", d => y(Math.abs(d.value)))\r\n      .attr(\"height\", d => this.height - y(Math.abs(d.value)));\r\n\r\n    setTimeout(() => {\r\n      // amount-text\r\n      g\r\n        .selectAll(\".amount-text\")\r\n        .data(this.data)\r\n        .enter()\r\n        .append(\"text\")\r\n        .text(d => Util.getMoneyString(d.value))\r\n        .style(\r\n          \"fill\",\r\n          d =>\r\n            d.value >= 0\r\n              ? d.label === \"Egyenleg\"\r\n                ? Colors.costGreen\r\n                : Colors.costBlue\r\n              : Colors.costRed\r\n        )\r\n        .attr(\"class\", \"amount-text\")\r\n        .attr(\"x\", (d, i) => i * barWidth + barPadding)\r\n        .attr(\"y\", d => y(Math.abs(d.value)) - 5)\r\n        .style(\"opacity\", 0)\r\n        .transition()\r\n        .duration(200)\r\n        .ease(easeLinear)\r\n        .style(\"opacity\", 1);\r\n\r\n      // centering amount-text\r\n      g\r\n        .selectAll(\".amount-text\")\r\n        .nodes()\r\n        .forEach(node => {\r\n          select(node).attr(\r\n            \"transform\",\r\n            () =>\r\n              \"translate(\" +\r\n              (barWidth - barPadding - node.getComputedTextLength()) / 2 +\r\n              \", 0)\"\r\n          );\r\n        });\r\n    }, Constants.BAR_CHART_ANIMATION_LENGTH - 100);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <ReactResizeDetector\r\n        handleWidth\r\n        onResize={this.resize}\r\n        render={() => (\r\n          <div\r\n            className={`bar-chart-container ${\r\n              this.props.isLarge ? \"\" : \"small\"\r\n            }`}\r\n            ref={r => (this.node = r)}\r\n          />\r\n        )}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nBarChart.propTypes = {\r\n  isLarge: PropTypes.bool,\r\n  setSize: PropTypes.func,\r\n  chart: PropTypes.object\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  const { chart } = state;\r\n  return { chart };\r\n};\r\n\r\nexport default connect(mapStateToProps)(BarChart);\r\n","import React, { Component } from \"react\";\r\nimport \"../../styles/Modal.scss\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport BarChart from \"../chart/BarChart\";\r\n\r\nclass BarChartModal extends Component {\r\n  state = {\r\n    isLarge: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setSize();\r\n  }\r\n\r\n  isLarge = () =>\r\n    window.innerWidth >= 992 && this.props.numberOfBars > 3\r\n  ;\r\n\r\n  setSize = () => {\r\n    this.setState({ isLarge: this.isLarge() });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Modal\r\n        className={`ok-modal bar-chart-modal ${this.state.isLarge ? \"\" : \"small\"}`}\r\n        show={this.props.shown}\r\n        onHide={this.props.hide}\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title>Kategóriák szerinti összesítés</Modal.Title>\r\n        </Modal.Header>\r\n\r\n        <Modal.Body>\r\n          <BarChart isLarge={this.state.isLarge} setSize={this.setSize} />\r\n        </Modal.Body>\r\n\r\n        <Modal.Footer>\r\n          <Button variant=\"primary\" type=\"submit\" onClick={this.props.hide}>\r\n            OK\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nBarChartModal.propTypes = {\r\n  numberOfBars: PropTypes.number,\r\n  chartData: PropTypes.object\r\n};\r\n\r\nexport default BarChartModal;\r\n","import React, { Component } from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport { scaleBand, scaleLinear } from \"d3-scale\";\r\nimport { axisBottom, axisLeft } from \"d3-axis\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./LineChart.scss\";\r\nimport Colors from \"../../colors/Colors\";\r\nimport Util from \"../../common/Util\";\r\nimport Constants from \"../../common/Constants\";\r\n\r\nclass LineChart extends Component {\r\n    domNode = null;\r\n    height = 0;\r\n    width = 0;\r\n    legends = [];\r\n    labels = [];\r\n    tooltipWidth = 150;\r\n    tooltipHeight = 40;\r\n    margin = {\r\n        top: 60,\r\n        right: 20,\r\n        bottom: 30,\r\n        left: 80\r\n    };\r\n\r\n    componentDidMount() {\r\n        for (let key in this.props.chart) {\r\n            if (this.props.chart.hasOwnProperty(key) && key !== 'PREV_BALANCE') {\r\n                this.legends.push(Util.getHungarianCategory(key));\r\n                if (!this.labels.length) {\r\n                    this.props.chart[key].forEach(d =>\r\n                        this.labels.push(Util.getMonthLabel(d.year, d.month))\r\n                    );\r\n                }\r\n            }\r\n        }\r\n        window.addEventListener(\"resize\", this.resize);\r\n        this.draw();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"resize\", this.resize);\r\n    }\r\n\r\n    resize = () => {\r\n        this.props.setSize();\r\n        this.draw();\r\n    };\r\n\r\n    draw = () => {\r\n        if (d3.select(\"svg\")._groups[0][0]) {\r\n            d3.select(\"svg\").remove();\r\n        }\r\n        this.selection = d3.select(this.node);\r\n        this.domNode = this.selection.node();\r\n        let isHorizontalLabels = false;\r\n        this.width =\r\n            parseInt(window.getComputedStyle(document.getElementsByClassName('modal-dialog')[0]).width, 10) -\r\n            this.margin.left -\r\n            this.margin.right;\r\n        this.margin.bottom =\r\n            Util.getMaxTextWidth(this.labels, \"normal 12px JmhTypewriter\") + 10;\r\n        if (this.margin.bottom < this.width / this.labels.length) {\r\n            isHorizontalLabels = true;\r\n            this.margin.bottom = 30;\r\n        }\r\n        this.height =\r\n            (this.props.isLarge ? 500 : 300) -\r\n            this.margin.top -\r\n            this.margin.bottom;\r\n\r\n        const xScale = scaleBand()\r\n            .domain(this.labels)\r\n            .rangeRound([0, this.width]);\r\n\r\n        let minValue = 0;\r\n        let maxValue = 0;\r\n        for (let key in this.props.chart) {\r\n            if (this.props.chart.hasOwnProperty(key) && key !== 'PREV_BALANCE') {\r\n                minValue = Math.min(\r\n                    minValue,\r\n                    ...this.props.chart[key].map(\r\n                        d =>\r\n                            this.props.isSum && key === \"BALANCE\"\r\n                                ? d.sumAmount\r\n                                : d.amount\r\n                    )\r\n                );\r\n                maxValue = Math.max(\r\n                    maxValue,\r\n                    ...this.props.chart[key].map(\r\n                        d =>\r\n                            this.props.isSum && key === \"BALANCE\"\r\n                                ? d.sumAmount\r\n                                : d.amount\r\n                    )\r\n                );\r\n            }\r\n        }\r\n        const yScale = scaleLinear()\r\n            .domain([minValue, maxValue])\r\n            .rangeRound([this.height, 0]);\r\n\r\n        const mapX = index => (index + 0.5) * this.width / this.labels.length;\r\n        const mapY = value =>\r\n            this.height -\r\n            this.height * (value - minValue) / (maxValue - minValue);\r\n\r\n        const svg = this.selection.append(\"svg\").attr(\"class\", \"line-chart\");\r\n\r\n        // outer-g group is for legend\r\n        svg\r\n            .attr(\"width\", this.width + this.margin.left + this.margin.right)\r\n            .attr(\"height\", this.height + this.margin.top + this.margin.bottom)\r\n            .append(\"g\")\r\n            .attr(\"class\", \"outer-g\");\r\n\r\n        // draw the legend\r\n        let shift = 0;\r\n        for (let key in this.props.chart) {\r\n            if (this.props.chart.hasOwnProperty(key) && key !== 'PREV_BALANCE') {\r\n                d3\r\n                    .select(\".outer-g\")\r\n                    .append(\"circle\")\r\n                    .attr(\"class\", \"legend-circle \" + key.toLowerCase())\r\n                    .attr(\"stroke\", this.getColor(key))\r\n                    .attr(\"stroke-width\", 3)\r\n                    .attr(\"fill\", Colors.lightGray)\r\n                    .attr(\"r\", 3)\r\n                    .attr(\"transform\", \"translate(\" + shift + \", 30)\");\r\n                shift += 10;\r\n                d3\r\n                    .select(\".outer-g\")\r\n                    .append(\"text\")\r\n                    .text(\r\n                        Util.getHungarianCategory(key) +\r\n                            (this.props.isSum && key === \"BALANCE\"\r\n                                ? \" (\\u03A3)\"\r\n                                : \"\")\r\n                    )\r\n                    .attr(\"transform\", \"translate(\" + shift + \", 34)\")\r\n                    .attr(\"class\", \"legend-text\")\r\n                    .style(\"fill\", this.getColor(key));\r\n                shift +=\r\n                    Util.getTextWidth(\r\n                        Util.getHungarianCategory(key),\r\n                        \"normal 12px VarelaRound\"\r\n                    ) + (this.props.isSum && key === \"BALANCE\" ? 60 : 40);\r\n            }\r\n        }\r\n\r\n        // position legend group to center\r\n        d3\r\n            .select(\".outer-g\")\r\n            .attr(\r\n                \"transform\",\r\n                \"translate(\" +\r\n                    (this.margin.left +\r\n                        (this.width - this.margin.right - shift) / 2) +\r\n                    \", 0)\"\r\n            );\r\n\r\n        // the main chart group\r\n        const g = svg\r\n            .append(\"g\")\r\n            .attr(\"class\", \"chart-g\")\r\n            .attr(\r\n                \"transform\",\r\n                \"translate(\" + this.margin.left + \",\" + this.margin.top + \")\"\r\n            );\r\n\r\n        // draw axis X with labels\r\n        g\r\n            .append(\"g\")\r\n            .attr(\"class\", \"axis axis--x\")\r\n            .attr(\"transform\", \"translate(0,\" + this.height + \")\")\r\n            .call(axisBottom(xScale))\r\n            .selectAll(\"text\")\r\n            .style(\"text-anchor\", \"end\")\r\n            .style(\"fill\", Colors.costBlue)\r\n            .style(\"stroke\", \"none\")\r\n            .attr(\"class\", \"label-text\")\r\n            .attr(\"dx\", isHorizontalLabels ? 0 : \"-.8em\")\r\n            .attr(\"dy\", isHorizontalLabels ? \".9em\" : \"-.55em\");\r\n\r\n        // position x-labels in an intelligent way (rotate or shift)\r\n        d3\r\n            .selectAll(\".label-text\")\r\n            .nodes()\r\n            .forEach(node =>\r\n                d3\r\n                    .select(node)\r\n                    .attr(\r\n                        \"transform\",\r\n                        isHorizontalLabels\r\n                            ? \"translate(\" +\r\n                              node.getComputedTextLength() / 2 +\r\n                              \", 0)\"\r\n                            : \"rotate(-90)\"\r\n                    )\r\n            );\r\n\r\n        // draw axis Y\r\n        g\r\n            .append(\"g\")\r\n            .attr(\"class\", \"axis axis--y\")\r\n            .call(axisLeft(yScale).ticks(5));\r\n\r\n        // line drawer function\r\n        const line = d3\r\n            .line()\r\n            .x((d, i) => mapX(i))\r\n            .y(\r\n                d =>\r\n                    this.props.isSum && d.sumAmount\r\n                        ? mapY(d.sumAmount)\r\n                        : mapY(d.amount)\r\n            )\r\n            .curve(d3.curveMonotoneX);\r\n\r\n        // draw each line\r\n        for (let key in this.props.chart) {\r\n            if (this.props.chart.hasOwnProperty(key)) {\r\n                g\r\n                    .append(\"path\")\r\n                    .attr(\"class\", \"line\")\r\n                    .attr(\"d\", line(this.props.chart[key]))\r\n                    .attr(\"stroke\", this.getColor(key))\r\n                    .attr(\"stroke-width\", 3)\r\n                    .attr(\"fill\", \"none\")\r\n                    .call(this.transition);\r\n            }\r\n        }\r\n\r\n        // draw dots at each data point\r\n        for (let key in this.props.chart) {\r\n            if (this.props.chart.hasOwnProperty(key)) {\r\n                setTimeout(() => {\r\n                    const that = this;\r\n                    const selection = g\r\n                        .selectAll(\".dot.\" + key.toLowerCase())\r\n                        .data(this.props.chart[key])\r\n                        .enter()\r\n                        .append(\"circle\");\r\n                    selection\r\n                        .on(\"mouseover\", function(event, d) {\r\n                            const nodes = selection.nodes();\r\n                            const i = nodes.indexOf(this);\r\n                            that.onMouseOver(d, i, nodes);\r\n                        })\r\n                        .on(\"mouseout\", function(event, d) {\r\n                            const nodes = selection.nodes();\r\n                            const i = nodes.indexOf(this);\r\n                            that.onMouseOut(d, i, nodes);\r\n                        })\r\n                        .attr(\"class\", \"dot \" + key.toLowerCase())\r\n                        .attr(\"cx\", (d, i) => mapX(i))\r\n                        .attr(\r\n                            \"cy\",\r\n                            d =>\r\n                                this.props.isSum && key === \"BALANCE\"\r\n                                    ? mapY(d.sumAmount)\r\n                                    : mapY(d.amount)\r\n                        )\r\n                        .attr(\"stroke\", this.getColor(key))\r\n                        .attr(\"stroke-width\", 3)\r\n                        .attr(\"fill\", Colors.lightGray)\r\n                        .attr(\"r\", 3)\r\n                        .style(\"opacity\", 0)\r\n                        .transition()\r\n                        .duration(200)\r\n                        .ease(d3.easeLinear)\r\n                        .style(\"opacity\", 1);\r\n                }, Constants.LINE_CHART_ANIMATION_LENGTH - 100);\r\n            }\r\n        }\r\n\r\n        // the tooltip\r\n        setTimeout(() => {\r\n            d3\r\n                .select(\".chart-g\")\r\n                .append(\"rect\")\r\n                .attr(\"width\", this.tooltipWidth)\r\n                .attr(\"height\", this.tooltipHeight)\r\n                .attr(\"class\", \"cost-tooltip\")\r\n                .attr(\"rx\", 20)\r\n                .attr(\"ry\", 20)\r\n                .style(\"fill\", Colors.lightGray)\r\n                .style(\"opacity\", 0.85)\r\n                .style(\"stroke-width\", 3)\r\n                .style(\"display\", \"none\");\r\n            // the tooltip text\r\n            d3\r\n                .select(\".chart-g\")\r\n                .append(\"text\")\r\n                .attr(\"class\", \"tooltip-text\")\r\n                .style(\"display\", \"none\");\r\n        }, Constants.LINE_CHART_ANIMATION_LENGTH + 500);\r\n    };\r\n\r\n    onMouseOver(d, i, nodes) {\r\n        const circle = d3.select(nodes[i]);\r\n        const tooltipText =\r\n            circle.classed(\"balance\") && this.props.isSum\r\n                ? Util.getMoneyString(d.sumAmount)\r\n                : Util.getMoneyString(d.amount);\r\n        circle.attr(\"r\", 5);\r\n        const translateX = Math.min(\r\n            this.width - this.tooltipWidth + this.margin.right - 3,\r\n            circle.attr(\"cx\") - this.tooltipWidth / 2\r\n        );\r\n        d3\r\n            .select(\".cost-tooltip\")\r\n            .attr(\r\n                \"transform\",\r\n                \"translate(\" +\r\n                    translateX +\r\n                    \", \" +\r\n                    (circle.attr(\"cy\") - this.tooltipHeight - 5) +\r\n                    \")\"\r\n            )\r\n            .style(\"stroke\", circle.attr(\"stroke\"))\r\n            .style(\"display\", \"block\");\r\n        d3\r\n            .select(\".tooltip-text\")\r\n            .text(tooltipText)\r\n            .attr(\r\n                \"transform\",\r\n                \"translate(\" +\r\n                    (translateX +\r\n                        (this.tooltipWidth -\r\n                            Util.getTextWidth(\r\n                                tooltipText,\r\n                                \"normal 16px VarelaRound\"\r\n                            )) /\r\n                            2) +\r\n                    \", \" +\r\n                    (circle.attr(\"cy\") - this.tooltipHeight / 2 + 2) +\r\n                    \")\"\r\n            )\r\n            .attr(\"fill\", circle.attr(\"stroke\"))\r\n            .style(\"display\", \"block\");\r\n    }\r\n\r\n    onMouseOut = (d, i, nodes) => {\r\n        d3.select(nodes[i]).attr(\"r\", 3);\r\n        d3.select(\".cost-tooltip\").style(\"display\", \"none\");\r\n        d3.select(\".tooltip-text\").style(\"display\", \"none\");\r\n    };\r\n\r\n    transition = path => {\r\n        path\r\n            .transition()\r\n            .duration(Constants.LINE_CHART_ANIMATION_LENGTH)\r\n            .attrTween(\"stroke-dasharray\", this.tweenDash);\r\n    };\r\n\r\n    tweenDash() {\r\n        const l = this.getTotalLength(),\r\n            i = d3.interpolateString(\"0,\" + l, l + \",\" + l);\r\n        return t => i(t);\r\n    }\r\n\r\n    getColor = key =>\r\n        key === \"BALANCE\"\r\n            ? Colors.costBlue\r\n            : key === \"COST\"\r\n                ? Colors.costRed\r\n                : key === \"INCOME\"\r\n                    ? Colors.costGreen\r\n                    : Constants.LINE_COLORS[\r\n                          this.legends.indexOf(Util.getHungarianCategory(key)) %\r\n                              Constants.LINE_COLORS.length\r\n                      ];\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"line-chart-container\" ref={r => (this.node = r)} />\r\n        );\r\n    }\r\n}\r\n\r\nLineChart.propTypes = {\r\n    isLarge: PropTypes.bool,\r\n    setSize: PropTypes.func,\r\n    isSum: PropTypes.bool,\r\n    chart: PropTypes.object\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    const { chart } = state;\r\n    return { chart };\r\n};\r\n\r\nexport default connect(mapStateToProps)(LineChart);\r\n","import React, { Component } from \"react\";\r\nimport \"../../styles/Modal.scss\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport LineChart from \"../chart/LineChart\";\r\n\r\nclass LineChartModal extends Component {\r\n  state = {\r\n    isLarge: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setSize();\r\n  }\r\n\r\n  isLarge = () => window.innerWidth >= 992;\r\n  setSize = () => {\r\n    this.setState({ isLarge: this.isLarge() });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Modal\r\n        className=\"ok-modal line-chart-modal\"\r\n        show={this.props.shown}\r\n        onHide={this.props.hide}\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title>Kategóriák trendje</Modal.Title>\r\n        </Modal.Header>\r\n\r\n        <Modal.Body>\r\n          <LineChart\r\n            isLarge={this.state.isLarge}\r\n            setSize={this.setSize}\r\n            isSum={this.props.isSum}\r\n          />\r\n        </Modal.Body>\r\n\r\n        <Modal.Footer>\r\n          <Button variant=\"primary\" type=\"submit\" onClick={this.props.hide}>\r\n            OK\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nLineChartModal.propTypes = {\r\n  chartData: PropTypes.object,\r\n  isSum: PropTypes.bool\r\n};\r\n\r\nexport default LineChartModal;\r\n","import React, { Component } from \"react\";\r\nimport \"./ChartConfig.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport request from \"../../lib/request\";\r\nimport PropTypes from \"prop-types\";\r\nimport Constants from \"../../common/Constants\";\r\nimport { DropdownButton, Button } from \"react-bootstrap\";\r\nimport \"../../styles/Dropdown.scss\";\r\nimport Util from \"../../common/Util\";\r\nimport ToggleButton from \"../../common/ToggleButton\";\r\nimport Checkbox from \"../../common/Checkbox\";\r\nimport { bubble, chartData, logout, offline } from \"../../redux/actions\";\r\nimport BarChartModal from \"./BarChartModal\";\r\nimport LineChartModal from \"./LineChartModal\";\r\n\r\nclass ChartConfig extends Component {\r\n    state = {\r\n        intervalType: \"month\",\r\n        selectedYear: new Date().getFullYear(),\r\n        selectedMonthIndex: new Date().getMonth(),\r\n        activeChartTypeToggle: \"left\",\r\n        categories: Util.getInitialCheckboxStates(),\r\n        sumChecked: false,\r\n        isButtonDisabled: true,\r\n        isBarChartShown: false,\r\n        isLineChartShown: false\r\n    };\r\n\r\n    getParams = () => {\r\n        const params = {};\r\n        switch (this.state.intervalType) {\r\n            case \"month\":\r\n                params[\"min_month\"] = this.state.selectedMonthIndex;\r\n                params[\"max_month\"] = this.state.selectedMonthIndex;\r\n                params[\"min_year\"] = this.state.selectedYear;\r\n                params[\"max_year\"] = this.state.selectedYear;\r\n                break;\r\n            case \"year\":\r\n                params[\"min_year\"] = this.state.selectedYear;\r\n                params[\"max_year\"] = this.state.selectedYear;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        params[\"category_types\"] = this.getCategoryTypesParam();\r\n        params[\"categories\"] = this.getCategoriesParam();\r\n        return params;\r\n    };\r\n\r\n    getCategoriesParam = () =>\r\n        Constants.CATEGORY_CHECKBOXES.slice(3)\r\n            .reduce(\r\n                (prev, next) =>\r\n                    (prev === Constants.CATEGORY_CHECKBOXES[3]\r\n                        ? this.state.categories[3]\r\n                            ? Util.getEnglishCategory(prev) + \",\"\r\n                            : \"\"\r\n                        : prev) +\r\n                    (this.state.categories[\r\n                        Constants.CATEGORY_CHECKBOXES.indexOf(next)\r\n                    ]\r\n                        ? Util.getEnglishCategory(next) + \",\"\r\n                        : \"\")\r\n            )\r\n            .slice(0, -1);\r\n\r\n    getCategoryTypesParam = () => {\r\n        let categoryTypes = \"\";\r\n        for (let i = 0; i < 3; i++) {\r\n            if (this.state.categories[i]) {\r\n                categoryTypes +=\r\n                    Util.getEnglishCategory(Constants.CATEGORY_CHECKBOXES[i]) +\r\n                    \",\";\r\n            }\r\n        }\r\n        return categoryTypes.slice(0, -1);\r\n    };\r\n\r\n    isButtonDisabled = () => {\r\n        const checked = this.getNumberOfCheckedCategories();\r\n        return (\r\n            checked === 0 ||\r\n            (this.state.activeChartTypeToggle === \"right\" && checked > 8)\r\n        );\r\n    };\r\n\r\n    getNumberOfCheckedCategories = () =>\r\n        this.state.categories.reduce((prev, next) => +prev + +next);\r\n\r\n    setChecked = index => {\r\n        const categories = this.state.categories;\r\n        categories[index] = !categories[index];\r\n        this.setState({\r\n            categories: categories,\r\n            isButtonDisabled: this.isButtonDisabled()\r\n        });\r\n    };\r\n\r\n    setSumChecked = () => {\r\n        this.setState({ sumChecked: !this.state.sumChecked });\r\n    };\r\n\r\n    getCheckboxes = () => {\r\n        return Constants.CATEGORY_CHECKBOXES.map(text => {\r\n            return (\r\n                <div\r\n                    className=\"checkbox-parent col-xl-2 col-lg-3 col-md-4 col-sm-4 col-xs-6\"\r\n                    key={Constants.CATEGORY_CHECKBOXES.indexOf(text)}\r\n                >\r\n                    <Checkbox\r\n                        index={Constants.CATEGORY_CHECKBOXES.indexOf(text)}\r\n                        className=\"checkbox\"\r\n                        isChecked={\r\n                            this.state.categories[\r\n                                Constants.CATEGORY_CHECKBOXES.indexOf(text)\r\n                            ]\r\n                        }\r\n                        setChecked={this.setChecked}\r\n                        text={text}\r\n                    />\r\n                    {text === \"Egyenleg\" &&\r\n                    this.state.activeChartTypeToggle === \"right\" ? (\r\n                        <div className=\"sumbox-container\">\r\n                            <span>(&Sigma;</span>\r\n                            <Checkbox\r\n                                index={-1}\r\n                                text=\"\"\r\n                                isChecked={this.state.sumChecked}\r\n                                className=\"checkbox sumbox\"\r\n                                setChecked={this.setSumChecked}\r\n                            />\r\n                            <span>)</span>\r\n                        </div>\r\n                    ) : null}\r\n                </div>\r\n            );\r\n        });\r\n    };\r\n\r\n    onRadioButtonClick = active => {\r\n        this.setState({ intervalType: active });\r\n    };\r\n\r\n    onSelectYear = async year => {\r\n        let month = this.state.selectedMonthIndex;\r\n        const now = new Date();\r\n        if (\r\n            year === now.getFullYear() &&\r\n            this.state.selectedMonthIndex > now.getMonth()\r\n        ) {\r\n            month = now.getMonth();\r\n        }\r\n        if (year === 2015 && this.state.selectedMonthIndex < 8) {\r\n            month = 8;\r\n        }\r\n        await this.setState({ selectedYear: year, selectedMonthIndex: month });\r\n    };\r\n\r\n    onSelectMonth = async index => {\r\n        await this.setState({ selectedMonthIndex: index });\r\n    };\r\n\r\n    switchChartType = () => {\r\n        this.setState({\r\n            activeChartTypeToggle:\r\n                this.state.activeChartTypeToggle === \"left\" ? \"right\" : \"left\"\r\n        });\r\n    };\r\n\r\n    getChartData = async () => {\r\n        const { dispatch } = this.props;\r\n        const response = await request({\r\n            url: Util.getEndpoint(\"v1/chart\"),\r\n            data: this.getParams()\r\n        });\r\n        if (!response || response.error) {\r\n            if (response && response.error) {\r\n                dispatch(\r\n                    bubble({\r\n                        shown: true,\r\n                        text: response.status + \" \" + response.message,\r\n                        isError: true\r\n                    })\r\n                );\r\n                dispatch(logout());\r\n            } else {\r\n                dispatch(\r\n                    bubble({\r\n                        shown: true,\r\n                        text: Constants.NO_CONNECTION,\r\n                        isError: true\r\n                    })\r\n                );\r\n                dispatch(offline(true));\r\n            }\r\n        } else {\r\n            dispatch(offline(false));\r\n            await dispatch(chartData(response.result));\r\n            if (\r\n                this.state.intervalType !== \"month\" &&\r\n                this.state.activeChartTypeToggle === \"right\"\r\n            ) {\r\n                this.setState({ isLineChartShown: true });\r\n            } else {\r\n                this.setState({ isBarChartShown: true });\r\n            }\r\n        }\r\n    };\r\n\r\n    hideBarChartModal = () => {\r\n        this.setState({ isBarChartShown: false });\r\n    };\r\n\r\n    hideLineChartModal = () => {\r\n        this.setState({ isLineChartShown: false });\r\n    };\r\n\r\n    render() {\r\n        const { intervalType } = this.state;\r\n        return (\r\n            <div className=\"chart-container\">\r\n                <div className=\"cost-label\">Intervallum típusa</div>\r\n                <div className=\"button-group\">\r\n                    <Button\r\n                        className={`button-group-item month col-xs-4 ${\r\n                            intervalType === \"month\" ? \"active\" : \"\"\r\n                        }`}\r\n                        onClick={() => this.onRadioButtonClick(\"month\")}\r\n                    >\r\n                        Havi\r\n                    </Button>\r\n                    <Button\r\n                        className={`button-group-item year col-xs-4 ${\r\n                            intervalType === \"year\" ? \"active\" : \"\"\r\n                        }`}\r\n                        onClick={() => this.onRadioButtonClick(\"year\")}\r\n                    >\r\n                        Éves\r\n                    </Button>\r\n                    <Button\r\n                        className={`button-group-item full col-xs-4 ${\r\n                            intervalType === \"full\" ? \"active\" : \"\"\r\n                        }`}\r\n                        onClick={() => this.onRadioButtonClick(\"full\")}\r\n                    >\r\n                        Teljes\r\n                    </Button>\r\n                </div>\r\n                <div\r\n                    className={`interval-container ${\r\n                        intervalType === \"month\" ? \"row\" : \"\"\r\n                    }`}\r\n                >\r\n                    {intervalType !== \"full\" && (\r\n                        <div className={`dropdown-container year ${intervalType === \"month\" ? \"col-xs-12 col-sm-6 w_50\" : \"\"}`}>\r\n                            <div className=\"year\">\r\n                                <div className=\"cost-label\">Év</div>\r\n                                <DropdownButton\r\n                                    title={this.state.selectedYear}\r\n                                    id=\"year-dropdown\"\r\n                                >\r\n                                    {Util.getYears(this.onSelectYear)}\r\n                                </DropdownButton>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                    {intervalType === \"month\" && (\r\n                        <div className={`dropdown-container month col-xs-12 col-sm-6`}>\r\n                            <div className=\"month\">\r\n                                <div className=\"cost-label\">Hónap</div>\r\n                                <DropdownButton\r\n                                    title={\r\n                                        Constants.MONTHS[\r\n                                            this.state.selectedMonthIndex\r\n                                        ]\r\n                                    }\r\n                                    id=\"month-dropdown\"\r\n                                >\r\n                                    {Util.getMonths(\r\n                                        this.onSelectMonth,\r\n                                        this.state.selectedYear\r\n                                    )}\r\n                                </DropdownButton>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                    {intervalType !== \"month\" && (\r\n                        <div\r\n                            className={`dropdown-container type ${\r\n                                intervalType === \"year\"\r\n                                    ? \"col-xs-6\"\r\n                                    : \"col-xs-12 full-sized\"\r\n                            }`}\r\n                        >\r\n                            <div className=\"chart-type\">\r\n                                <div className=\"cost-label\">Diagram-típus</div>\r\n                                <ToggleButton\r\n                                    active={this.state.activeChartTypeToggle}\r\n                                    switchActive={this.switchChartType}\r\n                                    leftText=\"Összeg\"\r\n                                    rightText=\"Trend\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                    <div style={{ clear: \"both\" }} />\r\n                </div>\r\n                <div className=\"category-container\">\r\n                    <div className=\"cost-label\">Kategóriák</div>\r\n                    <div className=\"checkbox-container row no-gutters\">\r\n                        {this.getCheckboxes()}\r\n                    </div>\r\n                    <div style={{ clear: \"both\" }} />\r\n                </div>\r\n                <div className=\"button-container\">\r\n                    <Button\r\n                        className=\"btn\"\r\n                        onClick={this.getChartData}\r\n                        disabled={this.state.isButtonDisabled}\r\n                    >\r\n                        OK\r\n                    </Button>\r\n                </div>\r\n                {this.state.isBarChartShown && (\r\n                    <BarChartModal\r\n                        shown={this.state.isBarChartShown}\r\n                        hide={this.hideBarChartModal}\r\n                        numberOfBars={this.getNumberOfCheckedCategories()}\r\n                    />\r\n                )}\r\n                {this.state.isLineChartShown && (\r\n                    <LineChartModal\r\n                        shown={this.state.isLineChartShown}\r\n                        hide={this.hideLineChartModal}\r\n                        isSum={this.state.sumChecked}\r\n                    />\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nChartConfig.propTypes = {\r\n    chartData: PropTypes.object,\r\n    bubble: PropTypes.shape({\r\n        shown: PropTypes.bool,\r\n        text: PropTypes.string,\r\n        isError: PropTypes.bool\r\n    })\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    const { bubble } = state;\r\n    return { bubble };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ChartConfig);\r\n","import React, { Component } from \"react\";\r\nimport \"./Bubble.scss\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { bubble } from \"../../redux/actions\";\r\n\r\nclass Bubble extends Component {\r\n  componentDidMount() {\r\n    setTimeout(this.hide, 2000);\r\n  }\r\n\r\n  hide = () => {\r\n    const { dispatch } = this.props;\r\n    dispatch(bubble({ shown: false }));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={`bubble ${this.props.bubble.isError ? \"error\" : \"\"}`} onClick={this.hide}>\r\n        <div className={`inner ${this.props.bubble.isError ? \"error\" : \"\"}`}>\r\n          {this.props.bubble.text}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nBubble.propTypes = {\r\n  bubble: PropTypes.shape({\r\n    shown: PropTypes.bool,\r\n    text: PropTypes.string,\r\n    isError: PropTypes.bool\r\n  })\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  const { bubble } = state;\r\n  return { bubble };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Bubble);\r\n","import React, { Component } from \"react\";\r\nimport \"./Main.scss\";\r\nimport Header from \"../header/Header\";\r\nimport Login from \"../login/Login\";\r\nimport { connect } from \"react-redux\";\r\nimport { Route, Switch, withRouter } from \"react-router\";\r\nimport Dashboard from \"../dashboard/Dashboard\";\r\nimport Stats from \"../stats/Stats\";\r\nimport PropTypes from \"prop-types\";\r\nimport Query from \"../query/Query\";\r\nimport ChartConfig from \"../chart/ChartConfig\";\r\nimport Bubble from \"../bubble/Bubble\";\r\n\r\nclass Main extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"cost\">\r\n                {!this.props.auth.token ? (\r\n                    <React.Fragment>\r\n                        <Header authenticated={false} />\r\n                        {this.props.offline.isOffline ? null : <Login />}\r\n                        {this.props.bubble.shown ? <Bubble /> : null}\r\n                    </React.Fragment>\r\n                ) : (\r\n                    <React.Fragment>\r\n                        <Header authenticated={true} />\r\n                        {this.props.offline.isOffline ? null : (\r\n                            <Switch>\r\n                                <Route\r\n                                    exact\r\n                                    path={\"/\"}\r\n                                    component={Dashboard}\r\n                                />\r\n                                <Route\r\n                                    exact\r\n                                    path=\"/stats\"\r\n                                    component={Stats}\r\n                                />\r\n                                <Route\r\n                                    exact\r\n                                    path=\"/query\"\r\n                                    component={Query}\r\n                                />\r\n                                <Route\r\n                                    exact\r\n                                    path=\"/chart\"\r\n                                    component={ChartConfig}\r\n                                />\r\n                            </Switch>\r\n                        )}\r\n                        {this.props.bubble.shown ? <Bubble /> : null}\r\n                    </React.Fragment>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMain.propTypes = {\r\n    auth: PropTypes.shape({\r\n        token: PropTypes.string,\r\n        id: PropTypes.string\r\n    }),\r\n    bubble: PropTypes.shape({\r\n        shown: PropTypes.bool,\r\n        text: PropTypes.string,\r\n        isError: PropTypes.bool\r\n    }),\r\n    offline: PropTypes.shape({\r\n        isOffline: PropTypes.bool\r\n    })\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    const { auth, bubble, offline } = state;\r\n    return { auth, bubble, offline };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps)(Main));\r\n","  // In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. CostApp is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import \"./polyfill\";\r\nimport React, { Suspense } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { I18nextProvider } from \"react-i18next\";\r\n\r\nimport i18n from \"i18n\";\r\nimport store from \"./redux/reducers\";\r\nimport Main from \"./components/main/Main\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"./index.scss\";\r\n\r\nimport * as serviceWorker from \"./registerServiceWorker\";\r\n\r\nconst history = createBrowserHistory();\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <Suspense fallback=\" \">\r\n            <I18nextProvider i18n={i18n}>\r\n                <BrowserRouter history={history} basename={'/cost'}>\r\n                    <Main />\r\n                </BrowserRouter>\r\n            </I18nextProvider>\r\n        </Suspense>\r\n    </Provider>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}