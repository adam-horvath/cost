{"version":3,"sources":["logo.svg","i18n.ts","serviceWorker.ts","models/common.model.ts","common/Constants.ts","store/common.ts","utils/request.ts","models/query.model.ts","services/auth.service.ts","store/auth.ts","services/chart.service.ts","store/chart.ts","services/dashboard.service.ts","store/dashboard.ts","services/query.service.ts","store/query.ts","services/stats.service.ts","store/stats.ts","store/index.ts","components/header/TextStripMenu.tsx","components/header/Hamburger.tsx","components/header/Menu.tsx","utils/compose.ts","components/header/Header.tsx","utils/yup.ts","pages/dashboard/Dashboard.tsx","pages/login/Login.tsx","pages/dashboard/ConfirmModal.tsx","components/datepicker/DatePickerWrapper.tsx","components/input/InputWrapper.tsx","pages/dashboard/ItemModal.tsx","utils/util.ts","pages/dashboard/AddItemContainer.tsx","pages/dashboard/DatePickerContainer.tsx","pages/dashboard/ItemList.tsx","components/togglebutton/ToggleButton.tsx","pages/stats/Stats.tsx","models/chart.model.ts","components/dropdown/DropDownItems.tsx","components/dialog/Dialog.tsx","pages/query/QuerySumDialog.tsx","pages/query/QueryListDialog.tsx","pages/query/Query.tsx","components/checkbox/Checkbox.tsx","pages/chart/BarChart.tsx","pages/chart/BarChartModal.tsx","pages/chart/Charts.tsx","pages/chart/LineChart.tsx","pages/chart/LineChartModal.tsx","components/notification/Notification.tsx","pages/app/App.tsx","index.tsx"],"names":["module","exports","i18n","use","Backend","LanguageDetector","initReactI18next","init","backend","loadPath","load","fallbackLng","DEFAULT_LANGUAGE","interpolation","escapeValue","react","wait","detection","caches","Boolean","window","location","hostname","match","Collection","CategoryType","IncomeCategory","CostCategory","NotificationType","Colors","Token","IncomeCategories","IncomeCategoriesWithEmpty","CostCategories","CostCategoriesWithEmpty","Months","CategoryCheckboxes","LineColors","StartDate","Date","Methods","commonSlice","createSlice","name","initialState","notification","descriptionMapping","JSON","parse","localStorage","getItem","reducers","setNotification","state","action","payload","addDescriptionMapping","setItem","stringify","actions","reducer","showNotification","type","Info","text","dispatch","a","axiosInstance","axios","create","resource","method","POST","config","token","headers","Authorization","request","url","response","data","interceptors","error","store","Error","message","logout","Promise","reject","ListItemType","ToggleState","AuthService","credentials","authSlice","loading","id","setTokenAndId","setToken","history","createBrowserHistory","push","go","removeItem","ChartService","params","chartSlice","BALANCE","undefined","COST","INCOME","SALARY","STATE","GIFT","LOAN","OTHER","BANK","CAR","CLOTHES","DRINK","FOOD","GROCERY","HOUSE","INVESTMENT","LUXURY","OVERHEAD","PHARMACY","PHONE","TRAVEL","prevBalance","setChartData","result","key","PREV_BALANCE","mapDataPoints","hasOwnProperty","includes","Object","keys","filter","points","mappedDataPoints","map","item","date","year","Number","split","month","amount","sort","b","sumAmount","forEach","DashboardService","PUT","DELETE","dashboardSlice","items","balance","setDashboardData","QueryService","querySlice","queryData","queryList","setQueryData","setQueryList","mockItem","_id","group_id","category","Other","category_type","Cost","day","description","StatsService","statsSlice","setStatsData","rootReducer","combineReducers","auth","authReducer","chart","chartReducer","common","commonReducer","dashboard","dashboardReducer","query","queryReducer","stats","statsReducer","configureStore","TextStripMenu","className","onClick","Hamburger","openMenu","switchMenuState","t","useTranslation","useHistory","useEffect","document","addEventListener","handleClickOutside","removeEventListener","menuPanelRef","useRef","hamburgerIconRef","event","current","contains","target","onMenuClick","Fragment","ref","classNames","cross","to","Menu","compose","functions","length","arg","reduce","Header","setState","props","this","src","logo","alt","Component","mapDispatchToProps","connect","withTranslation","Yup","mixed","required","string","email","ModalType","Login","onSubmit","login","initialValues","password","validateOnChange","validationSchema","object","shape","noValidate","htmlFor","label","placeholder","authResponse","console","log","ConfirmModal","shown","onCancel","onConfirm","Modal","show","onHide","Title","Body","Footer","Button","variant","DatePickerWrapper","onChange","minDate","maxDate","selected","locale","dropdownMode","todayButton","isClearable","dateFormatCalendar","popperPlacement","dateFormat","InputWrapper","form","field","setFieldValue","propsToPass","validateForm","value","errors","touched","style","color","ItemModal","hide","isCost","createItem","updateItem","deleteItem","setDescriptionMapping","registerLocale","hu","number","test","toString","trim","replace","useState","confirmModalShown","setConfirmModalShown","isValidForm","setValidForm","validatedForm","showConfirmModal","confirmDelete","onSubmitForm","Income","ADD","toISOString","validateOnMount","values","isValid","setFieldTouched","categories","UPDATE","itemType","component","onBlur","DropdownButton","title","i","Dropdown","Item","eventKey","onSelect","autocomplete","disabled","getMoneyString","Math","round","dayPagingAvailable","left","moment","isSame","right","monthPagingAvailable","d","getFullYear","getMonth","now","canvas","createElement","getTextWidth","font","context","getContext","measureText","width","getMaxTextWidth","stringArray","max","AddItemContainer","showItemModal","DatePickerContainer","isPagingAvailable","changeDateWith","onDateChange","ItemList","indexOf","toLowerCase","Empty","Dashboard","itemModalShown","modalType","currentItemId","getData","getDashboardData","setHours","setMinutes","setSeconds","setMilliseconds","handleDateChange","setDate","getDate","setPagingAvailable","newState","hideItemModal","currentItem","find","msg","Stats","getStatsData","changeMonthWith","setMonth","isThisMonth","total_income","total_cost","balance_in_month","daily_average","daily_average_without_house","expected_cost","expected_balance_in_month","expected_balance","visible","ChartKey","ToggleButton","active","leftText","rightText","emptyText","None","Right","Left","empty","getYearItems","onSelectYear","years","getMonths","onSelectMonth","selectedYear","Dialog","onClose","children","QuerySumDialog","QueryListDialog","Query","activeCollectionToggle","activeCategoryTypeToggle","activeExclusionToggle","selectedCategoryIndex","activeFullMatchToggle","minAmount","maxAmount","selectedMonthIndex","sumModalShown","listModalShown","getParams","collection","Balance","exclude_category","description_like","min_amount","max_amount","min","min_date","max_date","switchActiveCollectionToggle","getSum","switchActiveCategoryTypeToggle","switchActiveExclusionToggle","getMenuItems","array","onSelectCategory","index","onDescriptionChange","switchActiveFullMatchToggle","onMinAmountChange","onMaxAmountChange","onMinDateChange","isAfter","onMaxDateChange","isBefore","isInvalidInput","getQueryData","getList","getQueryList","hideSumModal","hideListModal","e","withRouter","Checkbox","isChecked","setChecked","preventDefault","nonVisualizibleData","BarChart","domNode","height","selection","node","resize","setSize","draw","svgSelection","select","_groups","remove","margin","top","bottom","isHorizontalLabels","isNaN","parseInt","offsetWidth","isLarge","innerWidth","barWidth","x","scaleBand","rangeRound","padding","y","scaleLinear","svg","append","attr","domain","abs","g","call","axisBottom","selectAll","nodes","getComputedTextLength","axisLeft","ticks","enter","transition","duration","ease","easeLinear","setTimeout","BarChartAnimationLength","labels","prev","next","r","connector","BarChartModal","numberOfBars","setLarge","handleResize","small","IntervalType","LineChart","legends","tooltipWidth","tooltipHeight","isSum","getComputedStyle","getElementsByClassName","xScale","minValue","maxValue","PrevBalance","yScale","mapX","mapY","shift","getColor","line","d3line","_","curve","curveMonotoneX","that","on","onMouseOver","onMouseOut","LineChartAnimationLength","path","attrTween","tweenDash","circle","tooltipText","classed","translateX","l","getTotalLength","interpolateString","LineChartModal","Charts","intervalType","Month","activeChartTypeToggle","Array","fill","sumChecked","isButtonDisabled","isBarChartShown","isLineChartShown","min_month","max_month","min_year","max_year","Year","category_types","getCategoryTypesParam","getCategoriesParam","slice","categoryTypes","checked","getNumberOfCheckedCategories","setSumChecked","getCheckboxes","onRadioButtonClick","switchChartType","getChartData","hideBarChartModal","hideLineChartModal","Full","row","clear","hideNotification","App","authenticated","exact","ReactDOM","render","StrictMode","fallback","I18nextProvider","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.2d361754.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.7b710682.svg\";","import i18n from 'i18next';\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\nimport Backend from 'i18next-xhr-backend';\r\nimport { initReactI18next } from 'react-i18next';\r\nimport { DEFAULT_LANGUAGE } from './supported-languages.json';\r\n\r\nexport function extract(key: string, defaultValue: string) {\r\n  return defaultValue || key;\r\n}\r\n\r\ni18n\r\n  .use(Backend)\r\n  .use(LanguageDetector)\r\n  .use(initReactI18next)\r\n  .init({\r\n    backend: {\r\n      loadPath: 'cost/locales/{{lng}}/{{ns}}.json',\r\n    },\r\n    load: 'languageOnly',\r\n    fallbackLng: DEFAULT_LANGUAGE,\r\n    interpolation: {\r\n      escapeValue: false,\r\n    },\r\n    react: {\r\n      wait: true,\r\n    },\r\n    detection: {\r\n      caches: ['cookie', 'localStorage'],\r\n    },\r\n  });\r\n\r\nexport default i18n;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","export enum Collection {\r\n  Item = 'item',\r\n  Balance = 'balance',\r\n}\r\n\r\nexport enum CategoryType {\r\n  Cost = 'COST',\r\n  Income = 'INCOME',\r\n}\r\n\r\nexport enum IncomeCategory {\r\n  Gift = 'GIFT',\r\n  State = 'STATE',\r\n  Investment = 'INVESTMENT',\r\n  Salary = 'SALARY',\r\n  Loan = 'LOAN',\r\n  Other = 'OTHER',\r\n}\r\n\r\nexport enum CostCategory {\r\n  Gift = 'GIFT',\r\n  Car = 'CAR',\r\n  Bank = 'BANK',\r\n  Investment = 'INVESTMENT',\r\n  Grocery = 'GROCERY',\r\n  Pharmacy = 'PHARMACY',\r\n  House = 'HOUSE',\r\n  Food = 'FOOD',\r\n  Drink = 'DRINK',\r\n  Loan = 'LOAN',\r\n  Luxury = 'LUXURY',\r\n  Overhead = 'OVERHEAD',\r\n  Clothes = 'CLOTHES',\r\n  Phone = 'PHONE',\r\n  Travel = 'TRAVEL',\r\n  Other = 'OTHER',\r\n}\r\n\r\nexport enum NotificationType {\r\n  Error = 'Error',\r\n  Info = 'Info',\r\n}\r\n\r\nexport interface NotificationModel {\r\n  type?: NotificationType;\r\n  text: string;\r\n}","export const Colors = {\r\n  costBlue: '#3f51b5',\r\n  costRed: '#c00',\r\n  costGreen: '#0a0',\r\n  lightGray: '#f5f5f5',\r\n  yellow: '#e6da00',\r\n  cyan: '#28f8fd',\r\n  lightGreen: '#29fc88',\r\n  purple: '#c927fe',\r\n  darkGray: '#333',\r\n  pink: '#ff2698',\r\n  orange: '#ff7f27',\r\n  kheki: '#808000',\r\n};\r\n\r\nexport const Token = 'cost-token';\r\n\r\nexport const IncomeCategories = [\r\n  'Ajándék',\r\n  'Állam',\r\n  'Befektetés',\r\n  'Fizetés',\r\n  'Kölcsön',\r\n  'Egyéb',\r\n];\r\n\r\nexport const IncomeCategoriesWithEmpty = [\r\n  '',\r\n  'Ajándék',\r\n  'Állam',\r\n  'Befektetés',\r\n  'Fizetés',\r\n  'Kölcsön',\r\n  'Egyéb',\r\n];\r\n\r\nexport const CostCategories = [\r\n  'Ajándék',\r\n  'Autó',\r\n  'Bank',\r\n  'Befektetés',\r\n  'Bevásárlás',\r\n  'Gyógyszertár',\r\n  'Ház',\r\n  'Kaja',\r\n  'Kocsma',\r\n  'Kölcsön',\r\n  'Luxus',\r\n  'Rezsi',\r\n  'Ruha',\r\n  'Telefon',\r\n  'Utazás',\r\n  'Egyéb',\r\n];\r\n\r\nexport const CostCategoriesWithEmpty = [\r\n  '',\r\n  'Ajándék',\r\n  'Autó',\r\n  'Bank',\r\n  'Befektetés',\r\n  'Bevásárlás',\r\n  'Gyógyszertár',\r\n  'Ház',\r\n  'Kaja',\r\n  'Kocsma',\r\n  'Kölcsön',\r\n  'Luxus',\r\n  'Rezsi',\r\n  'Ruha',\r\n  'Telefon',\r\n  'Utazás',\r\n  'Egyéb',\r\n];\r\n\r\nexport const Months = [\r\n  'január',\r\n  'február',\r\n  'március',\r\n  'április',\r\n  'május',\r\n  'június',\r\n  'július',\r\n  'augusztus',\r\n  'szeptember',\r\n  'október',\r\n  'november',\r\n  'december',\r\n];\r\n\r\nexport const CategoryCheckboxes = [\r\n  'Egyenleg',\r\n  'Bevétel',\r\n  'Kiadás',\r\n  'Ajándék',\r\n  'Autó',\r\n  'Bank',\r\n  'Befektetés',\r\n  'Bevásárlás',\r\n  'Gyógyszertár',\r\n  'Ház',\r\n  'Kaja',\r\n  'Kocsma',\r\n  'Kölcsön',\r\n  'Luxus',\r\n  'Rezsi',\r\n  'Ruha',\r\n  'Telefon',\r\n  'Utazás',\r\n  'Egyéb',\r\n];\r\n\r\nexport const LineColors = [\r\n  Colors.yellow,\r\n  Colors.purple,\r\n  Colors.lightGreen,\r\n  Colors.darkGray,\r\n  Colors.orange,\r\n  Colors.cyan,\r\n  Colors.kheki,\r\n  Colors.pink,\r\n];\r\n\r\nexport const LineChartAnimationLength = 1000;\r\nexport const BarChartAnimationLength = 700;\r\n\r\nexport const StartDate = new Date('2015-09-01');\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\nimport {\r\n  CostCategory,\r\n  IncomeCategory,\r\n  NotificationModel,\r\n  NotificationType,\r\n} from 'models/common.model';\r\n\r\nexport interface CommonState {\r\n  notification: NotificationModel | null;\r\n  descriptionMapping: DescriptionMappingModel;\r\n}\r\n\r\nexport interface DescriptionMappingModel {\r\n  [key: string]: CostCategory | IncomeCategory;\r\n}\r\n\r\nconst descriptionMapping = 'descriptionMapping';\r\n\r\nconst commonSlice = createSlice({\r\n  name: 'common',\r\n  initialState: {\r\n    notification: null,\r\n    descriptionMapping: JSON.parse(\r\n      localStorage.getItem(descriptionMapping) || '{}',\r\n    ),\r\n  } as CommonState,\r\n  reducers: {\r\n    setNotification: (\r\n      state,\r\n      action: PayloadAction<NotificationModel | null>,\r\n    ) => {\r\n      state.notification = action.payload;\r\n    },\r\n    addDescriptionMapping: (\r\n      state,\r\n      action: PayloadAction<DescriptionMappingModel>,\r\n    ) => {\r\n      state.descriptionMapping = {\r\n        ...state.descriptionMapping,\r\n        ...action.payload,\r\n      };\r\n      localStorage.setItem(\r\n        descriptionMapping,\r\n        JSON.stringify({\r\n          ...state.descriptionMapping,\r\n          ...action.payload,\r\n        }),\r\n      );\r\n    },\r\n  },\r\n});\r\n\r\nconst { actions, reducer } = commonSlice;\r\n\r\nexport const showNotification = ({\r\n  type = NotificationType.Info,\r\n  text,\r\n}: NotificationModel) => async (dispatch: AppDispatch) => {\r\n  dispatch(actions.setNotification({ type, text }));\r\n};\r\n\r\nexport const hideNotification = () => async (dispatch: AppDispatch) => {\r\n  dispatch(actions.setNotification(null));\r\n};\r\n\r\nexport const setDescriptionMapping = (\r\n  descriptionMapping: DescriptionMappingModel,\r\n) => async (dispatch: AppDispatch) => {\r\n  dispatch(actions.addDescriptionMapping(descriptionMapping));\r\n};\r\n\r\nexport default reducer;\r\n","import axios, { AxiosError, AxiosRequestConfig } from 'axios';\r\nimport { createBrowserHistory } from 'history';\r\n\r\nimport { Token } from 'common/Constants';\r\nimport store from 'store';\r\nimport { showNotification } from 'store/common';\r\nimport { NotificationType } from 'models/common.model';\r\nimport { logout } from 'store/auth';\r\n\r\nexport enum Methods {\r\n  GET = 'GET',\r\n  PUT = 'PUT',\r\n  POST = 'POST',\r\n  DELETE = 'DELETE',\r\n}\r\n\r\nexport interface RequestConfig extends AxiosRequestConfig {\r\n  resource: string;\r\n  method?: Methods;\r\n}\r\n\r\n// const API_BASE_URL = 'http://localhost:8080/api';\r\nconst API_BASE_URL = 'https://horvathadam.info/api';\r\n\r\nconst axiosInstance = axios.create({});\r\n\r\naxiosInstance.interceptors.response.use(\r\n  async (response) => response,\r\n  async (error: AxiosError) => {\r\n    //store.dispatch(hideLoader());\r\n    store.dispatch(\r\n      showNotification({\r\n        type: NotificationType.Error,\r\n        text: error.message,\r\n      }),\r\n    );\r\n    store.dispatch(logout());\r\n    return Promise.reject(error);\r\n  },\r\n);\r\n\r\nasync function request<T = void>({\r\n  resource,\r\n  method = Methods.POST,\r\n  ...config\r\n}: RequestConfig) {\r\n  config = config || {};\r\n  const token = localStorage.getItem(Token);\r\n  if (token) {\r\n    config = {\r\n      ...config,\r\n      headers: {\r\n        Authorization: token,\r\n      },\r\n    };\r\n  }\r\n  const { data: response } = await axiosInstance.request<T>({\r\n    method,\r\n    url: API_BASE_URL + resource,\r\n    ...config,\r\n  });\r\n  return response;\r\n}\r\n\r\nexport default request;\r\n","import {\r\n  CategoryType,\r\n  Collection,\r\n  CostCategory,\r\n  IncomeCategory,\r\n} from 'models/common.model';\r\nimport { ItemModel } from 'models/dashboard.model';\r\n\r\nexport interface QueryParamsModel {\r\n  collection: Collection;\r\n  category_type: CategoryType;\r\n  category?: CostCategory | IncomeCategory;\r\n  exclude_category?: boolean;\r\n  description?: string;\r\n  description_like?: boolean;\r\n  min_amount?: number;\r\n  max_amount?: number;\r\n  min_date?: Date;\r\n  max_date?: Date;\r\n  year?: number;\r\n  month?: number;\r\n}\r\n\r\nexport interface QueryDataModel {\r\n  success: boolean;\r\n  value: number;\r\n  numberOfItems: number;\r\n}\r\n\r\nexport interface QueryListModel {\r\n  success: boolean;\r\n  items: ItemModel[];\r\n}\r\n\r\nexport enum ListItemType {\r\n  Header = 'header',\r\n  Item = 'item',\r\n}\r\n\r\nexport interface ListItemModel extends ItemModel {\r\n  type: ListItemType;\r\n}\r\n\r\nexport interface QueryListItemModel {\r\n  success: boolean;\r\n  items: ListItemModel[];\r\n}\r\n\r\nexport enum ToggleState {\r\n  Left = 'left',\r\n  Right = 'right',\r\n}\r\n","import request from 'utils/request';\r\nimport { CredentialsModel, CredentialsResponseModel } from 'models/auth.model';\r\n\r\nexport class AuthService {\r\n  static async login(credentials: CredentialsModel) {\r\n    return await request<CredentialsResponseModel>({\r\n      resource: '/login',\r\n      data: credentials,\r\n    });\r\n  }\r\n}\r\n","import { AxiosError } from 'axios';\r\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { createBrowserHistory } from 'history';\r\n\r\nimport { AuthService } from 'services/auth.service';\r\nimport { CredentialsModel, CredentialsResponseModel } from 'models/auth.model';\r\nimport { Token } from 'common/Constants';\r\n\r\nexport interface AuthState {\r\n  loading: boolean;\r\n  token: string | null;\r\n  id?: string | null;\r\n  error: AxiosError | null;\r\n}\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState: {\r\n    loading: false,\r\n    token: localStorage.getItem(Token) || null,\r\n    id: null,\r\n    error: null,\r\n  } as AuthState,\r\n  reducers: {\r\n    setTokenAndId: (\r\n      state,\r\n      action: PayloadAction<CredentialsResponseModel | null>,\r\n    ) => {\r\n      setToken(action.payload?.token);\r\n      state.token = action.payload?.token || null;\r\n      state.id = action.payload?.id;\r\n    },\r\n    logout() {\r\n      setToken(null);\r\n      const history = createBrowserHistory();\r\n      history.push('/login');\r\n      history.go(0);\r\n    },\r\n  },\r\n});\r\n\r\nconst { actions, reducer } = authSlice;\r\n\r\nconst setToken = (token?: string | null) => {\r\n  if (token) {\r\n    localStorage.setItem(Token, token);\r\n  } else {\r\n    localStorage.removeItem(Token);\r\n  }\r\n};\r\n\r\nexport const login = (credentials: CredentialsModel) => async (\r\n  dispatch: AppDispatch,\r\n) => {\r\n  try {\r\n    const authResponse = await AuthService.login(credentials);\r\n    dispatch(actions.setTokenAndId(authResponse));\r\n  } catch (e) {\r\n    console.log(e);\r\n    throw e;\r\n  }\r\n};\r\n\r\nexport const logout = () => async (dispatch: AppDispatch) => {\r\n  dispatch(actions.logout());\r\n};\r\n\r\nexport default reducer;\r\n","import request from 'utils/request';\r\nimport { ChartDataModel, ChartParamsModel } from 'models/chart.model';\r\n\r\nexport class ChartService {\r\n  static async getChartData(params: ChartParamsModel) {\r\n    return await request<ChartDataModel>({\r\n      resource: '/v1/chart',\r\n      data: params,\r\n    });\r\n  }\r\n}\r\n","import { AxiosError } from 'axios';\r\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\nimport { ChartService } from 'services/chart.service';\r\nimport {\r\n  ChartDataModel,\r\n  ChartDataPoint,\r\n  ChartParamsModel,\r\n  MappedDataPoint,\r\n} from 'models/chart.model';\r\n\r\nexport interface ChartState {\r\n  loading: boolean;\r\n  BALANCE?: MappedDataPoint[];\r\n  COST?: MappedDataPoint[];\r\n  INCOME?: MappedDataPoint[];\r\n  SALARY?: MappedDataPoint[];\r\n  STATE?: MappedDataPoint[];\r\n  GIFT?: MappedDataPoint[];\r\n  LOAN?: MappedDataPoint[];\r\n  OTHER?: MappedDataPoint[];\r\n  BANK?: MappedDataPoint[];\r\n  CAR?: MappedDataPoint[];\r\n  CLOTHES?: MappedDataPoint[];\r\n  DRINK?: MappedDataPoint[];\r\n  FOOD?: MappedDataPoint[];\r\n  GROCERY?: MappedDataPoint[];\r\n  HOUSE?: MappedDataPoint[];\r\n  INVESTMENT?: MappedDataPoint[];\r\n  LUXURY?: MappedDataPoint[];\r\n  OVERHEAD?: MappedDataPoint[];\r\n  PHARMACY?: MappedDataPoint[];\r\n  PHONE?: MappedDataPoint[];\r\n  TRAVEL?: MappedDataPoint[];\r\n  prevBalance: number;\r\n  error: AxiosError | null;\r\n}\r\n\r\nconst chartSlice = createSlice({\r\n  name: 'chart',\r\n  initialState: {\r\n    loading: false,\r\n    BALANCE: undefined,\r\n    COST: undefined,\r\n    INCOME: undefined,\r\n    SALARY: undefined,\r\n    STATE: undefined,\r\n    GIFT: undefined,\r\n    LOAN: undefined,\r\n    OTHER: undefined,\r\n    BANK: undefined,\r\n    CAR: undefined,\r\n    CLOTHES: undefined,\r\n    DRINK: undefined,\r\n    FOOD: undefined,\r\n    GROCERY: undefined,\r\n    HOUSE: undefined,\r\n    INVESTMENT: undefined,\r\n    LUXURY: undefined,\r\n    OVERHEAD: undefined,\r\n    PHARMACY: undefined,\r\n    PHONE: undefined,\r\n    TRAVEL: undefined,\r\n    prevBalance: 0,\r\n    error: null,\r\n  } as ChartState,\r\n  reducers: {\r\n    setChartData: (state, action: PayloadAction<ChartDataModel>) => {\r\n      const { result } = action.payload;\r\n      if (result.BALANCE) {\r\n        state.prevBalance = result.PREV_BALANCE;\r\n        state.BALANCE = mapDataPoints(result.BALANCE, result.PREV_BALANCE);\r\n      } else {\r\n        state.BALANCE = undefined;\r\n      }\r\n      if (result.COST) {\r\n        state.COST = mapDataPoints(result.COST);\r\n      } else {\r\n        state.COST = undefined;\r\n      }\r\n      if (result.INCOME) {\r\n        state.INCOME = mapDataPoints(result.INCOME);\r\n      } else {\r\n        state.INCOME = undefined;\r\n      }\r\n      for (let key in result) {\r\n        if (\r\n          result.hasOwnProperty(key) &&\r\n          !['BALANCE', 'COST', 'INCOME', 'PREV_BALANCE'].includes(key)\r\n        ) {\r\n          // @ts-ignore\r\n          state[key] = mapDataPoints(result[key]);\r\n        }\r\n      }\r\n      for (let key of Object.keys(state).filter(\r\n        (key) =>\r\n          ![\r\n            'loading',\r\n            'error',\r\n            'BALANCE',\r\n            'COST',\r\n            'INCOME',\r\n            'prevBalance',\r\n          ].includes(key),\r\n      )) {\r\n        if (!result.hasOwnProperty(key)) {\r\n          // @ts-ignore\r\n          state[key] = undefined;\r\n        }\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nconst mapDataPoints = (\r\n  points: ChartDataPoint[],\r\n  prevBalance?: number,\r\n): MappedDataPoint[] => {\r\n  const mappedDataPoints: Array<MappedDataPoint> =\r\n    points.map((item) => {\r\n      const date = Object.keys(item)[0];\r\n      return {\r\n        year: Number(date.split('_')[0]),\r\n        month: Number(date.split('_')[1]),\r\n        amount: item[date],\r\n      };\r\n    }) || [];\r\n  mappedDataPoints.sort((a, b) =>\r\n    a.year < b.year ? -1 : a.year > b.year ? 1 : a.month < b.month ? -1 : 1,\r\n  );\r\n  if (prevBalance || prevBalance === 0) {\r\n    let sumAmount = prevBalance;\r\n    mappedDataPoints.forEach((item) => {\r\n      sumAmount += item.amount;\r\n      item.sumAmount = sumAmount;\r\n    });\r\n  }\r\n  return mappedDataPoints;\r\n};\r\n\r\nconst { actions, reducer } = chartSlice;\r\n\r\nexport const getChartData = (params: ChartParamsModel) => async (\r\n  dispatch: AppDispatch,\r\n) => {\r\n  try {\r\n    const result = await ChartService.getChartData(params);\r\n    dispatch(actions.setChartData(result));\r\n  } catch (e) {\r\n    console.log(e);\r\n    throw e;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import request, { Methods } from 'utils/request';\r\nimport {\r\n  DashboardDataModel,\r\n  DashboardParamsModel,\r\n  ItemParamsModel,\r\n  ItemResponseModel,\r\n} from 'models/dashboard.model';\r\n\r\nexport class DashboardService {\r\n  static async getDashboardData(params: DashboardParamsModel) {\r\n    return await request<DashboardDataModel>({\r\n      resource: '/v1/main',\r\n      data: params,\r\n    });\r\n  }\r\n\r\n  static async createItem(params: ItemParamsModel) {\r\n    return await request<ItemResponseModel>({\r\n      resource: '/v1/item',\r\n      data: params,\r\n    });\r\n  }\r\n\r\n  static async updateItem(params: ItemParamsModel) {\r\n    return await request<ItemResponseModel>({\r\n      method: Methods.PUT,\r\n      resource: '/v1/item',\r\n      data: params,\r\n    });\r\n  }\r\n\r\n  static async deleteItem(id: string) {\r\n    return await request<ItemResponseModel>({\r\n      method: Methods.DELETE,\r\n      resource: `/v1/item/${id}`,\r\n    });\r\n  }\r\n}\r\n","import { AxiosError } from 'axios';\r\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\nimport { DashboardService } from 'services/dashboard.service';\r\nimport {\r\n  DashboardDataModel,\r\n  DashboardParamsModel,\r\n  ItemModel,\r\n  ItemParamsModel,\r\n} from 'models/dashboard.model';\r\nimport { showNotification } from './common';\r\n\r\nexport interface DashboardState {\r\n  loading: boolean;\r\n  items: ItemModel[];\r\n  balance: number;\r\n  error: AxiosError | null;\r\n}\r\n\r\nconst dashboardSlice = createSlice({\r\n  name: 'dashboard',\r\n  initialState: {\r\n    loading: false,\r\n    items: [],\r\n    balance: 0,\r\n    error: null,\r\n  } as DashboardState,\r\n  reducers: {\r\n    setDashboardData: (state, action: PayloadAction<DashboardDataModel>) => {\r\n      state.items = action.payload.items;\r\n      state.balance = action.payload.balance;\r\n    },\r\n  },\r\n});\r\n\r\nconst { actions, reducer } = dashboardSlice;\r\n\r\nexport const getDashboardData = (params: DashboardParamsModel) => async (\r\n  dispatch: AppDispatch,\r\n) => {\r\n  try {\r\n    const data = await DashboardService.getDashboardData(params);\r\n    dispatch(actions.setDashboardData(data));\r\n  } catch (e) {\r\n    console.log(e);\r\n    throw e;\r\n  }\r\n};\r\n\r\nexport const createItem = (item: ItemParamsModel) => async (\r\n  dispatch: AppDispatch,\r\n) => {\r\n  try {\r\n    const response = await DashboardService.createItem(item);\r\n    dispatch(showNotification({ text: response.msg }));\r\n  } catch (e) {\r\n    console.log(e);\r\n    throw e;\r\n  }\r\n};\r\n\r\nexport const updateItem = (item: ItemParamsModel) => async (\r\n  dispatch: AppDispatch,\r\n) => {\r\n  try {\r\n    const response = await DashboardService.updateItem(item);\r\n    dispatch(showNotification({ text: response.msg }));\r\n  } catch (e) {\r\n    console.log(e);\r\n    throw e;\r\n  }\r\n};\r\n\r\nexport const deleteItem = (id: string) => async (dispatch: AppDispatch) => {\r\n  try {\r\n    const response = await DashboardService.deleteItem(id);\r\n    dispatch(showNotification({ text: response.msg }));\r\n  } catch (e) {\r\n    console.log(e);\r\n    throw e;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import request from \"utils/request\";\r\nimport {\r\n  QueryParamsModel,\r\n  QueryDataModel,\r\n  QueryListModel\r\n} from \"models/query.model\";\r\n\r\nexport class QueryService {\r\n  static async getQueryData(params: QueryParamsModel) {\r\n    return await request<QueryDataModel>({\r\n      resource: \"/v1/query\",\r\n      data: params\r\n    });\r\n  }\r\n\r\n  static async getQueryList(params: QueryParamsModel) {\r\n    return await request<QueryListModel>({\r\n      resource: \"/v1/query-list\",\r\n      data: params\r\n    });\r\n  }\r\n}\r\n","import { AxiosError } from 'axios';\r\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\nimport { QueryService } from 'services/query.service';\r\nimport {\r\n  ListItemModel,\r\n  ListItemType,\r\n  QueryDataModel,\r\n  QueryListItemModel,\r\n  QueryParamsModel,\r\n} from 'models/query.model';\r\nimport { ItemModel } from 'models/dashboard.model';\r\nimport { CategoryType, CostCategory } from 'models/common.model';\r\n\r\nexport interface QueryState {\r\n  loading: boolean;\r\n  queryData: QueryDataModel | null;\r\n  queryList: QueryListItemModel | null;\r\n  error: AxiosError | null;\r\n}\r\n\r\nconst querySlice = createSlice({\r\n  name: 'query',\r\n  initialState: {\r\n    loading: false,\r\n    queryData: null,\r\n    queryList: null,\r\n    error: null,\r\n  } as QueryState,\r\n  reducers: {\r\n    setQueryData: (state, action: PayloadAction<QueryDataModel>) => {\r\n      state.queryData = action.payload;\r\n    },\r\n    setQueryList: (state, action: PayloadAction<QueryListItemModel>) => {\r\n      state.queryList = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nconst { actions, reducer } = querySlice;\r\n\r\nexport const getQueryData = (params: QueryParamsModel) => async (\r\n  dispatch: AppDispatch,\r\n) => {\r\n  try {\r\n    const result = await QueryService.getQueryData(params);\r\n    dispatch(actions.setQueryData(result));\r\n  } catch (e) {\r\n    console.log(e);\r\n    throw e;\r\n  }\r\n};\r\n\r\nconst mockItem: Omit<ItemModel, 'date'> = {\r\n  _id: '',\r\n  group_id: '',\r\n  amount: 0,\r\n  category: CostCategory.Other,\r\n  category_type: CategoryType.Cost,\r\n  year: 2015,\r\n  month: 8,\r\n  day: 1,\r\n  description: '',\r\n};\r\n\r\nexport const getQueryList = (params: QueryParamsModel) => async (\r\n  dispatch: AppDispatch,\r\n) => {\r\n  try {\r\n    const result = await QueryService.getQueryList(params);\r\n    const items: ListItemModel[] = [];\r\n    let date: string | null = null;\r\n    result.items.forEach(item => {\r\n      if (date == null || date !== item.date) {\r\n        items.push({\r\n          type: ListItemType.Header,\r\n          date: item.date,\r\n          ...mockItem,\r\n        });\r\n        date = item.date;\r\n      }\r\n      items.push({ type: ListItemType.Item, ...item });\r\n    });\r\n    dispatch(actions.setQueryList({ ...result, items }));\r\n  } catch (e) {\r\n    console.log(e);\r\n    throw e;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import request from 'utils/request';\r\nimport { StatsResponseModel } from 'models/stats.model';\r\n\r\nexport class StatsService {\r\n  static async getStatsData(date: string) {\r\n    return await request<StatsResponseModel>({\r\n      resource: '/v1/stats',\r\n      data: {\r\n        date,\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { AxiosError } from 'axios';\r\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\nimport { StatsService } from 'services/stats.service';\r\nimport { StatsResponseModel } from 'models/stats.model';\r\n\r\nexport interface StatsState {\r\n  loading: boolean;\r\n  data: StatsResponseModel | null;\r\n  error: AxiosError | null;\r\n}\r\n\r\nconst statsSlice = createSlice({\r\n  name: 'stats',\r\n  initialState: {\r\n    loading: false,\r\n    data: null,\r\n    error: null,\r\n  } as StatsState,\r\n  reducers: {\r\n    setStatsData: (state, action: PayloadAction<StatsResponseModel>) => {\r\n      state.data = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nconst { actions, reducer } = statsSlice;\r\n\r\nexport const getStatsData = (date: string) => async (\r\n  dispatch: AppDispatch,\r\n) => {\r\n  try {\r\n    const result = await StatsService.getStatsData(date);\r\n    dispatch(actions.setStatsData(result));\r\n  } catch (e) {\r\n    console.log(e);\r\n    throw e;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { combineReducers, configureStore } from '@reduxjs/toolkit';\r\n\r\nimport authReducer from './auth';\r\nimport chartReducer from './chart';\r\nimport commonReducer from './common';\r\nimport dashboardReducer from './dashboard';\r\nimport queryReducer from './query';\r\nimport statsReducer from './stats';\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  chart: chartReducer,\r\n  common: commonReducer,\r\n  dashboard: dashboardReducer,\r\n  query: queryReducer,\r\n  stats: statsReducer,\r\n});\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n});\r\n\r\nexport default store;\r\n\r\ndeclare global {\r\n  type ApplicationState = ReturnType<typeof rootReducer>;\r\n\r\n  type AppDispatch = typeof store.dispatch;\r\n\r\n  type GetState = () => ApplicationState;\r\n}\r\n","import React, { FC } from 'react';\r\n\r\nimport './TextStripMenu.scss';\r\n\r\nexport interface TextStripMenuProps {\r\n  logout: () => void;\r\n}\r\n\r\nexport const TextStripMenu: FC<TextStripMenuProps> = ({ logout }) => {\r\n  return (\r\n    <div className=\"text-strip-menu\">\r\n      <span className=\"menu-item\" onClick={logout}>\r\n        <div className={'logout-icon'} />\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n","import React, { FC, useEffect, useRef } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next';\r\nimport classNames from 'classnames';\r\nimport { History } from 'history';\r\n\r\nimport './Hamburger.scss';\r\n\r\nexport interface HamburgerProps {\r\n  openMenu: boolean;\r\n  switchMenuState: () => void;\r\n  logout: (history: History) => void;\r\n}\r\n\r\nexport const Hamburger: FC<HamburgerProps> = ({\r\n  openMenu,\r\n  switchMenuState,\r\n  logout,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('mousedown', handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleClickOutside);\r\n    };\r\n  }, [openMenu]);\r\n\r\n  const menuPanelRef = useRef<HTMLDivElement>(null);\r\n  const hamburgerIconRef = useRef<HTMLDivElement>(null);\r\n\r\n  const handleClickOutside = (event: Event) => {\r\n    if (\r\n      menuPanelRef &&\r\n      !menuPanelRef.current?.contains(event.target as Node) &&\r\n      hamburgerIconRef &&\r\n      !hamburgerIconRef.current?.contains(event.target as Node) &&\r\n      openMenu\r\n    ) {\r\n      switchMenuState();\r\n    }\r\n  };\r\n\r\n  const onMenuClick = () => {\r\n    switchMenuState();\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div\r\n        ref={hamburgerIconRef}\r\n        className={classNames('hamburger-icon', { cross: openMenu })}\r\n        onClick={onMenuClick}\r\n      >\r\n        <div />\r\n        <div />\r\n        <div />\r\n      </div>\r\n      <div\r\n        ref={menuPanelRef}\r\n        className={`hamburger-panel ${openMenu ? 'open' : 'closed'}`}\r\n      >\r\n        <div className=\"menu-item\">\r\n          <Link to=\"/\" onClick={onMenuClick}>\r\n            {t('MENU.MAIN')}\r\n          </Link>\r\n        </div>\r\n        <div className=\"menu-item\">\r\n          <Link to=\"/stats\" onClick={onMenuClick}>\r\n            {t('MENU.STATS')}\r\n          </Link>\r\n        </div>\r\n        <div className=\"menu-item\">\r\n          <Link to=\"/query\" onClick={onMenuClick}>\r\n            {t('MENU.QUERIES')}\r\n          </Link>\r\n        </div>\r\n        <div className=\"menu-item\">\r\n          <Link to=\"/chart\" onClick={onMenuClick}>\r\n            {t('MENU.CHARTS')}\r\n          </Link>\r\n        </div>\r\n        <div className=\"menu-item\" onClick={() => logout(history)}>\r\n          {t('MENU.LOGOUT')}\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import React, { FC } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport './Menu.scss';\r\n\r\nexport const Menu: FC<{}> = () => {\r\n  const { t } = useTranslation();\r\n  return (\r\n    <div className=\"menu row\">\r\n      <div className=\"entry-container col-sm-3\">\r\n        <Link to=\"/\" className=\"menu-entry\">\r\n          {t('MENU.MAIN')}\r\n        </Link>\r\n      </div>\r\n      <div className=\"entry-container col-sm-3\">\r\n        <Link to=\"/stats\" className=\"menu-entry\">\r\n          {t('MENU.STATS')}\r\n        </Link>\r\n      </div>\r\n      <div className=\"entry-container col-sm-3\">\r\n        <Link to=\"/query\" className=\"menu-entry\">\r\n          {t('MENU.QUERIES')}\r\n        </Link>\r\n      </div>\r\n      <div className=\"entry-container col-sm-3\">\r\n        <Link to=\"/chart\" className=\"menu-entry\">\r\n          {t('MENU.CHARTS')}\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","export function compose(...functions: Function[]) {\r\n  if (functions.length === 0) {\r\n    return <T>(arg: T) => arg;\r\n  }\r\n\r\n  if (functions.length === 1) {\r\n    return functions[0];\r\n  }\r\n\r\n  return functions.reduce((a, b) => (...args: any) => a(b(...args)));\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect, ConnectedProps } from 'react-redux';\r\nimport { withTranslation, WithTranslation } from 'react-i18next';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { TextStripMenu } from './TextStripMenu';\r\nimport { Hamburger } from './Hamburger';\r\nimport { Menu } from './Menu';\r\nimport { logout } from 'store/auth';\r\nimport { compose } from 'utils/compose';\r\nimport logo from 'logo.svg';\r\nimport './Header.scss';\r\n\r\nexport interface HeaderProps\r\n  extends WithTranslation,\r\n    ConnectedProps<typeof connector> {}\r\n\r\ninterface HeaderState {\r\n  openMenu: boolean;\r\n}\r\n\r\nclass Header extends Component<HeaderProps, HeaderState> {\r\n  state = {\r\n    openMenu: false,\r\n  };\r\n\r\n  switchMenuState = () => {\r\n    this.setState({ openMenu: !this.state.openMenu });\r\n  };\r\n\r\n  logout = () => {\r\n    this.setState({ openMenu: false });\r\n    this.props.logout();\r\n  };\r\n\r\n  render() {\r\n    const { t, token } = this.props;\r\n    return (\r\n      <header>\r\n        <div className={'header-top'}>\r\n          <Link to=\"/\">\r\n            <img src={logo} className=\"logo\" alt=\"logo\" />\r\n          </Link>\r\n          <Link to=\"/\">\r\n            <h1 className=\"title\">{t('COMMON.APP_NAME')}</h1>\r\n          </Link>\r\n          {token ? (\r\n            <React.Fragment>\r\n              <TextStripMenu logout={this.logout} />\r\n              <Hamburger\r\n                openMenu={this.state.openMenu}\r\n                switchMenuState={this.switchMenuState}\r\n                logout={this.logout}\r\n              />\r\n            </React.Fragment>\r\n          ) : null}\r\n        </div>\r\n        {token ? <Menu /> : null}\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: ApplicationState) => {\r\n  return {\r\n    token: state.auth.token,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  logout,\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default compose(connector)(withTranslation()(Header));\r\n","import * as Yup from 'yup';\r\nimport i18n from 'i18n';\r\n\r\nYup.setLocale({\r\n  mixed: {\r\n    required: () => i18n.t('ERRORS.FIELD_REQUIRED'),\r\n  },\r\n  string: {\r\n    email: () => i18n.t('ERRORS.EMAIL_INVALID'),\r\n  },\r\n});\r\n\r\nexport default Yup;\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect, ConnectedProps } from 'react-redux';\r\nimport { WithTranslation, withTranslation } from 'react-i18next';\r\nimport { registerLocale } from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport 'moment/locale/hu';\r\nimport hu from 'date-fns/locale/hu';\r\n\r\nimport { ItemModal } from './ItemModal';\r\nimport { compose } from 'utils/compose';\r\nimport {\r\n  createItem,\r\n  deleteItem,\r\n  getDashboardData,\r\n  updateItem,\r\n} from 'store/dashboard';\r\nimport { dayPagingAvailable, getMoneyString } from 'utils/util';\r\nimport { AddItemContainer } from './AddItemContainer';\r\nimport { DatePickerContainer } from './DatePickerContainer';\r\nimport { ItemList } from './ItemList';\r\nimport { CostCategories, IncomeCategories } from 'common/Constants';\r\nimport { CostCategory, IncomeCategory } from 'models/common.model';\r\nimport './Dashboard.scss';\r\nimport 'components/datepicker/DatePicker.scss';\r\nimport { setDescriptionMapping } from 'store/common';\r\n\r\nexport interface DashboardPageProps\r\n  extends WithTranslation,\r\n    ConnectedProps<typeof connector> {}\r\n\r\ninterface DashboardPageState {\r\n  itemModalShown: boolean;\r\n  confirmModalShown: boolean;\r\n  date: Date;\r\n  isPagingAvailable: PagingAvailable;\r\n  modalType: ModalType;\r\n  currentItemId: string;\r\n  isCost: boolean;\r\n}\r\n\r\nexport enum ModalType {\r\n  ADD = 'ADD',\r\n  UPDATE = 'UPDATE',\r\n}\r\n\r\nexport interface PagingAvailable {\r\n  left: boolean;\r\n  right: boolean;\r\n}\r\n\r\nclass Dashboard extends Component<DashboardPageProps, DashboardPageState> {\r\n  readonly state = {\r\n    itemModalShown: false,\r\n    confirmModalShown: false,\r\n    date: new Date(),\r\n    isPagingAvailable: {\r\n      left: true,\r\n      right: false,\r\n    },\r\n    modalType: ModalType.ADD,\r\n    currentItemId: '',\r\n    isCost: false,\r\n  };\r\n\r\n  getData = async () => {\r\n    const { getDashboardData } = this.props;\r\n    await getDashboardData({ date: this.state.date.toISOString() });\r\n  };\r\n\r\n  onDateChange = async (date: Date) => {\r\n    date.setHours(6);\r\n    date.setMinutes(0);\r\n    date.setSeconds(0);\r\n    date.setMilliseconds(0);\r\n    await this.setState({ date });\r\n    this.handleDateChange();\r\n  };\r\n\r\n  changeDateWith = async (value: number) => {\r\n    const date = this.state.date;\r\n    date.setDate(this.state.date.getDate() + value);\r\n    await this.setState({ date });\r\n    this.handleDateChange();\r\n  };\r\n\r\n  handleDateChange = async () => {\r\n    this.setPagingAvailable();\r\n    await this.getData();\r\n  };\r\n\r\n  showItemModal = (\r\n    isCost: boolean,\r\n    modalType: ModalType,\r\n    currentItemId?: string,\r\n  ) => {\r\n    const newState: DashboardPageState = {\r\n      ...this.state,\r\n      itemModalShown: true,\r\n      modalType,\r\n      isCost,\r\n    };\r\n    if (currentItemId) {\r\n      newState.currentItemId = currentItemId;\r\n    }\r\n    this.setState(newState);\r\n  };\r\n\r\n  hideItemModal = () => {\r\n    this.setState(\r\n      {\r\n        itemModalShown: false,\r\n        currentItemId: '',\r\n        isCost: false,\r\n      },\r\n      async () => await this.getData(),\r\n    );\r\n  };\r\n\r\n  setPagingAvailable = () => {\r\n    this.setState({\r\n      isPagingAvailable: dayPagingAvailable(this.state.date),\r\n    });\r\n  };\r\n\r\n  async componentDidMount() {\r\n    await this.getData();\r\n    registerLocale('hu', hu);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      t,\r\n      balance,\r\n      items,\r\n      createItem,\r\n      updateItem,\r\n      deleteItem,\r\n      setDescriptionMapping,\r\n      descriptionMapping,\r\n    } = this.props;\r\n    const {\r\n      date,\r\n      isPagingAvailable,\r\n      itemModalShown,\r\n      modalType,\r\n      currentItemId,\r\n      isCost,\r\n    } = this.state;\r\n    if (!items) {\r\n      return null;\r\n    }\r\n    const currentItem = items.find((item) => item._id === currentItemId);\r\n    return (\r\n      <div className=\"dashboard\">\r\n        <div className=\"balance\">\r\n          {t('DASHBOARD.BALANCE', { balance: getMoneyString(balance) })}\r\n        </div>\r\n        <AddItemContainer showItemModal={this.showItemModal} />\r\n        <DatePickerContainer\r\n          date={date}\r\n          onDateChange={this.onDateChange}\r\n          changeDateWith={this.changeDateWith}\r\n          isPagingAvailable={isPagingAvailable}\r\n        />\r\n        <ItemList showItemModal={this.showItemModal} items={items} />\r\n        <ItemModal\r\n          shown={itemModalShown}\r\n          id={currentItemId}\r\n          hide={this.hideItemModal}\r\n          category={\r\n            currentItem\r\n              ? t(\r\n                  `COMMON.CATEGORIES.${\r\n                    currentItem.category as CostCategory | IncomeCategory\r\n                  }`,\r\n                )\r\n              : isCost\r\n              ? (CostCategories[0] as CostCategory)\r\n              : (IncomeCategories[0] as IncomeCategory)\r\n          }\r\n          amount={currentItem?.amount}\r\n          description={currentItem?.description}\r\n          date={date}\r\n          type={modalType}\r\n          createItem={createItem}\r\n          updateItem={updateItem}\r\n          deleteItem={deleteItem}\r\n          isCost={isCost}\r\n          setDescriptionMapping={setDescriptionMapping}\r\n          descriptionMapping={descriptionMapping}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: ApplicationState) => {\r\n  return {\r\n    balance: state.dashboard.balance,\r\n    items: state.dashboard.items,\r\n    notification: state.common.notification,\r\n    descriptionMapping: state.common.descriptionMapping,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  getDashboardData,\r\n  createItem,\r\n  updateItem,\r\n  deleteItem,\r\n  setDescriptionMapping,\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default compose(connector)(withTranslation()(Dashboard));\r\n","import React, { Component } from 'react';\r\nimport { connect, ConnectedProps } from 'react-redux';\r\nimport { withTranslation, WithTranslation } from 'react-i18next';\r\nimport { Field, Form, Formik } from 'formik';\r\n\r\nimport { login } from 'store/auth';\r\nimport { compose } from 'utils/compose';\r\nimport { CredentialsModel } from 'models/auth.model';\r\nimport Yup from 'utils/yup';\r\nimport './Login.scss';\r\n\r\ninterface LoginPageProps\r\n  extends ConnectedProps<typeof connector>,\r\n    WithTranslation {}\r\n\r\nclass Login extends Component<LoginPageProps> {\r\n  onSubmit = async (credentials: CredentialsModel) => {\r\n    const { login } = this.props;\r\n    await login(credentials);\r\n  };\r\n\r\n  render() {\r\n    const { t } = this.props;\r\n    return (\r\n      <div className=\"login\">\r\n        <Formik\r\n          initialValues={{ email: '', password: '' } as CredentialsModel}\r\n          validateOnChange={false}\r\n          onSubmit={this.onSubmit}\r\n          validationSchema={() =>\r\n            Yup.object().shape({\r\n              email: Yup.string()\r\n                .email(t('ERRORS.EMAIL_INVALID'))\r\n                .required(t('ERRORS.FIELD_REQUIRED')),\r\n              password: Yup.string().required(t('ERRORS.FIELD_REQUIRED')),\r\n            })\r\n          }\r\n        >\r\n          <Form noValidate className=\"input-box\">\r\n            <label htmlFor={'email'} className=\"email-label\">\r\n              {t('LOGIN.EMAIL')}\r\n            </label>\r\n            <Field\r\n              label={t('LOGIN.EMAIL')}\r\n              placeholder={t('LOGIN.EMAIL')}\r\n              name={'email'}\r\n              type={'email'}\r\n            />\r\n            <label htmlFor={'password'} className=\"password-label\">\r\n              {t('LOGIN.PASSWORD')}\r\n            </label>\r\n            <Field\r\n              label={t('LOGIN.PASSWORD')}\r\n              placeholder={t('LOGIN.PASSWORD')}\r\n              name={'password'}\r\n              type={'password'}\r\n            />\r\n            <button type=\"submit\">{t('LOGIN.LOGIN')}</button>\r\n          </Form>\r\n        </Formik>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  login,\r\n};\r\n\r\nconst connector = connect(null, mapDispatchToProps);\r\n\r\nexport default compose(connector)(withTranslation()(Login));\r\n","import React, { FC, MouseEvent } from 'react';\r\nimport { Button, Modal } from 'react-bootstrap';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport 'components/dialog/Dialog.scss';\r\n\r\nexport interface ConfirmModalProps {\r\n  shown: boolean;\r\n  onCancel: (event: MouseEvent) => void;\r\n  onConfirm: (event: MouseEvent) => void;\r\n}\r\n\r\nexport const ConfirmModal: FC<ConfirmModalProps> = ({\r\n  shown,\r\n  onCancel,\r\n  onConfirm,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  return <Modal className=\"confirm-modal\" show={shown} onHide={onCancel}>\r\n      <Modal.Header>\r\n        <Modal.Title>{t('DASHBOARD.DELETE.TITLE')}</Modal.Title>\r\n        <div className=\"delete-icon\" />\r\n      </Modal.Header>\r\n\r\n      <Modal.Body>{t('DASHBOARD.DELETE.ARE_YOU_SURE')}</Modal.Body>\r\n\r\n      <Modal.Footer>\r\n        <Button onClick={onCancel} variant={'secondary'}>\r\n          {t('COMMON.CANCEL')}\r\n        </Button>\r\n        <Button variant={'primary'} onClick={onConfirm}>\r\n          {t('COMMON.OK')}\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>;\r\n};\r\n","import React, { FC } from 'react';\r\nimport DatePicker from 'react-datepicker';\r\n\r\nexport interface DatePickerWrapperProps {\r\n  date: Date | null;\r\n  onChange: (date: Date) => void;\r\n  minDate?: Date | null;\r\n  maxDate?: Date | null;\r\n}\r\n\r\nexport const DatePickerWrapper: FC<DatePickerWrapperProps> = ({\r\n  date,\r\n  onChange,\r\n  minDate = new Date('2015-09-30'),\r\n  maxDate = new Date(),\r\n}) => (\r\n  <DatePicker\r\n    selected={date}\r\n    onChange={onChange}\r\n    locale=\"hu\"\r\n    dropdownMode={'select'}\r\n    todayButton={'Mai nap'}\r\n    isClearable={false}\r\n    minDate={minDate}\r\n    maxDate={maxDate}\r\n    dateFormatCalendar=\"yyyy. MMMM\"\r\n    popperPlacement={'center'}\r\n    dateFormat={'yyyy. MM. dd.'}\r\n  />\r\n);\r\n","import React, { FC, useEffect } from 'react';\r\nimport { FieldProps } from 'formik';\r\nimport { Colors } from 'common/Constants';\r\n\r\nexport interface InputWrapperProps extends FieldProps {\r\n  type: string;\r\n  setFieldValue: (field: string, value: any) => void;\r\n  onChange?: (value: any) => void;\r\n  name: string;\r\n  value?: string;\r\n}\r\n\r\nexport const InputWrapper: FC<InputWrapperProps> = props => {\r\n  const { form, type, field, setFieldValue, ...propsToPass } = props;\r\n  useEffect(() => {\r\n    form.validateForm();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <input\r\n        type={type}\r\n        value={field.value}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n          console.log('onChange');\r\n          if (setFieldValue) {\r\n            console.log(event.target.value);\r\n            setFieldValue(props.name, event.target.value);\r\n          }\r\n          if (props.onChange) {\r\n            props.onChange(event);\r\n          }\r\n        }}\r\n        {...propsToPass}\r\n      />\r\n      {form.errors[field.name] &&\r\n        form.touched[field.name] && (\r\n          <span style={{ color: Colors.costRed }}>\r\n            {form.errors[field.name]}\r\n          </span>\r\n        )}\r\n    </>\r\n  );\r\n};\r\n","import React, { ChangeEvent, FC, useEffect, useState } from 'react';\r\nimport { registerLocale } from 'react-datepicker';\r\nimport { Field, Form, Formik } from 'formik';\r\nimport { useTranslation } from 'react-i18next';\r\nimport hu from 'date-fns/locale/hu';\r\nimport { Button, Dropdown, DropdownButton, Modal } from 'react-bootstrap';\r\n\r\nimport { CostCategories, IncomeCategories } from 'common/Constants';\r\nimport { ConfirmModal } from './ConfirmModal';\r\nimport { DatePickerWrapper } from 'components/datepicker/DatePickerWrapper';\r\nimport { InputWrapper } from 'components/input/InputWrapper';\r\nimport {\r\n  CategoryType,\r\n  CostCategory,\r\n  IncomeCategory,\r\n} from 'models/common.model';\r\nimport { ModalType } from './Dashboard';\r\nimport Yup from 'utils/yup';\r\nimport { ItemParamsModel } from 'models/dashboard.model';\r\nimport 'components/datepicker/DatePicker.scss';\r\nimport 'styles/dropdown.scss';\r\nimport 'components/dialog/Dialog.scss';\r\nimport { DescriptionMappingModel } from 'store/common';\r\n\r\nexport interface ItemModalProps {\r\n  shown: boolean;\r\n  createItem: (item: ItemParamsModel) => void;\r\n  updateItem: (item: ItemParamsModel) => void;\r\n  deleteItem: (id: string) => void;\r\n  amount?: number;\r\n  date: Date;\r\n  category: CostCategory | IncomeCategory;\r\n  description?: string;\r\n  hide: () => void;\r\n  type: ModalType;\r\n  isCost: boolean;\r\n  id?: string;\r\n  setDescriptionMapping: (\r\n    descriptionMapping: DescriptionMappingModel,\r\n  ) => Promise<void>;\r\n  descriptionMapping: DescriptionMappingModel;\r\n}\r\n\r\nexport const ItemModal: FC<ItemModalProps> = ({\r\n  shown,\r\n  amount,\r\n  date,\r\n  category,\r\n  description,\r\n  id,\r\n  hide,\r\n  type,\r\n  isCost,\r\n  createItem,\r\n  updateItem,\r\n  deleteItem,\r\n  setDescriptionMapping,\r\n  descriptionMapping,\r\n}) => {\r\n  useEffect(() => {\r\n    registerLocale('hu', hu);\r\n  }, []);\r\n\r\n  const { t } = useTranslation();\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    amount: Yup.number()\r\n      .required(t('ERRORS.FIELD_REQUIRED'))\r\n      .test(\r\n        'amount',\r\n        t('ERRORS.AMOUNT_INVALID'),\r\n        (value) =>\r\n          !!value &&\r\n          !!value\r\n            .toString()\r\n            .trim()\r\n            .replace(/[^0-9]/g, '').length,\r\n      ),\r\n    category: Yup.string().required(t('ERRORS.FIELD_REQUIRED')),\r\n    date: Yup.string().required(t('ERRORS.FIELD_REQUIRED')),\r\n  });\r\n\r\n  const [confirmModalShown, setConfirmModalShown] = useState(false);\r\n  const [isValidForm, setValidForm] = useState(!!id);\r\n  let validatedForm = !!id;\r\n\r\n  const showConfirmModal = () => {\r\n    setConfirmModalShown(true);\r\n  };\r\n\r\n  const hideConfirmModal = () => {\r\n    setConfirmModalShown(false);\r\n  };\r\n\r\n  const confirmDelete = async () => {\r\n    id && (await deleteItem(id));\r\n    setConfirmModalShown(false);\r\n    hide();\r\n  };\r\n\r\n  const onSubmitForm = async (item: Omit<ItemParamsModel, 'category_type'>) => {\r\n    const { date, category, amount, description } = item;\r\n    const data: ItemParamsModel = {\r\n      category_type: isCost ? CategoryType.Cost : CategoryType.Income,\r\n      date: date,\r\n      category: t(`COMMON.ENGLISH_CATEGORIES.${category}`),\r\n      amount: amount,\r\n      description: description?.trim() || '',\r\n    };\r\n    if (id) {\r\n      data.id = id;\r\n    }\r\n    if (\r\n      description &&\r\n      (!descriptionMapping[description.trim()] ||\r\n        descriptionMapping[description.trim()] !==\r\n          t(`COMMON.ENGLISH_CATEGORIES.${category}`))\r\n    ) {\r\n      setDescriptionMapping({\r\n        [description.trim()]: t(`COMMON.ENGLISH_CATEGORIES.${category}`),\r\n      });\r\n    }\r\n    if (type === ModalType.ADD) {\r\n      await createItem(data);\r\n    } else {\r\n      await updateItem(data);\r\n    }\r\n    hide();\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Modal show={shown && !confirmModalShown} onHide={hide}>\r\n        <Formik\r\n          initialValues={{\r\n            amount,\r\n            category,\r\n            description,\r\n            date: date.toISOString(),\r\n          }}\r\n          validateOnChange={true}\r\n          validateOnMount={true}\r\n          onSubmit={onSubmitForm}\r\n          validationSchema={validationSchema}\r\n        >\r\n          {({\r\n            values,\r\n            setFieldValue,\r\n            isValid,\r\n            validateForm,\r\n            setFieldTouched,\r\n          }) => {\r\n            if (!validatedForm) {\r\n              validateForm();\r\n              validatedForm = true;\r\n            }\r\n            if (isValidForm !== isValid) {\r\n              setValidForm(isValid);\r\n            }\r\n            const categories: (CostCategory | IncomeCategory)[] = isCost\r\n              ? (CostCategories as CostCategory[])\r\n              : (IncomeCategories as IncomeCategory[]);\r\n            return (\r\n              <Form noValidate className=\"input-box\">\r\n                <Modal.Header>\r\n                  <Modal.Title>\r\n                    {type === ModalType.UPDATE\r\n                      ? t('DASHBOARD.ITEM_MODAL.UPDATE_AMOUNT')\r\n                      : t('DASHBOARD.ITEM_MODAL.ADD_AMOUNT', {\r\n                          itemType: isCost\r\n                            ? t('COMMON.CATEGORIES.COST')\r\n                            : t('COMMON.CATEGORIES.INCOME'),\r\n                        })}\r\n                  </Modal.Title>\r\n                  {type === ModalType.UPDATE ? (\r\n                    <div className=\"delete-icon\" onClick={showConfirmModal} />\r\n                  ) : null}\r\n                </Modal.Header>\r\n\r\n                <Modal.Body>\r\n                  <label htmlFor={'amount'} className=\"label amount-label\">\r\n                    {t('DASHBOARD.ITEM_MODAL.AMOUNT')}\r\n                  </label>\r\n                  <Field\r\n                    label={t('DASHBOARD.ITEM_MODAL.AMOUNT')}\r\n                    className={'amount'}\r\n                    name={'amount'}\r\n                    type={'number'}\r\n                    component={InputWrapper}\r\n                    onBlur={() => {\r\n                      setFieldTouched('amount', true);\r\n                    }}\r\n                    setFieldValue={setFieldValue}\r\n                    onChange={(event: ChangeEvent<HTMLInputElement>) =>\r\n                      setFieldValue('amount', event.target.value)\r\n                    }\r\n                  />\r\n                  <label htmlFor={'category'} className=\"label category-label\">\r\n                    {t('DASHBOARD.ITEM_MODAL.CATEGORY')}\r\n                  </label>\r\n                  <DropdownButton title={values.category} id=\"dropdown\">\r\n                    {categories.map(\r\n                      (category: CostCategory | IncomeCategory, i: number) => (\r\n                        <Dropdown.Item\r\n                          eventKey={`${i}`}\r\n                          key={i}\r\n                          onSelect={() => {\r\n                            setFieldValue('category', categories[i]);\r\n                            validateForm();\r\n                          }}\r\n                        >\r\n                          {category}\r\n                        </Dropdown.Item>\r\n                      ),\r\n                    )}\r\n                  </DropdownButton>\r\n                  <label\r\n                    htmlFor={'description'}\r\n                    className=\"label description-label\"\r\n                  >\r\n                    {t('DASHBOARD.ITEM_MODAL.DESCRIPTION')}\r\n                  </label>\r\n                  <Field\r\n                    label={t('DASHBOARD.ITEM_MODAL.DESCRIPTION')}\r\n                    className={'description'}\r\n                    name={'description'}\r\n                    type={'text'}\r\n                    component={InputWrapper}\r\n                    autocomplete={'off'}\r\n                    onBlur={() => {\r\n                      setFieldTouched('description', true);\r\n                    }}\r\n                    setFieldValue={setFieldValue}\r\n                    onChange={(event: ChangeEvent<HTMLInputElement>) => {\r\n                      setFieldValue('description', event.target.value);\r\n                      if (\r\n                        event.target.value?.length > 1 &&\r\n                        descriptionMapping[event.target.value]\r\n                      ) {\r\n                        setFieldValue(\r\n                          'category',\r\n                          t(\r\n                            `COMMON.CATEGORIES.${\r\n                              descriptionMapping[event.target.value]\r\n                            }`,\r\n                          ),\r\n                        );\r\n                      }\r\n                    }}\r\n                  />\r\n                  <label htmlFor={'date'} className=\"label description-label\">\r\n                    {t('DASHBOARD.ITEM_MODAL.DATE')}\r\n                  </label>\r\n                  <div className=\"date-picker-container date-picker-in-modal\">\r\n                    <DatePickerWrapper\r\n                      date={new Date(values.date)}\r\n                      onChange={(date: Date) => setFieldValue('date', date)}\r\n                    />\r\n                  </div>\r\n                </Modal.Body>\r\n\r\n                <Modal.Footer className={'flex-nowrap'}>\r\n                  <Button onClick={hide} variant=\"secondary\">\r\n                    {t('COMMON.CANCEL')}\r\n                  </Button>\r\n                  <Button\r\n                    className=\"btn-primary\"\r\n                    type=\"submit\"\r\n                    disabled={!isValidForm}\r\n                  >\r\n                    {t('COMMON.OK')}\r\n                  </Button>\r\n                </Modal.Footer>\r\n              </Form>\r\n            );\r\n          }}\r\n        </Formik>\r\n      </Modal>\r\n\r\n      <ConfirmModal\r\n        shown={confirmModalShown}\r\n        onCancel={hideConfirmModal}\r\n        onConfirm={confirmDelete}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import moment from 'moment';\r\n\r\nimport { Months } from 'common/Constants';\r\n\r\nexport const getMoneyString = (number: number): string =>\r\n  Math.round(number)\r\n    .toString()\r\n    .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ');\r\n\r\nexport const dayPagingAvailable = (date: Date) => ({\r\n  left: !moment(date).isSame(moment('2015-09-30'), 'day'),\r\n  right: !moment(date).isSame(moment(), 'day'),\r\n});\r\n\r\nexport const monthPagingAvailable = (date: Date) => {\r\n  const d = new Date(date.getFullYear(), date.getMonth(), 1);\r\n  const now = new Date();\r\n  return {\r\n    left: !moment(d).isSame(moment('2015-09-01'), 'day'),\r\n    right: !(\r\n      date.getFullYear() === now.getFullYear() &&\r\n      date.getMonth() === now.getMonth()\r\n    ),\r\n  };\r\n};\r\n\r\nexport const getFormattedDate = (date: Date) =>\r\n  date.getFullYear() +\r\n  '. ' +\r\n  Months[date.getMonth()] +\r\n  ' ' +\r\n  date.getDate() +\r\n  '.';\r\n\r\nconst canvas = document.createElement('canvas');\r\n\r\nexport const getTextWidth = (text: string, font: string) => {\r\n  const context = canvas.getContext('2d');\r\n  if (context) {\r\n    context.font = font;\r\n    const metrics = context.measureText(text);\r\n    return metrics.width;\r\n  }\r\n  return 0;\r\n};\r\n\r\nexport const getMaxTextWidth = (stringArray: string[], font: string) =>\r\n  Math.max(...stringArray.map((text) => getTextWidth(text, font)));\r\n\r\nexport const getMonthLabel = (year: number, month: number) =>\r\n  `${year}. ${Months[month]}`;\r\n","import React, { FC } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { ModalType } from './Dashboard';\r\nimport './AddItemContainer.scss';\r\n\r\nexport interface AddItemContainerProps {\r\n  showItemModal: (\r\n    isCost: boolean,\r\n    modalType: ModalType,\r\n    currentItemId?: string,\r\n  ) => void;\r\n}\r\n\r\nexport const AddItemContainer: FC<AddItemContainerProps> = ({\r\n  showItemModal,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  return (\r\n    <div className=\"add-item-container\">\r\n      <div\r\n        className=\"add-container add-cost-container\"\r\n        onClick={() => showItemModal(true, ModalType.ADD)}\r\n      >\r\n        <div className=\"add-icon add-cost-icon\" />\r\n        <div className=\"add-label add-cost-label\">{t('DASHBOARD.COST')}</div>\r\n      </div>\r\n      <div\r\n        className=\"add-container add-income-container\"\r\n        onClick={() => showItemModal(false, ModalType.ADD)}\r\n      >\r\n        <div className=\"add-label add-income-label\">\r\n          {t('DASHBOARD.INCOME')}\r\n        </div>\r\n        <div className=\"add-icon add-income-icon\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { FC } from 'react';\r\n\r\nimport { DatePickerWrapper } from 'components/datepicker/DatePickerWrapper';\r\nimport { PagingAvailable } from './Dashboard';\r\nimport './DatePickerContainer.scss';\r\n\r\ninterface DatePickerContainerProps {\r\n  isPagingAvailable: PagingAvailable;\r\n  changeDateWith: (withDay: number) => void;\r\n  onDateChange: (date: Date) => void;\r\n  date: Date;\r\n}\r\n\r\nexport const DatePickerContainer: FC<DatePickerContainerProps> = ({\r\n  isPagingAvailable,\r\n  changeDateWith,\r\n  onDateChange,\r\n  date,\r\n}) => {\r\n  return (\r\n    <div className=\"date-picker-container\">\r\n      {isPagingAvailable.left ? (\r\n        <div\r\n          className=\"paginate visible left\"\r\n          onClick={() => changeDateWith(-1)}\r\n        />\r\n      ) : (\r\n        <div className=\"paginate left\" />\r\n      )}\r\n      <DatePickerWrapper date={date} onChange={onDateChange} />\r\n      {isPagingAvailable.right ? (\r\n        <div\r\n          className=\"paginate visible right\"\r\n          onClick={() => changeDateWith(1)}\r\n        />\r\n      ) : (\r\n        <div className=\"paginate right\" />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { FC } from 'react';\r\n\r\nimport { ItemModel } from 'models/dashboard.model';\r\nimport { ModalType } from './Dashboard';\r\nimport { getMoneyString } from 'utils/util';\r\nimport { CategoryType } from 'models/common.model';\r\nimport 'styles/item-list.scss';\r\n\r\nexport interface ItemListProps {\r\n  items: ItemModel[];\r\n  showItemModal: (\r\n    isCost: boolean,\r\n    modalType: ModalType,\r\n    currentItemId?: string,\r\n  ) => void;\r\n}\r\n\r\nexport const ItemList: FC<ItemListProps> = ({ items, showItemModal }) => {\r\n  return (\r\n    <div className=\"item-list\">\r\n      {items.map(item => (\r\n        <div\r\n          className=\"item\"\r\n          key={items.indexOf(item)}\r\n          onClick={() =>\r\n            showItemModal(\r\n              item.category_type === CategoryType.Cost,\r\n              ModalType.UPDATE,\r\n              item._id,\r\n            )\r\n          }\r\n        >\r\n          <div className={`arrow-icon ${item.category_type.toLowerCase()}`} />\r\n          <div className=\"item-texts\">\r\n            <div className=\"amount\">{getMoneyString(item.amount)}</div>\r\n            <div className=\"description\">{item.description}</div>\r\n          </div>\r\n          <div className={`category-icon ${item.category.toLowerCase()}`} />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React, { FC } from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport { ToggleState } from 'models/query.model';\r\nimport './ToggleButton.scss';\r\n\r\ninterface ToggleButtonProps {\r\n  active: ToggleState;\r\n  onClick: () => void;\r\n  leftText?: string;\r\n  rightText?: string;\r\n}\r\n\r\nenum Empty {\r\n  Left = 'left',\r\n  Right = 'right',\r\n  None = 'none',\r\n}\r\n\r\nexport const ToggleButton: FC<ToggleButtonProps> = ({\r\n  active,\r\n  onClick,\r\n  leftText,\r\n  rightText,\r\n}) => {\r\n  const emptyText = (): string =>\r\n    !leftText ? Empty.Left : !rightText ? Empty.Right : Empty.None;\r\n\r\n  return (\r\n    <div className=\"toggle-button-container\">\r\n      <div\r\n        className={classNames('button-container left', {\r\n          active: active === ToggleState.Left,\r\n          empty: emptyText() === Empty.Left,\r\n          'empty-other': emptyText() === Empty.Right,\r\n        })}\r\n        onClick={onClick}\r\n      >\r\n        <div\r\n          className={classNames('button left', {\r\n            active: active === ToggleState.Left,\r\n          })}\r\n        />\r\n        <div className=\"button-text left\">{leftText}</div>\r\n      </div>\r\n      <div\r\n        className={classNames('button-container right', {\r\n          active: active === ToggleState.Right,\r\n          empty: emptyText() === Empty.Right,\r\n          'empty-other': emptyText() === Empty.Left,\r\n        })}\r\n        onClick={onClick}\r\n      >\r\n        <div\r\n          className={classNames('button right', {\r\n            active: active === ToggleState.Right,\r\n          })}\r\n        />\r\n        <div className=\"button-text right\">{rightText}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from 'react';\r\nimport { connect, ConnectedProps } from 'react-redux';\r\nimport { WithTranslation, withTranslation } from 'react-i18next';\r\nimport classNames from 'classnames';\r\n\r\nimport { Months } from 'common/Constants';\r\nimport { compose } from 'utils/compose';\r\nimport { getMoneyString, monthPagingAvailable } from 'utils/util';\r\nimport { getStatsData } from 'store/stats';\r\nimport './Stats.scss';\r\n\r\nexport interface StatsPageProps\r\n  extends WithTranslation,\r\n    ConnectedProps<typeof connector> {\r\n  balance: number;\r\n  total_income: number;\r\n  total_cost: number;\r\n  balance_in_month: number;\r\n  daily_average: number;\r\n  daily_average_without_house: number;\r\n  expected_cost: number;\r\n  expected_balance_in_month: number;\r\n  expected_balance: number;\r\n}\r\n\r\nexport interface StatsPageState {\r\n  date: Date;\r\n  isPagingAvailable: {\r\n    left: boolean;\r\n    right: boolean;\r\n  };\r\n}\r\n\r\nclass Stats extends Component<StatsPageProps, StatsPageState> {\r\n  readonly state = {\r\n    date: new Date(),\r\n    isPagingAvailable: {\r\n      left: true,\r\n      right: false,\r\n    },\r\n  };\r\n\r\n  getData = async () => {\r\n    const { getStatsData } = this.props;\r\n    await getStatsData(this.state.date.toISOString());\r\n  };\r\n\r\n  changeMonthWith = async (value: number) => {\r\n    const { date } = this.state;\r\n    const d = date;\r\n    d.setMonth(date.getMonth() + value);\r\n    d.setDate(this.isThisMonth(d) ? new Date().getDate() : 28);\r\n    await this.setState({ date: d });\r\n    this.setPagingAvailable();\r\n    await this.getData();\r\n  };\r\n\r\n  isThisMonth = (date: Date) =>\r\n    date.getFullYear() === new Date().getFullYear() &&\r\n    date.getMonth() === new Date().getMonth();\r\n\r\n  setPagingAvailable = () => {\r\n    this.setState({\r\n      isPagingAvailable: monthPagingAvailable(this.state.date),\r\n    });\r\n  };\r\n\r\n  async componentDidMount() {\r\n    await this.getData();\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.stats) return null;\r\n    const {\r\n      stats: {\r\n        balance,\r\n        total_income,\r\n        total_cost,\r\n        balance_in_month,\r\n        daily_average,\r\n        daily_average_without_house,\r\n        expected_cost,\r\n        expected_balance_in_month,\r\n        expected_balance,\r\n      },\r\n      t,\r\n    } = this.props;\r\n    const { date, isPagingAvailable } = this.state;\r\n    return (\r\n      <div className=\"stats-container\">\r\n        {[\r\n          balance,\r\n          total_income,\r\n          total_cost,\r\n          balance_in_month,\r\n          daily_average,\r\n          daily_average_without_house,\r\n          expected_cost,\r\n          expected_balance_in_month,\r\n          expected_balance,\r\n        ].map((amount, i) => (\r\n          <div\r\n            className={classNames({\r\n              'green-item': i === 1,\r\n              'red-item': i === 2,\r\n            })}\r\n          >\r\n            <div className=\"stats-label\">{t(`STATS.LABELS.${i}`)}</div>\r\n            <div className=\"amount\">{getMoneyString(amount)}</div>\r\n          </div>\r\n        ))}\r\n\r\n        <div className=\"month-pager-container date-picker-container\">\r\n          <div\r\n            className={classNames('paginate left', {\r\n              visible: isPagingAvailable.left,\r\n            })}\r\n            onClick={() => isPagingAvailable.left && this.changeMonthWith(-1)}\r\n          />\r\n          <div className=\"month-pager\">\r\n            {`${date.getFullYear()}. ${Months[date.getMonth()]}`}\r\n          </div>\r\n          <div\r\n            className={classNames('paginate right', {\r\n              visible: isPagingAvailable.right,\r\n            })}\r\n            onClick={() => isPagingAvailable.right && this.changeMonthWith(1)}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: ApplicationState) => {\r\n  return {\r\n    stats: state.stats.data,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  getStatsData,\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default compose(connector)(withTranslation()(Stats));\r\n","export interface ChartDataPoint {\r\n  [key: string]: number;\r\n}\r\n\r\nexport interface MappedDataPoint {\r\n  amount: number;\r\n  year: number;\r\n  month: number;\r\n  sumAmount?: number;\r\n}\r\n\r\nexport interface ChartParamsModel {\r\n  min_year?: number;\r\n  max_year?: number;\r\n  min_month?: number;\r\n  max_month?: number;\r\n  category_types?: string;\r\n  categories?: string;\r\n}\r\n\r\nexport interface ChartDataModel {\r\n  success: boolean;\r\n  result: {\r\n    BALANCE: ChartDataPoint[];\r\n    COST: ChartDataPoint[];\r\n    INCOME: ChartDataPoint[];\r\n    SALARY: ChartDataPoint[];\r\n    STATE: ChartDataPoint[];\r\n    GIFT: ChartDataPoint[];\r\n    LOAN: ChartDataPoint[];\r\n    OTHER: ChartDataPoint[];\r\n    BANK: ChartDataPoint[];\r\n    CAR: ChartDataPoint[];\r\n    CLOTHES: ChartDataPoint[];\r\n    DRINK: ChartDataPoint[];\r\n    FOOD: ChartDataPoint[];\r\n    GROCERY: ChartDataPoint[];\r\n    HOUSE: ChartDataPoint[];\r\n    INVESTMENT: ChartDataPoint[];\r\n    LUXURY: ChartDataPoint[];\r\n    OVERHEAD: ChartDataPoint[];\r\n    PHARMACY: ChartDataPoint[];\r\n    PHONE: ChartDataPoint[];\r\n    TRAVEL: ChartDataPoint[];\r\n    PREV_BALANCE: number;\r\n  };\r\n}\r\n\r\nexport enum ChartKey {\r\n  PrevBalance = 'prevBalance',\r\n  Income = 'income',\r\n  Cost = 'cost',\r\n  Balance = 'balance',\r\n}\r\n","import React, { ReactNode } from 'react';\r\nimport { Dropdown } from 'react-bootstrap';\r\n\r\nimport { Months, StartDate } from 'common/Constants';\r\n\r\nexport const getYearItems = (\r\n  onSelectYear: (year: number) => void,\r\n): ReactNode[] => {\r\n  const years = [];\r\n  for (let i = new Date().getFullYear(); i >= StartDate.getFullYear(); i--) {\r\n    years.push(i);\r\n  }\r\n  return years.map((year: number, i: number) => (\r\n    <Dropdown.Item\r\n      eventKey={`${i}`}\r\n      key={i}\r\n      onSelect={() => onSelectYear(year)}\r\n    >\r\n      {year}\r\n    </Dropdown.Item>\r\n  ));\r\n};\r\n\r\nexport const getMonths = (\r\n  onSelectMonth: (month: number) => void,\r\n  selectedYear: number,\r\n): ReactNode[] => {\r\n  return Months.map((month, i) => {\r\n    const now = new Date();\r\n    if (\r\n      (selectedYear === now.getFullYear() && i > now.getMonth()) ||\r\n      (selectedYear === 2015 && i < 8)\r\n    )\r\n      return null;\r\n    return (\r\n      <Dropdown.Item\r\n        eventKey={`${i}`}\r\n        key={i}\r\n        onSelect={() => onSelectMonth(i)}\r\n      >\r\n        {month}\r\n      </Dropdown.Item>\r\n    );\r\n  });\r\n};\r\n","import React, { FC } from 'react';\r\nimport { Button, Modal } from 'react-bootstrap';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport './Dialog.scss';\r\n\r\nexport interface DialogProps {\r\n  shown: boolean;\r\n  onClose: () => void;\r\n  title: string;\r\n  className?: string;\r\n}\r\n\r\nexport const Dialog: FC<DialogProps> = ({\r\n  shown,\r\n  onClose,\r\n  title,\r\n  children,\r\n  className,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  return (\r\n    <Modal className={`ok-modal ${className}`} show={shown} onClose={onClose}>\r\n      <Modal.Header>\r\n        <Modal.Title>{title}</Modal.Title>\r\n      </Modal.Header>\r\n\r\n      <Modal.Body>{children}</Modal.Body>\r\n\r\n      <Modal.Footer>\r\n        <Button variant=\"primary\" type=\"submit\" onClick={onClose}>\r\n          {t('COMMON.OK')}\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n","import React, { FC } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { Dialog, DialogProps } from 'components/dialog/Dialog';\r\nimport { getMoneyString } from 'utils/util';\r\n\r\nexport interface QuerySumDialogProps extends DialogProps {\r\n  value: number;\r\n}\r\n\r\nexport const QuerySumDialog: FC<QuerySumDialogProps> = ({\r\n  value,\r\n  onClose,\r\n  shown,\r\n  title,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  return (\r\n    <Dialog shown={shown} onClose={onClose} title={title}>\r\n      {`${t('QUERY.AMOUNT')}: ${getMoneyString(value)}`}\r\n    </Dialog>\r\n  );\r\n};\r\n","import React, { FC } from 'react';\r\n\r\nimport { ListItemModel } from 'models/query.model';\r\nimport { Dialog, DialogProps } from 'components/dialog/Dialog';\r\nimport { getFormattedDate, getMoneyString } from 'utils/util';\r\n\r\nexport interface QueryListDialogProps extends DialogProps {\r\n  items: ListItemModel[];\r\n}\r\n\r\nexport const QueryListDialog: FC<QueryListDialogProps> = ({\r\n  title,\r\n  shown,\r\n  onClose,\r\n  items,\r\n}) => {\r\n  return (\r\n    <Dialog\r\n      className=\"item-list-modal\"\r\n      shown={shown}\r\n      title={title}\r\n      onClose={onClose}\r\n    >\r\n      <div className=\"item-list\">\r\n        {items.map((item) =>\r\n          item.type === 'header' ? (\r\n            <div className=\"cost-label\" key={items.indexOf(item)}>\r\n              {getFormattedDate(new Date(item.date))}\r\n            </div>\r\n          ) : (\r\n            <div className=\"item\" key={items.indexOf(item)}>\r\n              <div\r\n                className={`arrow-icon ${item.category_type.toLowerCase()}`}\r\n              />\r\n              <div className=\"item-texts\">\r\n                <div className=\"amount\">{getMoneyString(item.amount)}</div>\r\n                <div className=\"description\">{item.description}</div>\r\n              </div>\r\n              <div className={`category-icon ${item.category.toLowerCase()}`} />\r\n            </div>\r\n          ),\r\n        )}\r\n      </div>\r\n    </Dialog>\r\n  );\r\n};\r\n","import React, { Component } from 'react';\r\nimport { connect, ConnectedProps } from 'react-redux';\r\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\r\nimport { Button, Dropdown, DropdownButton } from 'react-bootstrap';\r\nimport { withTranslation, WithTranslation } from 'react-i18next';\r\nimport { registerLocale } from 'react-datepicker';\r\nimport moment from 'moment';\r\nimport hu from 'date-fns/locale/hu';\r\n\r\nimport { compose } from 'utils/compose';\r\nimport { getMoneyString } from 'utils/util';\r\nimport { DatePickerWrapper } from 'components/datepicker/DatePickerWrapper';\r\nimport { ToggleButton } from 'components/togglebutton/ToggleButton';\r\nimport { getYearItems, getMonths } from 'components/dropdown/DropDownItems';\r\nimport { QuerySumDialog } from './QuerySumDialog';\r\nimport { QueryListDialog } from './QueryListDialog';\r\nimport { getQueryData, getQueryList } from 'store/query';\r\nimport {\r\n  CostCategories,\r\n  CostCategoriesWithEmpty,\r\n  IncomeCategories,\r\n  IncomeCategoriesWithEmpty,\r\n  Months,\r\n} from 'common/Constants';\r\nimport {\r\n  CategoryType,\r\n  Collection,\r\n  CostCategory,\r\n  IncomeCategory,\r\n} from 'models/common.model';\r\nimport { QueryParamsModel, ToggleState } from 'models/query.model';\r\nimport 'styles/dropdown.scss';\r\nimport './Query.scss';\r\n\r\nexport interface QueryPageProps\r\n  extends WithTranslation,\r\n    RouteComponentProps,\r\n    ConnectedProps<typeof connector> {}\r\n\r\nexport interface QueryPageState {\r\n  activeCollectionToggle: ToggleState;\r\n  activeCategoryTypeToggle: ToggleState;\r\n  activeExclusionToggle: ToggleState;\r\n  selectedCategoryIndex: number;\r\n  description: string;\r\n  activeFullMatchToggle: ToggleState;\r\n  minAmount: string;\r\n  maxAmount: string;\r\n  minDate: Date | null;\r\n  maxDate: Date | null;\r\n  selectedYear: number;\r\n  selectedMonthIndex: number;\r\n  sumModalShown: boolean;\r\n  listModalShown: boolean;\r\n}\r\n\r\nclass Query extends Component<QueryPageProps, QueryPageState> {\r\n  state = {\r\n    activeCollectionToggle: ToggleState.Left,\r\n    activeCategoryTypeToggle: ToggleState.Left,\r\n    activeExclusionToggle: ToggleState.Left,\r\n    selectedCategoryIndex: 0,\r\n    description: '',\r\n    activeFullMatchToggle: ToggleState.Right,\r\n    minAmount: '',\r\n    maxAmount: '',\r\n    minDate: null,\r\n    maxDate: null,\r\n    selectedYear: new Date().getFullYear(),\r\n    selectedMonthIndex: new Date().getMonth(),\r\n    sumModalShown: false,\r\n    listModalShown: false,\r\n  };\r\n\r\n  getParams = () => {\r\n    const { t } = this.props;\r\n    const {\r\n      activeCollectionToggle,\r\n      activeCategoryTypeToggle,\r\n      selectedCategoryIndex,\r\n      activeExclusionToggle,\r\n      description,\r\n      activeFullMatchToggle,\r\n      minAmount,\r\n      maxAmount,\r\n      minDate,\r\n      maxDate,\r\n      selectedYear,\r\n      selectedMonthIndex,\r\n    } = this.state;\r\n\r\n    let params: QueryParamsModel = {\r\n      collection:\r\n        activeCollectionToggle === ToggleState.Left\r\n          ? Collection.Item\r\n          : Collection.Balance,\r\n      category_type:\r\n        activeCategoryTypeToggle === ToggleState.Left\r\n          ? CategoryType.Cost\r\n          : CategoryType.Income,\r\n    };\r\n\r\n    if (params.collection === Collection.Item) {\r\n      if (selectedCategoryIndex) {\r\n        params.category = t(\r\n          `COMMON.ENGLISH_CATEGORIES.${\r\n            activeCategoryTypeToggle === ToggleState.Left\r\n              ? CostCategoriesWithEmpty[selectedCategoryIndex]\r\n              : IncomeCategoriesWithEmpty[selectedCategoryIndex]\r\n          }`,\r\n        );\r\n        if (activeExclusionToggle === ToggleState.Right) {\r\n          params.exclude_category = true;\r\n        }\r\n      }\r\n      if (description) {\r\n        params.description = description;\r\n        params.description_like = activeFullMatchToggle === ToggleState.Left;\r\n      }\r\n      if (minAmount) {\r\n        params.min_amount = +minAmount;\r\n      }\r\n      if (maxAmount) {\r\n        params.max_amount = +maxAmount;\r\n      }\r\n      if (minDate) {\r\n        const min: Date = minDate || new Date();\r\n        min.setHours(2);\r\n        params.min_date = min;\r\n      }\r\n      if (maxDate) {\r\n        const max: Date = maxDate || new Date();\r\n        max.setHours(25);\r\n        max.setMinutes(59);\r\n        params.max_date = max;\r\n      }\r\n    } else {\r\n      params.year = selectedYear;\r\n      params.month = selectedMonthIndex;\r\n    }\r\n    return params;\r\n  };\r\n\r\n  switchActiveCollectionToggle = async () => {\r\n    const { activeCollectionToggle } = this.state;\r\n    this.setState(\r\n      {\r\n        activeCollectionToggle:\r\n          activeCollectionToggle === ToggleState.Left\r\n            ? ToggleState.Right\r\n            : ToggleState.Left,\r\n      },\r\n      () => activeCollectionToggle === ToggleState.Right && this.getSum(),\r\n    );\r\n  };\r\n\r\n  switchActiveCategoryTypeToggle = () => {\r\n    this.setState({\r\n      activeCategoryTypeToggle:\r\n        this.state.activeCategoryTypeToggle === ToggleState.Left\r\n          ? ToggleState.Right\r\n          : ToggleState.Left,\r\n    });\r\n  };\r\n  switchActiveExclusionToggle = () => {\r\n    this.setState({\r\n      activeExclusionToggle:\r\n        this.state.activeExclusionToggle === ToggleState.Left\r\n          ? ToggleState.Right\r\n          : ToggleState.Left,\r\n    });\r\n  };\r\n\r\n  getMenuItems = (array: (CostCategory | IncomeCategory | '')[]) =>\r\n    array.map((category, i) => (\r\n      <Dropdown.Item\r\n        eventKey={`${i}`}\r\n        key={i}\r\n        onSelect={() => this.onSelectCategory(i)}\r\n      >\r\n        {category}\r\n      </Dropdown.Item>\r\n    ));\r\n\r\n  onSelectCategory = (index: number) => {\r\n    this.setState({ selectedCategoryIndex: index });\r\n  };\r\n\r\n  onSelectYear = async (year: number) => {\r\n    const { selectedMonthIndex } = this.state;\r\n    let month = selectedMonthIndex;\r\n    const now = new Date();\r\n    if (year === now.getFullYear() && selectedMonthIndex > now.getMonth()) {\r\n      month = now.getMonth();\r\n    }\r\n    if (year === 2015 && selectedMonthIndex < 8) {\r\n      month = 8;\r\n    }\r\n    this.setState({ selectedYear: year, selectedMonthIndex: month }, () =>\r\n      this.getSum(),\r\n    );\r\n  };\r\n\r\n  onSelectMonth = async (index: number) => {\r\n    this.setState({ selectedMonthIndex: index }, () => this.getSum);\r\n  };\r\n\r\n  onDescriptionChange = (description: string) => {\r\n    this.setState({ description });\r\n  };\r\n\r\n  switchActiveFullMatchToggle = () => {\r\n    this.setState({\r\n      activeFullMatchToggle:\r\n        this.state.activeFullMatchToggle === ToggleState.Left\r\n          ? ToggleState.Right\r\n          : ToggleState.Left,\r\n    });\r\n  };\r\n\r\n  onMinAmountChange = (amount: string) => {\r\n    this.setState({ minAmount: amount });\r\n  };\r\n\r\n  onMaxAmountChange = (amount: string) => {\r\n    this.setState({ maxAmount: amount });\r\n  };\r\n\r\n  onMinDateChange = (date: Date | null) => {\r\n    if (date && moment(date).isAfter(moment(this.state.maxDate), 'day')) {\r\n      this.setState({ maxDate: null });\r\n    }\r\n    date\r\n      ? this.setState({ minDate: new Date(date) })\r\n      : this.setState({ minDate: null });\r\n  };\r\n\r\n  onMaxDateChange = (date: Date | null) => {\r\n    if (date && moment(date).isBefore(moment(this.state.minDate), 'day')) {\r\n      this.setState({ minDate: null });\r\n    }\r\n    date\r\n      ? this.setState({ maxDate: new Date(date) })\r\n      : this.setState({ maxDate: null });\r\n  };\r\n\r\n  isInvalidInput = () =>\r\n    (this.state.minAmount.trim() &&\r\n      this.state.minAmount.trim().toString().replace(/\\d/g, '').length) ||\r\n    (this.state.maxAmount.trim() &&\r\n      this.state.maxAmount.trim().toString().replace(/\\d/g, '').length);\r\n\r\n  getSum = async () => {\r\n    const { getQueryData } = this.props;\r\n    await getQueryData(this.getParams());\r\n    this.state.activeCollectionToggle === ToggleState.Left &&\r\n      this.setState({ sumModalShown: true });\r\n  };\r\n\r\n  getList = async () => {\r\n    await this.props.getQueryList(this.getParams());\r\n    this.state.activeCollectionToggle === ToggleState.Left &&\r\n      this.setState({ listModalShown: true });\r\n  };\r\n\r\n  hideSumModal = () => {\r\n    this.setState({ sumModalShown: false });\r\n  };\r\n\r\n  hideListModal = () => {\r\n    this.setState({ listModalShown: false });\r\n  };\r\n\r\n  componentDidMount() {\r\n    registerLocale('hu', hu);\r\n  }\r\n\r\n  render() {\r\n    const { t, queryData, queryList } = this.props;\r\n    const {\r\n      activeCollectionToggle,\r\n      activeCategoryTypeToggle,\r\n      activeExclusionToggle,\r\n      activeFullMatchToggle,\r\n      selectedCategoryIndex,\r\n      description,\r\n      minAmount,\r\n      maxAmount,\r\n      minDate,\r\n      maxDate,\r\n      sumModalShown,\r\n      listModalShown,\r\n      selectedYear,\r\n      selectedMonthIndex,\r\n    } = this.state;\r\n    return (\r\n      <div className=\"query\">\r\n        <div className=\"collection\">\r\n          <div className=\"cost-label\">{t('QUERY.LABELS.QUERY_TYPE')}</div>\r\n          <ToggleButton\r\n            active={activeCollectionToggle}\r\n            onClick={this.switchActiveCollectionToggle}\r\n            leftText={t('QUERY.ITEM')}\r\n            rightText={t('QUERY.BALANCE')}\r\n          />\r\n        </div>\r\n        {activeCollectionToggle === ToggleState.Left ? (\r\n          <div className=\"item\">\r\n            <div className=\"category-type\">\r\n              <div className=\"cost-label\">\r\n                {t('QUERY.LABELS.CATEGORY_TYPE')}\r\n              </div>\r\n              <ToggleButton\r\n                active={activeCategoryTypeToggle}\r\n                onClick={this.switchActiveCategoryTypeToggle}\r\n                leftText={t('QUERY.COST')}\r\n                rightText={t('QUERY.INCOME')}\r\n              />\r\n            </div>\r\n            <div className=\"category\">\r\n              <div className=\"cost-label\">{t('QUERY.LABELS.CATEGORY')}</div>\r\n              <div className=\"category-toggle-container\">\r\n                <div className=\"negate\">\r\n                  <ToggleButton\r\n                    active={activeExclusionToggle}\r\n                    onClick={this.switchActiveExclusionToggle}\r\n                    leftText=\"\"\r\n                    rightText=\"Nem\"\r\n                  />\r\n                </div>\r\n                <div className=\"category\">\r\n                  <DropdownButton\r\n                    title={\r\n                      activeCategoryTypeToggle === ToggleState.Left\r\n                        ? CostCategoriesWithEmpty[selectedCategoryIndex]\r\n                        : IncomeCategoriesWithEmpty[selectedCategoryIndex]\r\n                    }\r\n                  >\r\n                    {this.getMenuItems(\r\n                      activeCategoryTypeToggle === ToggleState.Left\r\n                        ? ['', ...(CostCategories as CostCategory[])]\r\n                        : ['', ...(IncomeCategories as IncomeCategory[])],\r\n                    )}\r\n                  </DropdownButton>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"description-container-panel\">\r\n              <div className=\"description-container\">\r\n                <div className=\"cost-label\">\r\n                  {t('QUERY.LABELS.DESCRIPTION')}\r\n                </div>\r\n                <input\r\n                  className=\"description\"\r\n                  value={description}\r\n                  onChange={(e) => this.onDescriptionChange(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className=\"full-match-container\">\r\n                <div className=\"cost-label\">{t('QUERY.LABELS.FULL_MATCH')}</div>\r\n                <ToggleButton\r\n                  active={activeFullMatchToggle}\r\n                  onClick={this.switchActiveFullMatchToggle}\r\n                  leftText={t('QUERY.LABELS.NO')}\r\n                  rightText={t('QUERY.LABELS.YES')}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"amount-container\">\r\n              <div className=\"minimal-amount-container\">\r\n                <div className=\"cost-label\">{t('QUERY.LABELS.MIN_AMOUNT')}</div>\r\n                <input\r\n                  className=\"minimal-amount amount\"\r\n                  value={minAmount}\r\n                  type=\"number\"\r\n                  onChange={(e) => this.onMinAmountChange(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className=\"maximal-amount-container\">\r\n                <div className=\"cost-label\">{t('QUERY.LABELS.MAX_AMOUNT')}</div>\r\n                <input\r\n                  className=\"maximal-amount amount\"\r\n                  value={maxAmount}\r\n                  type=\"number\"\r\n                  onChange={(e) => this.onMaxAmountChange(e.target.value)}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"date-container\">\r\n              <div className=\"minimal-date-container\">\r\n                <div className=\"cost-label\">{t('QUERY.LABELS.FROM')}</div>\r\n                <div className=\"minimal-date date date-picker-container\">\r\n                  <DatePickerWrapper\r\n                    date={minDate || null}\r\n                    onChange={this.onMinDateChange}\r\n                  />\r\n                  {this.state.minDate ? (\r\n                    <div\r\n                      className=\"close-icon\"\r\n                      onClick={() => this.onMinDateChange(null)}\r\n                    />\r\n                  ) : null}\r\n                </div>\r\n              </div>\r\n              <div className=\"maximal-date-container\">\r\n                <div className=\"cost-label\">{t('QUERY.LABELS.TO')}</div>\r\n                <div className=\"maximal-date date date-picker-container\">\r\n                  <DatePickerWrapper\r\n                    date={maxDate || null}\r\n                    onChange={this.onMaxDateChange}\r\n                  />\r\n                  {maxDate ? (\r\n                    <div\r\n                      className=\"close-icon\"\r\n                      onClick={() => this.onMaxDateChange(null)}\r\n                    />\r\n                  ) : null}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"button-container\">\r\n              <Button\r\n                className=\"query-sum\"\r\n                type=\"submit\"\r\n                onClick={this.getSum}\r\n                disabled={!!this.isInvalidInput()}\r\n              >\r\n                {t('QUERY.LABELS.SUM')}\r\n              </Button>\r\n              <Button\r\n                className=\"query-list\"\r\n                type=\"submit\"\r\n                onClick={this.getList}\r\n                disabled={!!this.isInvalidInput()}\r\n              >\r\n                {t('QUERY.LABELS.LIST')}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"balance\">\r\n            <div className=\"year\">\r\n              <div className=\"cost-label\">{t('QUERY.YEAR')}</div>\r\n              <DropdownButton title={selectedYear} id=\"year-dropdown\">\r\n                {getYearItems(this.onSelectYear)}\r\n              </DropdownButton>\r\n            </div>\r\n            <div className=\"month\">\r\n              <div className=\"cost-label\">{t('QUERY.MONTH')}</div>\r\n              <DropdownButton\r\n                title={Months[selectedMonthIndex]}\r\n                id=\"month-dropdown\"\r\n              >\r\n                {getMonths(this.onSelectMonth, selectedYear)}\r\n              </DropdownButton>\r\n            </div>\r\n            <div className=\"result-container\">\r\n              <div className=\"cost-label\">{t('QUERY.BALANCE')}</div>\r\n              <div className=\"result\">\r\n                {queryData ? getMoneyString(queryData.value) : ''}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n        <QuerySumDialog\r\n          title={t('QUERY.MODAL_TITLE')}\r\n          shown={sumModalShown}\r\n          onClose={this.hideSumModal}\r\n          value={queryData?.value || 0}\r\n        />\r\n        <QueryListDialog\r\n          title={t('QUERY.MODAL_TITLE')}\r\n          shown={listModalShown}\r\n          onClose={this.hideListModal}\r\n          items={queryList?.items || []}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: ApplicationState) => {\r\n  return {\r\n    queryData: state.query.queryData,\r\n    queryList: state.query.queryList,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  getQueryData,\r\n  getQueryList,\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default compose(connector)(withRouter(withTranslation()(Query)));\r\n","import React, { MouseEvent, FC } from 'react';\r\n\r\nimport './Checkbox.scss';\r\n\r\nexport interface CheckboxProps {\r\n  index: number;\r\n  className?: string;\r\n  isChecked: boolean;\r\n  setChecked: (index?: number) => void;\r\n  text: string;\r\n}\r\n\r\nconst Checkbox: FC<CheckboxProps> = ({\r\n  index,\r\n  className,\r\n  isChecked,\r\n  setChecked,\r\n  text,\r\n}) => {\r\n  return (\r\n    <div\r\n      className={className}\r\n      onClick={(event: MouseEvent<HTMLElement>) => {\r\n        event.preventDefault();\r\n        setChecked(index);\r\n      }}\r\n    >\r\n      <label>\r\n        <input type=\"checkbox\" />\r\n        <div className={`tick ${isChecked ? 'checked' : ''}`} />\r\n        {text}\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Checkbox;\r\n","import React, { Component } from 'react';\r\nimport { connect, ConnectedProps } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { withTranslation, WithTranslation } from 'react-i18next';\r\nimport { easeLinear, select } from 'd3';\r\nimport { scaleBand, scaleLinear } from 'd3-scale';\r\nimport { axisBottom, axisLeft } from 'd3-axis';\r\n\r\nimport { BarChartAnimationLength, Colors } from 'common/Constants';\r\nimport { getMaxTextWidth, getMoneyString } from 'utils/util';\r\nimport './BarChart.scss';\r\n\r\nexport interface BarChartProps\r\n  extends WithTranslation,\r\n    ConnectedProps<typeof connector> {\r\n  setSize: () => void;\r\n  isLarge: boolean;\r\n}\r\n\r\nexport interface DataPoint {\r\n  label: string;\r\n  value: number;\r\n}\r\n\r\nexport const nonVisualizibleData = ['prevBalance', 'error', 'loading'];\r\n\r\nclass BarChart extends Component<BarChartProps> {\r\n  domNode = null;\r\n  height = 0;\r\n  width = 0;\r\n  data: Array<DataPoint> = [];\r\n  selection: any;\r\n  node: any;\r\n\r\n  componentDidMount() {\r\n    const values: Array<number> = [];\r\n    const labels: Array<string> = [];\r\n    const { chart, t } = this.props;\r\n    for (let key in chart) {\r\n      if (\r\n        chart.hasOwnProperty(key) &&\r\n        // @ts-ignore\r\n        chart[key] &&\r\n        !nonVisualizibleData.includes(key)\r\n      ) {\r\n        values.push(\r\n          // @ts-ignore\r\n          chart[key].length === 1\r\n            ? // @ts-ignore\r\n              chart[key][0].amount\r\n            : // @ts-ignore\r\n              chart[key].reduce((prev, next) => {\r\n                return (\r\n                  (prev.amount || prev.amount === 0 ? prev.amount : prev) +\r\n                  next.amount\r\n                );\r\n              }, 0),\r\n        );\r\n        labels.push(t(`COMMON.CATEGORIES.${key}`));\r\n      }\r\n    }\r\n    this.data = values.map((value, i) => {\r\n      return { value, label: labels[i] };\r\n    });\r\n    window.addEventListener('resize', this.resize);\r\n    setTimeout(this.draw, 500);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.resize);\r\n  }\r\n\r\n  resize = () => {\r\n    this.props.setSize();\r\n    this.draw();\r\n  };\r\n\r\n  draw = () => {\r\n    const svgSelection: any = select('svg');\r\n    if (\r\n      svgSelection._groups &&\r\n      svgSelection._groups[0] &&\r\n      svgSelection._groups[0][0]\r\n    ) {\r\n      select('svg').remove();\r\n    }\r\n    this.selection = select(this.node);\r\n    this.domNode = this.selection.node();\r\n    const node = select(this.domNode);\r\n\r\n    const margin = {\r\n      top: 30,\r\n      right: 20,\r\n      bottom:\r\n        getMaxTextWidth(\r\n          this.data.map((d) => d.label),\r\n          'normal 12px JmhTypewriter',\r\n        ) + 10,\r\n      left: 80,\r\n    };\r\n    let isHorizontalLabels = false;\r\n\r\n    this.width = isNaN(parseInt(node.style('width'), 10))\r\n      // @ts-ignore\r\n      ? (node._groups && node._groups[0] && node._groups[0][0])\r\n        // @ts-ignore\r\n        ? node._groups[0][0].offsetWidth - margin.left - margin.right\r\n        : this.props.isLarge\r\n        ? window.innerWidth * 0.8 - margin.left - margin.right\r\n        : Math.min(366, window.innerWidth - margin.left - margin.right)\r\n      : parseInt(node.style('width'), 10) - margin.left - margin.right;\r\n\r\n    const barPadding = 20;\r\n    const barWidth = (this.width - barPadding) / this.data.length;\r\n\r\n    if (margin.bottom < barWidth) {\r\n      isHorizontalLabels = true;\r\n      margin.bottom = 30;\r\n    }\r\n\r\n    this.height = (this.props.isLarge ? 500 : 300) - margin.top - margin.bottom;\r\n\r\n    const x = scaleBand().rangeRound([0, this.width]).padding(0.1);\r\n    const y = scaleLinear().rangeRound([this.height, 0]);\r\n\r\n    const svg = this.selection.append('svg').attr('class', 'bar-chart');\r\n\r\n    svg\r\n      .attr('width', this.width + margin.left + margin.right)\r\n      .attr('height', this.height + margin.top + margin.bottom);\r\n\r\n    // axes' data\r\n    x.domain(this.data.map((d) => d.label));\r\n    y.domain([0, Math.max(...this.data.map((data) => Math.abs(data.value)))]);\r\n\r\n    // the main group\r\n    const g = svg\r\n      .append('g')\r\n      .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\r\n\r\n    // axis x\r\n    g.append('g')\r\n      .attr('class', 'axis axis--x')\r\n      .attr('transform', 'translate(0,' + this.height + ')')\r\n      .call(axisBottom(x))\r\n      .selectAll('text')\r\n      .style('text-anchor', 'end')\r\n      .style('fill', Colors.costBlue)\r\n      .style('stroke', 'none')\r\n      .attr('class', 'label-text')\r\n      .attr('dx', isHorizontalLabels ? 0 : '-.8em')\r\n      .attr('dy', isHorizontalLabels ? '.9em' : '-.55em');\r\n\r\n    // axis-x labels\r\n    g.selectAll('.label-text')\r\n      .nodes()\r\n      .forEach((node: SVGTextContentElement) => {\r\n        select(node).attr('transform', () =>\r\n          isHorizontalLabels\r\n            ? 'translate(' + node.getComputedTextLength() / 2 + ', 0)'\r\n            : 'rotate(-90)',\r\n        );\r\n      });\r\n\r\n    // axis-y\r\n    g.append('g').attr('class', 'axis axis--y').call(axisLeft(y).ticks(5));\r\n\r\n    // bars\r\n    g.selectAll('.bar')\r\n      .data(this.data)\r\n      .enter()\r\n      .append('rect')\r\n      .style('fill', (d: DataPoint) =>\r\n        d.value >= 0\r\n          ? d.label === 'Egyenleg'\r\n            ? Colors.costGreen\r\n            : Colors.costBlue\r\n          : Colors.costRed,\r\n      )\r\n      .style('stroke', 'none')\r\n      .attr('class', 'bar')\r\n      .attr('width', barWidth - barPadding)\r\n      .attr('y', this.height - 1)\r\n      .attr(\r\n        'transform',\r\n        (d: DataPoint, i: number) =>\r\n          'translate(' + [barWidth * i + barPadding, 0] + ')',\r\n      )\r\n      .transition()\r\n      .duration(BarChartAnimationLength)\r\n      .ease(easeLinear)\r\n      .attr('y', (d: DataPoint) => y(Math.abs(d.value)))\r\n      .attr('height', (d: DataPoint) => this.height - y(Math.abs(d.value)));\r\n\r\n    setTimeout(() => {\r\n      // amount-text\r\n      g.selectAll('.amount-text')\r\n        .data(this.data)\r\n        .enter()\r\n        .append('text')\r\n        .text((d: DataPoint) => getMoneyString(d.value))\r\n        .style('fill', (d: DataPoint) =>\r\n          d.value >= 0\r\n            ? d.label === 'Egyenleg'\r\n              ? Colors.costGreen\r\n              : Colors.costBlue\r\n            : Colors.costRed,\r\n        )\r\n        .attr('class', 'amount-text')\r\n        .attr('x', (d: DataPoint, i: number) => i * barWidth + barPadding)\r\n        .attr('y', (d: DataPoint) => y(Math.abs(d.value)) - 5)\r\n        .style('opacity', 0)\r\n        .transition()\r\n        .duration(200)\r\n        .ease(easeLinear)\r\n        .style('opacity', 1);\r\n\r\n      // centering amount-text\r\n      g.selectAll('.amount-text')\r\n        .nodes()\r\n        .forEach((node: SVGTextContentElement) => {\r\n          select(node).attr(\r\n            'transform',\r\n            () =>\r\n              'translate(' +\r\n              (barWidth - barPadding - node.getComputedTextLength()) / 2 +\r\n              ', 0)',\r\n          );\r\n        });\r\n    }, BarChartAnimationLength - 100);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className={`bar-chart-container ${this.props.isLarge ? '' : 'small'}`}\r\n        ref={(r) => (this.node = r)}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: ApplicationState) => {\r\n  return {\r\n    chart: state.chart,\r\n  };\r\n};\r\n\r\nconst connector = connect(mapStateToProps, {});\r\n\r\nexport default compose(connector)(withTranslation()(BarChart));\r\n","import React, { FC, useEffect, useState } from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport BarChart from './BarChart';\r\nimport { Dialog, DialogProps } from 'components/dialog/Dialog';\r\n\r\nexport interface BarChartModalProps extends DialogProps {\r\n  numberOfBars: number;\r\n}\r\n\r\nexport const BarChartModal: FC<BarChartModalProps> = ({\r\n  numberOfBars,\r\n  shown,\r\n  title,\r\n  onClose,\r\n}) => {\r\n  const [isLarge, setLarge] = useState<boolean>(\r\n    window.innerWidth >= 992 && numberOfBars > 3,\r\n  );\r\n\r\n  const handleResize = () => {\r\n    setLarge(window.innerWidth >= 992 && numberOfBars > 3);\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('resize', handleResize);\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    handleResize();\r\n  }, [numberOfBars]);\r\n\r\n  return (\r\n    <Dialog\r\n      shown={shown}\r\n      title={title}\r\n      className={classNames('bar-chart-modal', { small: !isLarge })}\r\n      onClose={onClose}\r\n    >\r\n      <BarChart isLarge={isLarge} setSize={handleResize} />\r\n    </Dialog>\r\n  );\r\n};\r\n","import React, { Component } from 'react';\r\nimport { Button, DropdownButton } from 'react-bootstrap';\r\nimport { connect, ConnectedProps } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { withTranslation, WithTranslation } from 'react-i18next';\r\nimport classNames from 'classnames';\r\n\r\nimport { ToggleButton } from 'components/togglebutton/ToggleButton';\r\nimport Checkbox from 'components/checkbox/Checkbox';\r\nimport { BarChartModal } from './BarChartModal';\r\nimport { LineChartModal } from './LineChartModal';\r\nimport { CategoryCheckboxes, Months } from 'common/Constants';\r\nimport { ChartParamsModel } from 'models/chart.model';\r\nimport { ToggleState } from 'models/query.model';\r\nimport { getMonths, getYearItems } from 'components/dropdown/DropDownItems';\r\nimport { getChartData } from 'store/chart';\r\nimport './Charts.scss';\r\n\r\nexport interface ChartProps\r\n  extends WithTranslation,\r\n    ConnectedProps<typeof connector> {}\r\n\r\nexport interface ChartState {\r\n  intervalType: IntervalType;\r\n  selectedYear: number;\r\n  selectedMonthIndex: number;\r\n  activeChartTypeToggle: ToggleState;\r\n  categories: Array<boolean>;\r\n  sumChecked: boolean;\r\n  isButtonDisabled: boolean;\r\n  isBarChartShown: boolean;\r\n  isLineChartShown: boolean;\r\n}\r\n\r\nexport enum IntervalType {\r\n  Month = 'month',\r\n  Year = 'year',\r\n  Full = 'full',\r\n}\r\n\r\nclass Charts extends Component<ChartProps, ChartState> {\r\n  state = {\r\n    intervalType: IntervalType.Month,\r\n    selectedYear: new Date().getFullYear(),\r\n    selectedMonthIndex: new Date().getMonth(),\r\n    activeChartTypeToggle: ToggleState.Left,\r\n    categories: new Array(CategoryCheckboxes.length).fill(false),\r\n    sumChecked: false,\r\n    isButtonDisabled: true,\r\n    isBarChartShown: false,\r\n    isLineChartShown: false,\r\n  };\r\n\r\n  getParams = () => {\r\n    const params: ChartParamsModel = {};\r\n    const { selectedMonthIndex, selectedYear } = this.state;\r\n    switch (this.state.intervalType) {\r\n      case IntervalType.Month:\r\n        params.min_month = selectedMonthIndex;\r\n        params.max_month = selectedMonthIndex;\r\n        params.min_year = selectedYear;\r\n        params.max_year = selectedYear;\r\n        break;\r\n      case IntervalType.Year:\r\n        params.min_year = selectedYear;\r\n        params.max_year = selectedYear;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    params.category_types = this.getCategoryTypesParam();\r\n    params.categories = this.getCategoriesParam();\r\n    return params;\r\n  };\r\n\r\n  getCategoriesParam = () => {\r\n    const { t } = this.props;\r\n    const { categories } = this.state;\r\n    return CategoryCheckboxes.slice(3)\r\n      .reduce(\r\n        (prev, next) =>\r\n          (prev === CategoryCheckboxes[3]\r\n            ? categories[3]\r\n              ? t(`COMMON.ENGLISH_CATEGORIES.${prev}`) + ','\r\n              : ''\r\n            : prev) +\r\n          (categories[CategoryCheckboxes.indexOf(next)]\r\n            ? t(`COMMON.ENGLISH_CATEGORIES.${next}`) + ','\r\n            : ''),\r\n      )\r\n      .slice(0, -1);\r\n  };\r\n\r\n  getCategoryTypesParam = () => {\r\n    const { t } = this.props;\r\n    let categoryTypes = '';\r\n    for (let i = 0; i < 3; i++) {\r\n      if (this.state.categories[i]) {\r\n        categoryTypes +=\r\n          t(`COMMON.ENGLISH_CATEGORIES.${CategoryCheckboxes[i]}`) + ',';\r\n      }\r\n    }\r\n    return categoryTypes.slice(0, -1);\r\n  };\r\n\r\n  isButtonDisabled = () => {\r\n    const checked = this.getNumberOfCheckedCategories();\r\n    return (\r\n      checked === 0 ||\r\n      (this.state.activeChartTypeToggle === ToggleState.Right && checked > 8)\r\n    );\r\n  };\r\n\r\n  getNumberOfCheckedCategories = () =>\r\n    this.state.categories.reduce((prev, next) => +prev + +next);\r\n\r\n  setChecked = (index?: number) => {\r\n    if (!!index || index === 0) {\r\n      const categories = this.state.categories;\r\n      categories[index] = !categories[index];\r\n      this.setState({\r\n        categories: categories,\r\n        isButtonDisabled: this.isButtonDisabled(),\r\n      });\r\n    }\r\n  };\r\n\r\n  setSumChecked = () => {\r\n    this.setState({ sumChecked: !this.state.sumChecked });\r\n  };\r\n\r\n  getCheckboxes = () => {\r\n    const { categories, activeChartTypeToggle, sumChecked } = this.state;\r\n    return CategoryCheckboxes.map((text: string) => {\r\n      return (\r\n        <div\r\n          className=\"checkbox-parent col-xl-2 col-lg-3 col-md-4 col-sm-4 col-xs-6\"\r\n          key={CategoryCheckboxes.indexOf(text)}\r\n        >\r\n          <Checkbox\r\n            index={CategoryCheckboxes.indexOf(text)}\r\n            className=\"checkbox\"\r\n            isChecked={categories[CategoryCheckboxes.indexOf(text)]}\r\n            setChecked={this.setChecked}\r\n            text={text}\r\n          />\r\n          {text === 'Egyenleg' &&\r\n          activeChartTypeToggle === ToggleState.Right ? (\r\n            <div className=\"sumbox-container\">\r\n              <span>(&Sigma;</span>\r\n              <Checkbox\r\n                index={-1}\r\n                text=\"\"\r\n                isChecked={sumChecked}\r\n                className=\"checkbox sumbox\"\r\n                setChecked={this.setSumChecked}\r\n              />\r\n              <span>)</span>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  onRadioButtonClick = (active: IntervalType) => {\r\n    this.setState({ intervalType: active });\r\n  };\r\n\r\n  onSelectYear = async (year: number) => {\r\n    let month = this.state.selectedMonthIndex;\r\n    const now = new Date();\r\n    if (\r\n      year === now.getFullYear() &&\r\n      this.state.selectedMonthIndex > now.getMonth()\r\n    ) {\r\n      month = now.getMonth();\r\n    }\r\n    if (year === 2015 && this.state.selectedMonthIndex < 8) {\r\n      month = 8;\r\n    }\r\n    await this.setState({ selectedYear: year, selectedMonthIndex: month });\r\n  };\r\n\r\n  onSelectMonth = async (index: number) => {\r\n    await this.setState({ selectedMonthIndex: index });\r\n  };\r\n\r\n  switchChartType = () => {\r\n    this.setState({\r\n      activeChartTypeToggle:\r\n        this.state.activeChartTypeToggle === ToggleState.Left\r\n          ? ToggleState.Right\r\n          : ToggleState.Left,\r\n    });\r\n  };\r\n\r\n  getChartData = async () => {\r\n    await this.props.getChartData(this.getParams());\r\n    if (\r\n      this.state.intervalType !== IntervalType.Month &&\r\n      this.state.activeChartTypeToggle === ToggleState.Right\r\n    ) {\r\n      this.setState({ isLineChartShown: true });\r\n    } else {\r\n      this.setState({ isBarChartShown: true });\r\n    }\r\n  };\r\n\r\n  hideBarChartModal = () => {\r\n    this.setState({ isBarChartShown: false });\r\n  };\r\n\r\n  hideLineChartModal = () => {\r\n    this.setState({ isLineChartShown: false });\r\n  };\r\n\r\n  render() {\r\n    const { t } = this.props;\r\n    const {\r\n      intervalType,\r\n      selectedYear,\r\n      selectedMonthIndex,\r\n      activeChartTypeToggle,\r\n      sumChecked,\r\n      isBarChartShown,\r\n      isButtonDisabled,\r\n      isLineChartShown,\r\n    } = this.state;\r\n    return (\r\n      <div className=\"chart-container\">\r\n        <div className=\"cost-label\">{t('CHART.INTERVAL_TYPE')}</div>\r\n        <div className=\"button-group\">\r\n          <Button\r\n            className={classNames('button-group-item month col-xs-4', {\r\n              active: intervalType === IntervalType.Month,\r\n            })}\r\n            onClick={() => this.onRadioButtonClick(IntervalType.Month)}\r\n          >\r\n            {t('CHART.MONTHLY')}\r\n          </Button>\r\n          <Button\r\n            className={classNames('button-group-item year col-xs-4', {\r\n              active: intervalType === IntervalType.Year,\r\n            })}\r\n            onClick={() => this.onRadioButtonClick(IntervalType.Year)}\r\n          >\r\n            {t('CHART.YEARLY')}\r\n          </Button>\r\n          <Button\r\n            className={classNames('button-group-item full col-xs-4', {\r\n              active: intervalType === IntervalType.Full,\r\n            })}\r\n            onClick={() => this.onRadioButtonClick(IntervalType.Full)}\r\n          >\r\n            {t('CHART.FULL')}\r\n          </Button>\r\n        </div>\r\n        <div\r\n          className={classNames('interval-container', {\r\n            row: intervalType === IntervalType.Month,\r\n          })}\r\n        >\r\n          {intervalType !== IntervalType.Full && (\r\n            <div\r\n              className={classNames('dropdown-container year', {\r\n                'col-xs-12 col-sm-6 w_50': intervalType === IntervalType.Month,\r\n              })}\r\n            >\r\n              <div className=\"year\">\r\n                <div className=\"cost-label\">{t('CHART.YEAR')}</div>\r\n                <DropdownButton title={selectedYear} id=\"year-dropdown\">\r\n                  {getYearItems(this.onSelectYear)}\r\n                </DropdownButton>\r\n              </div>\r\n            </div>\r\n          )}\r\n          {intervalType === IntervalType.Month && (\r\n            <div className={'dropdown-container month col-xs-12 col-sm-6'}>\r\n              <div className=\"month\">\r\n                <div className=\"cost-label\">{t('CHART.MONTH')}</div>\r\n                <DropdownButton\r\n                  title={Months[selectedMonthIndex]}\r\n                  id=\"month-dropdown\"\r\n                >\r\n                  {getMonths(this.onSelectMonth, selectedYear)}\r\n                </DropdownButton>\r\n              </div>\r\n            </div>\r\n          )}\r\n          {intervalType !== IntervalType.Month && (\r\n            <div\r\n              className={`dropdown-container type ${\r\n                intervalType === 'year' ? 'col-xs-6' : 'col-xs-12 full-sized'\r\n              }`}\r\n            >\r\n              <div className=\"chart-type\">\r\n                <div className=\"cost-label\">{t('CHART.CHART_TYPE')}</div>\r\n                <ToggleButton\r\n                  active={activeChartTypeToggle}\r\n                  onClick={this.switchChartType}\r\n                  leftText={t('CHART.AMOUNT')}\r\n                  rightText={t('CHART.TREND')}\r\n                />\r\n              </div>\r\n            </div>\r\n          )}\r\n          <div style={{ clear: 'both' }} />\r\n        </div>\r\n        <div className=\"category-container\">\r\n          <div className=\"cost-label\">{t('CHART.CATEGORIES')}</div>\r\n          <div className=\"checkbox-container row no-gutters\">\r\n            {this.getCheckboxes()}\r\n          </div>\r\n          <div style={{ clear: 'both' }} />\r\n        </div>\r\n        <div className=\"button-container\">\r\n          <Button\r\n            className=\"btn\"\r\n            onClick={this.getChartData}\r\n            disabled={isButtonDisabled}\r\n          >\r\n            {t('COMMON.OK')}\r\n          </Button>\r\n        </div>\r\n        <BarChartModal\r\n          shown={isBarChartShown}\r\n          title={t('CHART.BAR_CHART_SUM_BY_CATEGORIES')}\r\n          onClose={this.hideBarChartModal}\r\n          numberOfBars={this.getNumberOfCheckedCategories()}\r\n        />\r\n        <LineChartModal\r\n          shown={isLineChartShown}\r\n          title={t('CHART.LINE_CHART_SUM_BY_CATEGORIES')}\r\n          onClose={this.hideLineChartModal}\r\n          isSum={sumChecked}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  getChartData,\r\n};\r\n\r\nconst connector = connect(null, mapDispatchToProps);\r\n\r\nexport default compose(connector)(withTranslation()(Charts));\r\n","import React, { Component } from 'react';\r\nimport { connect, ConnectedProps } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { WithTranslation, withTranslation } from 'react-i18next';\r\nimport {\r\n  curveMonotoneX,\r\n  line as d3line,\r\n  select,\r\n  selectAll,\r\n  easeLinear,\r\n  interpolateString,\r\n} from 'd3';\r\nimport { scaleBand, scaleLinear } from 'd3-scale';\r\nimport { axisBottom, axisLeft } from 'd3-axis';\r\n\r\nimport {\r\n  getMaxTextWidth,\r\n  getMoneyString,\r\n  getMonthLabel,\r\n  getTextWidth,\r\n} from 'utils/util';\r\nimport { Colors, LineChartAnimationLength, LineColors } from 'common/Constants';\r\nimport { ChartKey, MappedDataPoint } from 'models/chart.model';\r\nimport './LineChart.scss';\r\n\r\nexport interface LineChartProps\r\n  extends WithTranslation,\r\n    ConnectedProps<typeof connector> {\r\n  setSize: () => void;\r\n  isLarge: boolean;\r\n  isSum: boolean;\r\n}\r\n\r\nclass LineChart extends Component<LineChartProps> {\r\n  domNode = null;\r\n  height = 0;\r\n  width = 0;\r\n  legends: Array<string> = [];\r\n  labels: Array<string> = [];\r\n  selection: any;\r\n  tooltipWidth = 150;\r\n  tooltipHeight = 40;\r\n  margin = {\r\n    top: 60,\r\n    right: 20,\r\n    bottom: 30,\r\n    left: 80,\r\n  };\r\n  node: any;\r\n\r\n  componentDidMount() {\r\n    const { t, chart } = this.props;\r\n    for (let key in chart) {\r\n      if (\r\n        chart.hasOwnProperty(key) &&\r\n        key !== 'prevBalance' &&\r\n        chart[key as keyof typeof chart]\r\n      ) {\r\n        this.legends.push(t(`COMMON.CATEGORIES.${key}`));\r\n        if (!this.labels.length) {\r\n          (chart[key as keyof typeof chart] as MappedDataPoint[]).forEach(\r\n            (d: MappedDataPoint) => {\r\n              this.labels.push(getMonthLabel(d.year, d.month));\r\n            },\r\n          );\r\n        }\r\n      }\r\n    }\r\n    window.addEventListener('resize', this.resize);\r\n    this.draw();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.resize);\r\n  }\r\n\r\n  resize = () => {\r\n    this.props.setSize();\r\n    this.draw();\r\n  };\r\n\r\n  draw = () => {\r\n    const { chart, isSum, t } = this.props;\r\n    const svgSelection: any = select('svg');\r\n    if (\r\n      svgSelection._groups &&\r\n      svgSelection._groups[0] &&\r\n      svgSelection._groups[0][0]\r\n    ) {\r\n      select('svg').remove();\r\n    }\r\n    this.selection = select(this.node);\r\n    this.domNode = this.selection.node();\r\n    let isHorizontalLabels = false;\r\n    this.width =\r\n      parseInt(\r\n        window.getComputedStyle(\r\n          document.getElementsByClassName('modal-dialog')[0],\r\n        ).width,\r\n        10,\r\n      ) -\r\n      this.margin.left -\r\n      this.margin.right;\r\n    this.margin.bottom =\r\n      getMaxTextWidth(this.labels, 'normal 12px JmhTypewriter') + 10;\r\n    if (this.margin.bottom < this.width / this.labels.length) {\r\n      isHorizontalLabels = true;\r\n      this.margin.bottom = 30;\r\n    }\r\n    this.height =\r\n      (this.props.isLarge ? 500 : 300) - this.margin.top - this.margin.bottom;\r\n\r\n    const xScale = scaleBand().domain(this.labels).rangeRound([0, this.width]);\r\n\r\n    let minValue = 0;\r\n    let maxValue = 0;\r\n    for (let key in chart) {\r\n      if (\r\n        chart.hasOwnProperty(key) &&\r\n        key !== ChartKey.PrevBalance &&\r\n        chart[key as keyof typeof chart]\r\n      ) {\r\n        minValue = Math.min(\r\n          minValue,\r\n          ...(chart[key as keyof typeof chart] as MappedDataPoint[])?.map(\r\n            (d: MappedDataPoint) => {\r\n              return isSum && key === 'BALANCE' ? d.sumAmount || 0 : d.amount;\r\n            },\r\n          ),\r\n        );\r\n        maxValue = Math.max(\r\n          maxValue,\r\n          ...(chart[key as keyof typeof chart] as MappedDataPoint[]).map(\r\n            (d: MappedDataPoint) => {\r\n              return isSum && key === 'BALANCE' ? d.sumAmount || 0 : d.amount;\r\n            },\r\n          ),\r\n        );\r\n      }\r\n    }\r\n    const yScale = scaleLinear()\r\n      .domain([minValue, maxValue])\r\n      .rangeRound([this.height, 0]);\r\n\r\n    const mapX = (index: number) => {\r\n      return ((index + 0.5) * this.width) / this.labels.length;\r\n    };\r\n\r\n    const mapY = (value: number) => {\r\n      return (\r\n        this.height - (this.height * (value - minValue)) / (maxValue - minValue)\r\n      );\r\n    };\r\n\r\n    const svg = this.selection.append('svg').attr('class', 'line-chart');\r\n\r\n    // outer-g group is for legend\r\n    svg\r\n      .attr('width', this.width + this.margin.left + this.margin.right)\r\n      .attr('height', this.height + this.margin.top + this.margin.bottom)\r\n      .append('g')\r\n      .attr('class', 'outer-g');\r\n\r\n    // draw the legend\r\n    let shift = 0;\r\n    for (let key in chart) {\r\n      if (\r\n        chart.hasOwnProperty(key) &&\r\n        key !== 'prevBalance' &&\r\n        chart[key as keyof typeof chart]\r\n      ) {\r\n        select('.outer-g')\r\n          .append('circle')\r\n          .attr('class', 'legend-circle ' + key.toLowerCase())\r\n          .attr('stroke', this.getColor(key))\r\n          .attr('stroke-width', 3)\r\n          .attr('fill', Colors.lightGray)\r\n          .attr('r', 3)\r\n          .attr('transform', 'translate(' + shift + ', 30)');\r\n        shift += 10;\r\n        select('.outer-g')\r\n          .append('text')\r\n          .text(\r\n            t(`COMMON.CATEGORIES.${key}`) +\r\n              (isSum && key === 'BALANCE' ? ' (\\u03A3)' : ''),\r\n          )\r\n          .attr('transform', 'translate(' + shift + ', 34)')\r\n          .attr('class', 'legend-text')\r\n          .style('fill', this.getColor(key));\r\n        shift +=\r\n          getTextWidth(\r\n            t(`COMMON.CATEGORIES.${key}`),\r\n            'normal 12px VarelaRound',\r\n          ) + (isSum && key === 'BALANCE' ? 60 : 40);\r\n      }\r\n    }\r\n\r\n    // position legend group to center\r\n    select('.outer-g').attr(\r\n      'transform',\r\n      'translate(' +\r\n        (this.margin.left + (this.width - this.margin.right - shift) / 2) +\r\n        ', 0)',\r\n    );\r\n\r\n    // the main chart group\r\n    const g = svg\r\n      .append('g')\r\n      .attr('class', 'chart-g')\r\n      .attr(\r\n        'transform',\r\n        'translate(' + this.margin.left + ',' + this.margin.top + ')',\r\n      );\r\n\r\n    // draw axis X with labels\r\n    g.append('g')\r\n      .attr('class', 'axis axis--x')\r\n      .attr('transform', 'translate(0,' + this.height + ')')\r\n      .call(axisBottom(xScale))\r\n      .selectAll('text')\r\n      .style('text-anchor', 'end')\r\n      .style('fill', Colors.costBlue)\r\n      .style('stroke', 'none')\r\n      .attr('class', 'label-text')\r\n      .attr('dx', isHorizontalLabels ? 0 : '-.8em')\r\n      .attr('dy', isHorizontalLabels ? '.9em' : '-.55em');\r\n\r\n    // position x-labels in an intelligent way (rotate or shift)\r\n    selectAll('.label-text')\r\n      .nodes()\r\n      .forEach((node) =>\r\n        select(node).attr(\r\n          'transform',\r\n          isHorizontalLabels\r\n            ? 'translate(' +\r\n                (node as SVGTextContentElement).getComputedTextLength() / 2 +\r\n                ', 0)'\r\n            : 'rotate(-90)',\r\n        ),\r\n      );\r\n\r\n    // draw axis Y\r\n    g.append('g').attr('class', 'axis axis--y').call(axisLeft(yScale).ticks(5));\r\n\r\n    // line drawer function\r\n    const line = d3line()\r\n      .x((_, i: number) => mapX(i))\r\n      .y((d: any) => {\r\n        return isSum && d.sumAmount ? mapY(d.sumAmount) : mapY(d.amount);\r\n      })\r\n      .curve(curveMonotoneX);\r\n\r\n    // draw each line\r\n    for (let key in chart) {\r\n      if (\r\n        chart.hasOwnProperty(key) &&\r\n        chart[key as keyof typeof chart] &&\r\n        key !== 'prevBalance'\r\n      ) {\r\n        g.append('path')\r\n          .attr('class', 'line')\r\n          // @ts-ignore\r\n          .attr('d', () => {\r\n            // @ts-ignore\r\n            return line(chart[key as keyof typeof chart]);\r\n          })\r\n          .attr('stroke', this.getColor(key))\r\n          .attr('stroke-width', 3)\r\n          .attr('fill', 'none')\r\n          .call(this.transition);\r\n      }\r\n    }\r\n\r\n    // draw dots at each data point\r\n    for (let key in chart) {\r\n      if (chart.hasOwnProperty(key) && chart[key as keyof typeof chart]) {\r\n        setTimeout(() => {\r\n          const that = this;\r\n          const selection = g\r\n            .selectAll('.dot.' + key.toLowerCase())\r\n            // @ts-ignore\r\n            .data(this.props.chart[key])\r\n            .enter()\r\n            .append('circle');\r\n          selection\r\n            .on('mouseover', function (event: Event, d: MappedDataPoint) {\r\n              const nodes = selection.nodes();\r\n              // @ts-ignore\r\n              const i = nodes.indexOf(this);\r\n              that.onMouseOver(d, i, nodes);\r\n            })\r\n            .on('mouseout', function (event: Event, d: MappedDataPoint) {\r\n              const nodes = selection.nodes();\r\n              // @ts-ignore\r\n              const i = nodes.indexOf(this);\r\n              that.onMouseOut(d, i, nodes);\r\n            })\r\n            .attr('class', 'dot ' + key.toLowerCase())\r\n            .attr('cx', (_: any, i: number) => mapX(i))\r\n            .attr('cy', (d: MappedDataPoint) => {\r\n              if (key === 'BALANCE') {\r\n                return isSum ? mapY(d.sumAmount || 0) : mapY(d.amount);\r\n              }\r\n              return mapY(d.amount);\r\n            })\r\n            .attr('stroke', this.getColor(key))\r\n            .attr('stroke-width', 3)\r\n            .attr('fill', Colors.lightGray)\r\n            .attr('r', 3)\r\n            .style('opacity', 0)\r\n            .transition()\r\n            .duration(200)\r\n            .ease(easeLinear)\r\n            .style('opacity', 1);\r\n        }, LineChartAnimationLength - 100);\r\n      }\r\n    }\r\n\r\n    // the tooltip\r\n    setTimeout(() => {\r\n      select('.chart-g')\r\n        .append('rect')\r\n        .attr('width', this.tooltipWidth)\r\n        .attr('height', this.tooltipHeight)\r\n        .attr('class', 'cost-tooltip')\r\n        .attr('rx', 20)\r\n        .attr('ry', 20)\r\n        .style('fill', Colors.lightGray)\r\n        .style('opacity', 0.85)\r\n        .style('stroke-width', 3)\r\n        .style('display', 'none');\r\n      // the tooltip text\r\n      select('.chart-g')\r\n        .append('text')\r\n        .attr('class', 'tooltip-text')\r\n        .style('display', 'none');\r\n    }, LineChartAnimationLength + 500);\r\n  };\r\n\r\n  onMouseOver(d: MappedDataPoint, i: number, nodes: any) {\r\n    const circle = select(nodes[i]);\r\n    const tooltipText =\r\n      circle.classed('balance') && this.props.isSum\r\n        ? getMoneyString(d.sumAmount || 0)\r\n        : getMoneyString(d.amount);\r\n    circle.attr('r', 5);\r\n    const translateX = Math.min(\r\n      this.width - this.tooltipWidth + this.margin.right - 3,\r\n      ((circle.attr('cx') as unknown) as number) - this.tooltipWidth / 2,\r\n    );\r\n    select('.cost-tooltip')\r\n      .attr(\r\n        'transform',\r\n        'translate(' +\r\n          translateX +\r\n          ', ' +\r\n          (((circle.attr('cy') as unknown) as number) -\r\n            this.tooltipHeight -\r\n            5) +\r\n          ')',\r\n      )\r\n      .style('stroke', circle.attr('stroke'))\r\n      .style('display', 'block');\r\n    select('.tooltip-text')\r\n      .text(tooltipText)\r\n      .attr(\r\n        'transform',\r\n        'translate(' +\r\n          (translateX +\r\n            (this.tooltipWidth -\r\n              getTextWidth(tooltipText, 'normal 16px VarelaRound')) /\r\n              2) +\r\n          ', ' +\r\n          (((circle.attr('cy') as unknown) as number) -\r\n            this.tooltipHeight / 2 +\r\n            2) +\r\n          ')',\r\n      )\r\n      .attr('fill', circle.attr('stroke'))\r\n      .style('display', 'block');\r\n  }\r\n\r\n  onMouseOut = (d: MappedDataPoint, i: number, nodes: any) => {\r\n    select(nodes[i]).attr('r', 3);\r\n    select('.cost-tooltip').style('display', 'none');\r\n    select('.tooltip-text').style('display', 'none');\r\n  };\r\n\r\n  transition = (path: any) => {\r\n    path\r\n      .transition()\r\n      .duration(LineChartAnimationLength)\r\n      .attrTween('stroke-dasharray', this.tweenDash);\r\n  };\r\n\r\n  tweenDash() {\r\n    const l = (this as any).getTotalLength(),\r\n      i = interpolateString('0,' + l, l + ',' + l);\r\n    // @ts-ignore\r\n    return (t) => i(t);\r\n  }\r\n\r\n  // @ts-ignore\r\n  getColor = (key) =>\r\n    key === 'BALANCE'\r\n      ? Colors.costBlue\r\n      : key === 'COST'\r\n      ? Colors.costRed\r\n      : key === 'INCOME'\r\n      ? Colors.costGreen\r\n      : LineColors[\r\n          this.legends.indexOf(this.props.t(`COMMON.CATEGORIES.${key}`)) %\r\n            LineColors.length\r\n        ];\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"line-chart-container\" ref={(r) => (this.node = r)} />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: ApplicationState) => {\r\n  return {\r\n    chart: state.chart,\r\n  };\r\n};\r\n\r\nconst connector = connect(mapStateToProps, {});\r\n\r\nexport default compose(connector)(withTranslation()(LineChart));\r\n","import React, { FC, useEffect, useState } from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport LineChart from './LineChart';\r\nimport { Dialog, DialogProps } from 'components/dialog/Dialog';\r\n\r\nexport interface LineChartModalProps extends DialogProps {\r\n  isSum: boolean;\r\n}\r\n\r\nexport const LineChartModal: FC<LineChartModalProps> = ({\r\n  isSum,\r\n  shown,\r\n  onClose,\r\n  title,\r\n}) => {\r\n  const [isLarge, setLarge] = useState<boolean>(window.innerWidth >= 992);\r\n\r\n  const handleResize = () => {\r\n    setLarge(window.innerWidth >= 992);\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('resize', handleResize);\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Dialog\r\n      shown={shown}\r\n      title={title}\r\n      className={classNames('line-chart-modal', { small: !isLarge })}\r\n      onClose={onClose}\r\n    >\r\n      <LineChart isLarge={isLarge} setSize={handleResize} isSum={isSum} />\r\n    </Dialog>\r\n  );\r\n};\r\n","import React, { FC, useEffect } from 'react';\r\nimport { connect, ConnectedProps } from 'react-redux';\r\nimport classNames from 'classnames';\r\n\r\nimport { NotificationType } from 'models/common.model';\r\nimport { hideNotification } from 'store/common';\r\nimport { compose } from \"utils/compose\";\r\nimport './Notification.scss';\r\n\r\ninterface NotificationProps extends ConnectedProps<typeof connector> {}\r\n\r\nexport const Notification: FC<NotificationProps> = (props) => {\r\n  useEffect(() => {\r\n    setTimeout(hideNotification, 2000);\r\n  }, []);\r\n\r\n  const {notification, hideNotification} = props;\r\n\r\n  return (\r\n    <div\r\n      className={classNames('bubble', {\r\n        error: notification?.type === NotificationType.Error\r\n      })}\r\n      onClick={hideNotification}\r\n    >\r\n      <div\r\n        className={classNames('inner', {\r\n          error: notification?.type === NotificationType.Error,\r\n        })}\r\n      >\r\n        {notification?.text}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: ApplicationState) => {\r\n  return {\r\n    notification: state.common.notification,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  hideNotification,\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default compose(connector)(Notification);\r\n","import React, { Component } from 'react';\r\nimport { connect, ConnectedProps } from 'react-redux';\r\nimport { Redirect, Route, Switch } from 'react-router';\r\n\r\nimport Header from 'components/header/Header';\r\nimport Login from 'pages/login/Login';\r\nimport Dashboard from 'pages/dashboard/Dashboard';\r\nimport Stats from 'pages/stats/Stats';\r\nimport Query from 'pages/query/Query';\r\nimport Charts from 'pages/chart/Charts';\r\nimport Notification from 'components/notification/Notification';\r\nimport { compose } from 'utils/compose';\r\nimport './App.scss';\r\n\r\ninterface AppProps extends ConnectedProps<typeof connector> {}\r\n\r\nclass App extends Component<AppProps> {\r\n  render() {\r\n    const { token, notification } = this.props;\r\n    return (\r\n      <div className=\"cost\">\r\n        <>\r\n          <Header authenticated={!!token} />\r\n          {!!token ? (\r\n            <Switch>\r\n              <Route exact path={'/cost'} component={Dashboard} />\r\n              <Route exact path={'/stats'} component={Stats} />\r\n              <Route exact path={'/query'} component={Query} />\r\n              <Route exact path=\"/chart\" component={Charts} />\r\n              <Redirect to={'/cost'} />\r\n            </Switch>\r\n          ) : (\r\n            <Login />\r\n          )}\r\n          {!!notification ? <Notification /> : null}s\r\n        </>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: ApplicationState) => {\r\n  return {\r\n    token: state.auth.token,\r\n    notification: state.common.notification,\r\n  };\r\n};\r\n\r\nconst connector = connect(mapStateToProps, {});\r\n\r\nexport default compose(connector)(App);\r\n","import React, { Suspense } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { Router } from 'react-router-dom';\r\nimport i18n from 'i18n';\r\nimport { I18nextProvider } from 'react-i18next';\r\nimport { createBrowserHistory } from 'history';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from 'store';\r\nimport App from 'pages/app/App';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './index.scss';\r\n\r\nconst history = createBrowserHistory();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <Suspense fallback=\" \">\r\n        <I18nextProvider i18n={i18n}>\r\n          <Router history={history}>\r\n            <App />\r\n          </Router>\r\n        </I18nextProvider>\r\n      </Suspense>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}